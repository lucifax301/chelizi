<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.coach.mapper.dao.ErrorAppealMapper" >
  <resultMap id="BaseResultMap" type="com.lili.coach.dto.ErrorAppeal" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="coachId" property="coachId" jdbcType="BIGINT" />
    <result column="appealContent" property="appealContent" jdbcType="VARCHAR" />
    <result column="itemIds" property="itemIds" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="checkStatus" property="checkStatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, coachId, appealContent, itemIds, ctime, mtime, checkStatus
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.coach.dto.ErrorAppealExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_coach_error_appeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_coach_error_appeal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_coach_error_appeal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.coach.dto.ErrorAppealExample" >
    delete from t_coach_error_appeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.coach.dto.ErrorAppeal" >
    insert into t_coach_error_appeal (id, coachId, appealContent, 
      itemIds, ctime, mtime, 
      checkStatus)
    values (#{id,jdbcType=INTEGER}, #{coachId,jdbcType=BIGINT}, #{appealContent,jdbcType=VARCHAR}, 
      #{itemIds,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, 
      #{checkStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lili.coach.dto.ErrorAppeal" >
    insert into t_coach_error_appeal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coachId != null" >
        coachId,
      </if>
      <if test="appealContent != null" >
        appealContent,
      </if>
      <if test="itemIds != null" >
        itemIds,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="checkStatus != null" >
        checkStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coachId != null" >
        #{coachId,jdbcType=BIGINT},
      </if>
      <if test="appealContent != null" >
        #{appealContent,jdbcType=VARCHAR},
      </if>
      <if test="itemIds != null" >
        #{itemIds,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.coach.dto.ErrorAppealExample" resultType="java.lang.Integer" >
    select count(*) from t_coach_error_appeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_coach_error_appeal
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coachId != null" >
        coachId = #{record.coachId,jdbcType=BIGINT},
      </if>
      <if test="record.appealContent != null" >
        appealContent = #{record.appealContent,jdbcType=VARCHAR},
      </if>
      <if test="record.itemIds != null" >
        itemIds = #{record.itemIds,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkStatus != null" >
        checkStatus = #{record.checkStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_coach_error_appeal
    set id = #{record.id,jdbcType=INTEGER},
      coachId = #{record.coachId,jdbcType=BIGINT},
      appealContent = #{record.appealContent,jdbcType=VARCHAR},
      itemIds = #{record.itemIds,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      checkStatus = #{record.checkStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.coach.dto.ErrorAppeal" >
    update t_coach_error_appeal
    <set >
      <if test="coachId != null" >
        coachId = #{coachId,jdbcType=BIGINT},
      </if>
      <if test="appealContent != null" >
        appealContent = #{appealContent,jdbcType=VARCHAR},
      </if>
      <if test="itemIds != null" >
        itemIds = #{itemIds,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkStatus != null" >
        checkStatus = #{checkStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.coach.dto.ErrorAppeal" >
    update t_coach_error_appeal
    set coachId = #{coachId,jdbcType=BIGINT},
      appealContent = #{appealContent,jdbcType=VARCHAR},
      itemIds = #{itemIds,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      checkStatus = #{checkStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.lili.coach.dto.ErrorAppealExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_coach_error_appeal
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>