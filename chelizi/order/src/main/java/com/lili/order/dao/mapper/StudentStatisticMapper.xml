<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lili.order.dao.mapper.StudentStatisticMapper">
  <sql id="setNotNull">
    <set>
      <if test="ssid!=null">ssid=#{ssid},</if>
      <if test="studentId!=null">student_id=#{studentId},</if>
      <if test="ctid!=null">ctid=#{ctid},</if>
      <if test="total!=null">total=#{total},</if>
      <if test="score!=null">score=#{score},</if>
    </set>
  </sql>
  <sql id="setNotNullparam1">
    <set>
      <if test="param1.ssid!=null">ssid=#{param1.ssid},</if>
      <if test="param1.studentId!=null">student_id=#{param1.studentId},</if>
      <if test="param1.ctid!=null">ctid=#{param1.ctid},</if>
      <if test="param1.total!=null">total=#{param1.total},</if>
      <if test="param1.score!=null">score=#{param1.score},</if>
    </set>
  </sql>
  <sql id="setNotNullparam2">
    <set>
      <if test="param2.ssid!=null">ssid=#{param2.ssid},</if>
      <if test="param2.studentId!=null">student_id=#{param2.studentId},</if>
      <if test="param2.ctid!=null">ctid=#{param2.ctid},</if>
      <if test="param2.total!=null">total=#{param2.total},</if>
      <if test="param2.score!=null">score=#{param2.score},</if>
    </set>
  </sql>
  <sql id="setAll">set ssid=#{ssid}, student_id=#{studentId}, ctid=#{ctid}, total=#{total}, score=#{score}</sql>
  <sql id="setAllparam1">set ssid=#{param1.ssid}, student_id=#{param1.studentId}, ctid=#{param1.ctid}, total=#{param1.total}, score=#{param1.score}</sql>
  <sql id="setAllparam2">set ssid=#{param2.ssid}, student_id=#{param2.studentId}, ctid=#{param2.ctid}, total=#{param2.total}, score=#{param2.score}</sql>
  <sql id="queryAnd">
    <where>
      <if test="ssid!=null and ssid != '' ">And ssid=#{ssid}</if>
      <if test="studentId!=null and studentId != '' ">And student_id=#{studentId}</if>
      <if test="ctid!=null and ctid != '' ">And ctid=#{ctid}</if>
      <if test="total!=null and total != '' ">And total=#{total}</if>
      <if test="score!=null and score != '' ">And score=#{score}</if>
    </where>
  </sql>
  <sql id="queryOr">
    <where>
      <if test="ssid!=null and ssid != '' ">Or ssid=#{ssid}</if>
      <if test="studentId!=null and studentId != '' ">Or student_id=#{studentId}</if>
      <if test="ctid!=null and ctid != '' ">Or ctid=#{ctid}</if>
      <if test="total!=null and total != '' ">Or total=#{total}</if>
      <if test="score!=null and score != '' ">Or score=#{score}</if>
    </where>
  </sql>
  <sql id="queryAndparam1">
    <where>
      <if test="param1.ssid!=null and param1.ssid != '' ">And ssid=#{param1.ssid}</if>
      <if test="param1.studentId!=null and param1.studentId != '' ">And student_id=#{param1.studentId}</if>
      <if test="param1.ctid!=null and param1.ctid != '' ">And ctid=#{param1.ctid}</if>
      <if test="param1.total!=null and param1.total != '' ">And total=#{param1.total}</if>
      <if test="param1.score!=null and param1.score != '' ">And score=#{param1.score}</if>
    </where>
  </sql>
  <sql id="queryAndparam2">
    <where>
      <if test="param2.ssid!=null and param2.ssid != '' ">And ssid=#{param2.ssid}</if>
      <if test="param2.studentId!=null and param2.studentId != '' ">And student_id=#{param2.studentId}</if>
      <if test="param2.ctid!=null and param2.ctid != '' ">And ctid=#{param2.ctid}</if>
      <if test="param2.total!=null and param2.total != '' ">And total=#{param2.total}</if>
      <if test="param2.score!=null and param2.score != '' ">And score=#{param2.score}</if>
    </where>
  </sql>
  <sql id="queryOrparam1">
    <where>
      <if test="param1.ssid!=null and param1.ssid != '' ">Or ssid=#{param1.ssid}</if>
      <if test="param1.studentId!=null and param1.studentId != '' ">Or student_id=#{param1.studentId}</if>
      <if test="param1.ctid!=null and param1.ctid != '' ">Or ctid=#{param1.ctid}</if>
      <if test="param1.total!=null and param1.total != '' ">Or total=#{param1.total}</if>
      <if test="param1.score!=null and param1.score != '' ">Or score=#{param1.score}</if>
    </where>
  </sql>
  <sql id="queryOrparam2">
    <where>
      <if test="param2.ssid!=null and param2.ssid != '' ">Or ssid=#{param2.ssid}</if>
      <if test="param2.studentId!=null and param2.studentId != '' ">Or student_id=#{param2.studentId}</if>
      <if test="param2.ctid!=null and param2.ctid != '' ">Or ctid=#{param2.ctid}</if>
      <if test="param2.total!=null and param2.total != '' ">Or total=#{param2.total}</if>
      <if test="param2.score!=null and param2.score != '' ">Or score=#{param2.score}</if>
    </where>
  </sql>
  <insert id="addStudentStatistic">
    <!--/*新增一个对象*/-->insert into t_student_statistic
    <include refid="setNotNull"/>
  </insert>
  <insert id="addStudentStatisticList">
    <!--/*新增一批对象*/-->insert into t_student_statistic values 
    <foreach collection="list" item="one" index="index" separator=",">(#{one.ssid},#{one.studentId},#{one.ctid},#{one.total},#{one.score})</foreach>
  </insert>
  <delete id="delStudentStatisticById">
    <!--/*根据id删除一个对象*/-->delete from t_student_statistic where ssid=#{ssid}
  </delete>
  <delete id="delStudentStatisticByIds">
    <!--/*根据id删除一个对象*/-->delete from t_student_statistic where ssid in 
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delStudentStatisticByObj">
    <!--/*根据对象中无为空的字段删除一个或者多个对象*/-->delete from t_student_statistic
    <include refid="queryAnd"/>
  </delete>
  <insert id="saveStudentStatistic">
    <!--/*新增或者更新一个对象*/-->replace into t_student_statistic
    <include refid="setNotNull"/>
  </insert>
  <insert id="saveStudentStatisticList">
    <!--/*新增或者更新一批对象*/-->replace into t_student_statistic values 
    <foreach collection="list" item="one" index="index" separator=",">(#{one.ssid},#{one.studentId},#{one.ctid},#{one.total},#{one.score})</foreach>
  </insert>
  <update id="updateBySsid">
    <!--/*根据字段ssid更新一个或者多个对象*/-->update t_student_statistic
    <include refid="setNotNullparam1"/> where ssid=#{param2}
  </update>
  <update id="updateByStudentId">
    <!--/*根据字段studentId更新一个或者多个对象*/-->update t_student_statistic
    <include refid="setNotNullparam1"/> where student_id=#{param2}
  </update>
  <update id="updateByCtid">
    <!--/*根据字段ctid更新一个或者多个对象*/-->update t_student_statistic
    <include refid="setNotNullparam1"/> where ctid=#{param2}
  </update>
  <update id="updateByTotal">
    <!--/*根据字段total更新一个或者多个对象*/-->update t_student_statistic
    <include refid="setNotNullparam1"/> where total=#{param2}
  </update>
  <update id="updateByScore">
    <!--/*根据字段score更新一个或者多个对象*/-->update t_student_statistic
    <include refid="setNotNullparam1"/> where score=#{param2}
  </update>
  <update id="updateNotNullByObject">
    <!--/*使用第二个对象作为条件在表中搜索，将得到的集合用第一个对象不为空的字段都进行更新*/-->update t_student_statistic 
    <include refid="setNotNullparam1"/>
    <include refid="queryAndparam2"/>
  </update>
  <update id="updateAllByObject">
    <!--/*使用第二个对象作为条件在表中搜索，将得到的集合用第一个对象不为空的字段都进行更新*/-->update t_student_statistic
    <include refid="setAllparam1"/>
    <include refid="queryAndparam2"/>
  </update>
  <select id="queryStudentStatisticById" resultType="StudentStatisticPo">
    <!--/*根据主键查询一个对象*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where ssid=#{param1} ${param2}
  </select>
  <select id="queryStudentStatisticByIds" resultType="StudentStatisticPo">
    <!--/*根据ids查询多个对象，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where ssid in 
    <foreach item="item" index="index" collection="param1" open="(" separator="," close=")">#{item}</foreach> ${param2}
  </select>
  <select id="queryByObjectAnd" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByObjectOr" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为OR条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryOrparam1"/> ${param2}
  </select>
  <select id="queryBySsid" resultType="StudentStatisticPo">
    <!--/*根据字段ssid查询一个或者多个对象，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where ssid=#{param1} ${param2}
  </select>
  <select id="queryByStudentId" resultType="StudentStatisticPo">
    <!--/*根据字段studentId查询一个或者多个对象，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where student_id=#{param1} ${param2}
  </select>
  <select id="queryByCtid" resultType="StudentStatisticPo">
    <!--/*根据字段ctid查询一个或者多个对象，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where ctid=#{param1} ${param2}
  </select>
  <select id="queryByTotal" resultType="StudentStatisticPo">
    <!--/*根据字段total查询一个或者多个对象，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where total=#{param1} ${param2}
  </select>
  <select id="queryByScore" resultType="StudentStatisticPo">
    <!--/*根据字段score查询一个或者多个对象，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic where score=#{param1} ${param2}
  </select>
  <select id="queryByNew0" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew1" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew2" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew3" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew4" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew5" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew6" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
  <select id="queryByNew7" resultType="StudentStatisticPo">
    <!--/*使用第一个对象所有不为空的字段作为AND条件在表中查询结果集，第二个参数为排序或者分页的sql语句*/-->select ssid as ssid,student_id as studentId,ctid as ctid,total as total,score as score from t_student_statistic
    <include refid="queryAndparam1"/> ${param2}
  </select>
</mapper>
