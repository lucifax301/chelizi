<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.order.dao.mapper.StudentClassPoolMapper" >
  <resultMap id="BaseResultMap" type="com.lili.order.dto.StudentClassPool" >
    <id column="orderId" property="orderId" jdbcType="VARCHAR" />
    <id column="coachId" property="coachId" jdbcType="BIGINT" />
    <result column="carId" property="carId" jdbcType="BIGINT" />
    <result column="studentId" property="studentId" jdbcType="BIGINT" />
    <result column="coachName" property="coachName" jdbcType="VARCHAR" />
    <result column="coachImg" property="coachImg" jdbcType="VARCHAR" />
    <result column="coachMobile" property="coachMobile" jdbcType="VARCHAR" />
    <result column="carNo" property="carNo" jdbcType="VARCHAR" />
    <result column="schoolName" property="schoolName" jdbcType="VARCHAR" />
    <result column="starLevel" property="starLevel" jdbcType="INTEGER" />
    <result column="distance" property="distance" jdbcType="DOUBLE" />
    <result column="placeId" property="placeId" jdbcType="INTEGER" />
    <result column="placeName" property="placeName" jdbcType="VARCHAR" />
    <result column="placeLge" property="placeLge" jdbcType="DOUBLE" />
    <result column="placeLae" property="placeLae" jdbcType="DOUBLE" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, coachId, carId, studentId, coachName, coachImg, coachMobile, carNo, schoolName, 
    starLevel, distance, placeId, placeName, placeLge, placeLae, state, ctime, mtime, 
    extra
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.order.dto.StudentClassPoolExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_student_class_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.lili.order.dto.StudentClassPoolKey" >
    select 
    <include refid="Base_Column_List" />
    from t_student_class_pool
    where orderId = #{orderId,jdbcType=VARCHAR}
      and coachId = #{coachId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lili.order.dto.StudentClassPoolKey" >
    delete from t_student_class_pool
    where orderId = #{orderId,jdbcType=VARCHAR}
      and coachId = #{coachId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.order.dto.StudentClassPoolExample" >
    delete from t_student_class_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.order.dto.StudentClassPool" >
    insert into t_student_class_pool (orderId, coachId, carId, 
      studentId, coachName, coachImg, 
      coachMobile, carNo, schoolName, 
      starLevel, distance, placeId, 
      placeName, placeLge, placeLae, 
      state, ctime, mtime, 
      extra)
    values (#{orderId,jdbcType=VARCHAR}, #{coachId,jdbcType=BIGINT}, #{carId,jdbcType=BIGINT}, 
      #{studentId,jdbcType=BIGINT}, #{coachName,jdbcType=VARCHAR}, #{coachImg,jdbcType=VARCHAR}, 
      #{coachMobile,jdbcType=VARCHAR}, #{carNo,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, 
      #{starLevel,jdbcType=INTEGER}, #{distance,jdbcType=DOUBLE}, #{placeId,jdbcType=INTEGER}, 
      #{placeName,jdbcType=VARCHAR}, #{placeLge,jdbcType=DOUBLE}, #{placeLae,jdbcType=DOUBLE}, 
      #{state,jdbcType=TINYINT}, #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, 
      #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lili.order.dto.StudentClassPool" >
    insert into t_student_class_pool
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="coachId != null" >
        coachId,
      </if>
      <if test="carId != null" >
        carId,
      </if>
      <if test="studentId != null" >
        studentId,
      </if>
      <if test="coachName != null" >
        coachName,
      </if>
      <if test="coachImg != null" >
        coachImg,
      </if>
      <if test="coachMobile != null" >
        coachMobile,
      </if>
      <if test="carNo != null" >
        carNo,
      </if>
      <if test="schoolName != null" >
        schoolName,
      </if>
      <if test="starLevel != null" >
        starLevel,
      </if>
      <if test="distance != null" >
        distance,
      </if>
      <if test="placeId != null" >
        placeId,
      </if>
      <if test="placeName != null" >
        placeName,
      </if>
      <if test="placeLge != null" >
        placeLge,
      </if>
      <if test="placeLae != null" >
        placeLae,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="coachId != null" >
        #{coachId,jdbcType=BIGINT},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="coachName != null" >
        #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="coachImg != null" >
        #{coachImg,jdbcType=VARCHAR},
      </if>
      <if test="coachMobile != null" >
        #{coachMobile,jdbcType=VARCHAR},
      </if>
      <if test="carNo != null" >
        #{carNo,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null" >
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="starLevel != null" >
        #{starLevel,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        #{distance,jdbcType=DOUBLE},
      </if>
      <if test="placeId != null" >
        #{placeId,jdbcType=INTEGER},
      </if>
      <if test="placeName != null" >
        #{placeName,jdbcType=VARCHAR},
      </if>
      <if test="placeLge != null" >
        #{placeLge,jdbcType=DOUBLE},
      </if>
      <if test="placeLae != null" >
        #{placeLae,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.order.dto.StudentClassPoolExample" resultType="java.lang.Integer" >
    select count(*) from t_student_class_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_student_class_pool
    <set >
      <if test="record.orderId != null" >
        orderId = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.coachId != null" >
        coachId = #{record.coachId,jdbcType=BIGINT},
      </if>
      <if test="record.carId != null" >
        carId = #{record.carId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        studentId = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.coachName != null" >
        coachName = #{record.coachName,jdbcType=VARCHAR},
      </if>
      <if test="record.coachImg != null" >
        coachImg = #{record.coachImg,jdbcType=VARCHAR},
      </if>
      <if test="record.coachMobile != null" >
        coachMobile = #{record.coachMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.carNo != null" >
        carNo = #{record.carNo,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolName != null" >
        schoolName = #{record.schoolName,jdbcType=VARCHAR},
      </if>
      <if test="record.starLevel != null" >
        starLevel = #{record.starLevel,jdbcType=INTEGER},
      </if>
      <if test="record.distance != null" >
        distance = #{record.distance,jdbcType=DOUBLE},
      </if>
      <if test="record.placeId != null" >
        placeId = #{record.placeId,jdbcType=INTEGER},
      </if>
      <if test="record.placeName != null" >
        placeName = #{record.placeName,jdbcType=VARCHAR},
      </if>
      <if test="record.placeLge != null" >
        placeLge = #{record.placeLge,jdbcType=DOUBLE},
      </if>
      <if test="record.placeLae != null" >
        placeLae = #{record.placeLae,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extra != null" >
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_student_class_pool
    set orderId = #{record.orderId,jdbcType=VARCHAR},
      coachId = #{record.coachId,jdbcType=BIGINT},
      carId = #{record.carId,jdbcType=BIGINT},
      studentId = #{record.studentId,jdbcType=BIGINT},
      coachName = #{record.coachName,jdbcType=VARCHAR},
      coachImg = #{record.coachImg,jdbcType=VARCHAR},
      coachMobile = #{record.coachMobile,jdbcType=VARCHAR},
      carNo = #{record.carNo,jdbcType=VARCHAR},
      schoolName = #{record.schoolName,jdbcType=VARCHAR},
      starLevel = #{record.starLevel,jdbcType=INTEGER},
      distance = #{record.distance,jdbcType=DOUBLE},
      placeId = #{record.placeId,jdbcType=INTEGER},
      placeName = #{record.placeName,jdbcType=VARCHAR},
      placeLge = #{record.placeLge,jdbcType=DOUBLE},
      placeLae = #{record.placeLae,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=TINYINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.order.dto.StudentClassPool" >
    update t_student_class_pool
    <set >
      <if test="carId != null" >
        carId = #{carId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        studentId = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="coachName != null" >
        coachName = #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="coachImg != null" >
        coachImg = #{coachImg,jdbcType=VARCHAR},
      </if>
      <if test="coachMobile != null" >
        coachMobile = #{coachMobile,jdbcType=VARCHAR},
      </if>
      <if test="carNo != null" >
        carNo = #{carNo,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null" >
        schoolName = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="starLevel != null" >
        starLevel = #{starLevel,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        distance = #{distance,jdbcType=DOUBLE},
      </if>
      <if test="placeId != null" >
        placeId = #{placeId,jdbcType=INTEGER},
      </if>
      <if test="placeName != null" >
        placeName = #{placeName,jdbcType=VARCHAR},
      </if>
      <if test="placeLge != null" >
        placeLge = #{placeLge,jdbcType=DOUBLE},
      </if>
      <if test="placeLae != null" >
        placeLae = #{placeLae,jdbcType=DOUBLE},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderId,jdbcType=VARCHAR}
      and coachId = #{coachId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.order.dto.StudentClassPool" >
    update t_student_class_pool
    set carId = #{carId,jdbcType=BIGINT},
      studentId = #{studentId,jdbcType=BIGINT},
      coachName = #{coachName,jdbcType=VARCHAR},
      coachImg = #{coachImg,jdbcType=VARCHAR},
      coachMobile = #{coachMobile,jdbcType=VARCHAR},
      carNo = #{carNo,jdbcType=VARCHAR},
      schoolName = #{schoolName,jdbcType=VARCHAR},
      starLevel = #{starLevel,jdbcType=INTEGER},
      distance = #{distance,jdbcType=DOUBLE},
      placeId = #{placeId,jdbcType=INTEGER},
      placeName = #{placeName,jdbcType=VARCHAR},
      placeLge = #{placeLge,jdbcType=DOUBLE},
      placeLae = #{placeLae,jdbcType=DOUBLE},
      state = #{state,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      extra = #{extra,jdbcType=VARCHAR}
    where orderId = #{orderId,jdbcType=VARCHAR}
      and coachId = #{coachId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.lili.order.dto.StudentClassPoolExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_student_class_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>