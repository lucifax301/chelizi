2015-10-09 17:14:58  [ main:0 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-10-09 17:14:59  [ main:943 ] - [ INFO ]  MLog clients using log4j logging.
2015-10-09 17:15:00  [ main:2034 ] - [ INFO ]  Initializing c3p0-0.9.1.1 [built 15-March-2007 01:32:31; debug? true; trace: 10]
2015-10-09 17:15:00  [ main:2056 ] - [ DEBUG ]  MBean: com.mchange.v2.c3p0:type=PooledDataSource[1hge16z9cl1yp341fjjg51|d032809] registered.
2015-10-09 17:15:02  [ main:3987 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4609 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4692 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.student.service.StudentService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4849 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4864 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4877 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4891 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.student.service.StudentService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4891 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.student.service.StudentService to url dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4891 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.student.service.StudentService url dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346 to registry registry://115.159.79.223:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.5.3&pid=9960&registry=zookeeper&timestamp=1444382103285, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4905 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4920 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4944 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4973 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:4991 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:5065 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:5136 ] - [ INFO ]   [DUBBO] Start NettyServer bind /0.0.0.0:20882, export /192.168.1.139:20882, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:5148 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:03  [ main:5217 ] - [ DEBUG ]  Creating new ZookKeeper instance to connect to 115.159.79.223:2181.
2015-10-09 17:15:03  [ ZkClient-EventThread-18-115.159.79.223:2181:5218 ] - [ INFO ]  Starting ZkClient event thread.
2015-10-09 17:15:03  [ main:5245 ] - [ INFO ]  Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2015-10-09 17:15:03  [ main:5245 ] - [ INFO ]  Client environment:host.name=yu-y
2015-10-09 17:15:03  [ main:5245 ] - [ INFO ]  Client environment:java.version=1.7.0_79
2015-10-09 17:15:03  [ main:5245 ] - [ INFO ]  Client environment:java.vendor=Oracle Corporation
2015-10-09 17:15:03  [ main:5245 ] - [ INFO ]  Client environment:java.home=D:\Program Files\Java\jdk1.7.0_79\jre
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:java.class.path=D:\Workspaces\MyEclipse 8.5\chelizi\student\target\test-classes;D:\Workspaces\MyEclipse 8.5\chelizi\student\target\classes;C:\Users\yu.y\AppData\Local\MyEclipse 2015\plugins\org.junit_4.11.0.v201303080030\junit.jar;C:\Users\yu.y\AppData\Local\MyEclipse 2015\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;D:\Workspaces\MyEclipse 8.5\chelizi\common\target\classes;D:\maven\repository\org\dom4j\dom4j\2.0.0-RC1\dom4j-2.0.0-RC1.jar;D:\maven\repository\net\java\dev\msv\xsdlib\2013.6.1\xsdlib-2013.6.1.jar;D:\maven\repository\relaxngDatatype\relaxngDatatype\20020414\relaxngDatatype-20020414.jar;D:\maven\repository\pull-parser\pull-parser\2\pull-parser-2.jar;D:\maven\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;D:\maven\repository\xpp3\xpp3\1.1.4c\xpp3-1.1.4c.jar;D:\maven\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;D:\maven\repository\javax\xml\bind\jaxb-api\2.2.12\jaxb-api-2.2.12.jar;D:\maven\repository\bouncycastle\bcprov-jdk16\140\bcprov-jdk16-140.jar;D:\maven\repository\javax\servlet\servlet-api\2.4\servlet-api-2.4.jar;D:\Workspaces\MyEclipse 8.5\chelizi\intapi\target\classes;D:\maven\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;D:\maven\repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;D:\maven\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;D:\maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\maven\repository\ch\qos\logback\logback-classic\1.0.9\logback-classic-1.0.9.jar;D:\maven\repository\ch\qos\logback\logback-core\1.0.9\logback-core-1.0.9.jar;D:\maven\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;D:\maven\repository\commons-logging\commons-logging\1.0.3\commons-logging-1.0.3.jar;D:\maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\maven\repository\org\springframework\spring-core\4.0.8.RELEASE\spring-core-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-web\4.0.8.RELEASE\spring-web-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-beans\4.0.8.RELEASE\spring-beans-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-context\4.0.8.RELEASE\spring-context-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-jdbc\4.0.8.RELEASE\spring-jdbc-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-context-support\4.0.8.RELEASE\spring-context-support-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-aop\4.0.8.RELEASE\spring-aop-4.0.8.RELEASE.jar;D:\maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\maven\repository\org\springframework\spring-aspects\4.0.8.RELEASE\spring-aspects-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-expression\4.0.8.RELEASE\spring-expression-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-tx\4.0.8.RELEASE\spring-tx-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-webmvc\4.0.8.RELEASE\spring-webmvc-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-test\4.0.8.RELEASE\spring-test-4.0.8.RELEASE.jar;D:\maven\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;D:\maven\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;D:\maven\repository\junit\junit\4.11\junit-4.11.jar;D:\maven\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;D:\maven\repository\org\quartz-scheduler\quartz\2.2.1\quartz-2.2.1.jar;D:\maven\repository\c3p0\c3p0\0.9.1.1\c3p0-0.9.1.1.jar;D:\maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\maven\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;D:\maven\repository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\maven\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;D:\maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;D:\maven\repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;D:\maven\repository\jline\jline\0.9.94\jline-0.9.94.jar;D:\maven\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;D:\maven\repository\org\springframework\data\spring-data-mongodb\1.7.2.RELEASE\spring-data-mongodb-1.7.2.RELEASE.jar;D:\maven\repository\org\springframework\data\spring-data-commons\1.10.2.RELEASE\spring-data-commons-1.10.2.RELEASE.jar;D:\maven\repository\org\mongodb\mongo-java-driver\2.13.0\mongo-java-driver-2.13.0.jar;D:\maven\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;/C:/Users/yu.y/AppData/Local/MyEclipse 2015/configuration/org.eclipse.osgi/811/0/.cp/;/C:/Users/yu.y/AppData/Local/MyEclipse 2015/configuration/org.eclipse.osgi/810/0/.cp/
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:java.library.path=D:\Program Files\Java\jdk1.7.0_79\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;D:\Program Files\Java\jdk1.7.0_79\bin;D:\Program Files\Java\jdk1.7.0_79\jre\bin;D:\Java\mysql-5.6.26-winx64\bin;D:\Java\maven\apache-maven-3.3.3\bin;;.
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:java.io.tmpdir=C:\Users\yu.y\AppData\Local\Temp\
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:java.compiler=<NA>
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:os.name=Windows 8.1
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:os.arch=amd64
2015-10-09 17:15:03  [ main:5246 ] - [ INFO ]  Client environment:os.version=6.3
2015-10-09 17:15:03  [ main:5247 ] - [ INFO ]  Client environment:user.name=yu.y
2015-10-09 17:15:03  [ main:5247 ] - [ INFO ]  Client environment:user.home=C:\Users\yu.y
2015-10-09 17:15:03  [ main:5247 ] - [ INFO ]  Client environment:user.dir=D:\Workspaces\MyEclipse 8.5\chelizi\student
2015-10-09 17:15:03  [ main:5248 ] - [ INFO ]  Initiating client connection, connectString=115.159.79.223:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@50e43880
2015-10-09 17:15:03  [ main:5251 ] - [ DEBUG ]  zookeeper.disableAutoWatchReset is false
2015-10-09 17:15:03  [ main:5259 ] - [ DEBUG ]  Awaiting connection to Zookeeper server
2015-10-09 17:15:03  [ main:5259 ] - [ DEBUG ]  Waiting for keeper state SyncConnected
2015-10-09 17:15:03  [ main-SendThread():5259 ] - [ INFO ]  Opening socket connection to server /115.159.79.223:2181
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):14907 ] - [ INFO ]  Socket connection established to 115.159.79.223/115.159.79.223:2181, initiating session
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):14929 ] - [ DEBUG ]  Session establishment request sent on 115.159.79.223/115.159.79.223:2181
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15050 ] - [ INFO ]  Session establishment complete on server 115.159.79.223/115.159.79.223:2181, sessionid = 0x14ff4023e4d0112, negotiated timeout = 30000
2015-10-09 17:15:13  [ main-EventThread:15056 ] - [ DEBUG ]  Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-09 17:15:13  [ main-EventThread:15057 ] - [ INFO ]  zookeeper state changed (SyncConnected)
2015-10-09 17:15:13  [ main-EventThread:15057 ] - [ DEBUG ]  Leaving process event
2015-10-09 17:15:13  [ main:15057 ] - [ DEBUG ]  State is SyncConnected
2015-10-09 17:15:13  [ main:15063 ] - [ INFO ]   [DUBBO] Register: dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15125 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,4490,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15187 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,4491,-110  request:: '/dubbo/com.lili.student.service.StudentService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15222 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4492,-110  request:: '/dubbo/com.lili.student.service.StudentService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15282 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,4493,0  request:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D9960%2526side%253Dprovider%2526timestamp%253D1444382103346,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D9960%2526side%253Dprovider%2526timestamp%253D1444382103346 
2015-10-09 17:15:13  [ main:15285 ] - [ INFO ]   [DUBBO] Subscribe: provider://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15333 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,4494,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15370 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,4495,-110  request:: '/dubbo/com.lili.student.service.StudentService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 17:15:13  [ main-SendThread(115.159.79.223:2181):15407 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,4496,-110  request:: '/dubbo/com.lili.student.service.StudentService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 17:15:14  [ main-SendThread(115.159.79.223:2181):15450 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,4496,0  request:: '/dubbo/com.lili.student.service.StudentService/configurators,T  response:: s{1152,1152,1444270221775,1444270221775,0,0,0,0,0,0,1152} 
2015-10-09 17:15:14  [ main-SendThread(115.159.79.223:2181):15486 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,4496,0  request:: '/dubbo/com.lili.student.service.StudentService/configurators,T  response:: v{} 
2015-10-09 17:15:14  [ main:15487 ] - [ INFO ]   [DUBBO] Notify urls for subscribe url provider://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, urls: [empty://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346], dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:14  [ main:15520 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:14  [ main:15540 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:24  [ main-SendThread(115.159.79.223:2181):25489 ] - [ DEBUG ]  Got ping response for sessionid: 0x14ff4023e4d0112 after 33ms
2015-10-09 17:15:24  [ DubboShutdownHook:26378 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:24  [ DubboShutdownHook:26379 ] - [ INFO ]   [DUBBO] Close all registries [zookeeper://115.159.79.223:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=9960&timestamp=1444382103285], dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:24  [ DubboShutdownHook:26379 ] - [ INFO ]   [DUBBO] Destroy registry:zookeeper://115.159.79.223:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=9960&timestamp=1444382103285, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:24  [ DubboShutdownHook:26380 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:24  [ Thread-2:26381 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:25  [ main-SendThread(115.159.79.223:2181):26421 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,4497,0  request:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D9960%2526side%253Dprovider%2526timestamp%253D1444382103346,-1  response:: null
2015-10-09 17:15:25  [ Thread-2:26422 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:25  [ main-SendThread(115.159.79.223:2181):26621 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 11,2  replyHeader:: 11,4498,-101  request:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D9960%2526side%253Dprovider%2526timestamp%253D1444382103346,-1  response:: null
2015-10-09 17:15:25  [ DubboShutdownHook:26622 ] - [ INFO ]   [DUBBO] Destroy unregister url dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:25  [ DubboShutdownHook:26622 ] - [ DEBUG ]  Closing ZkClient...
2015-10-09 17:15:25  [ ZkClient-EventThread-18-115.159.79.223:2181:26622 ] - [ INFO ]  Terminate ZkClient event thread.
2015-10-09 17:15:25  [ DubboShutdownHook:26622 ] - [ DEBUG ]  Closing ZooKeeper connected to 115.159.79.223:2181
2015-10-09 17:15:25  [ DubboShutdownHook:26623 ] - [ DEBUG ]  Closing session: 0x14ff4023e4d0112
2015-10-09 17:15:25  [ DubboShutdownHook:26623 ] - [ DEBUG ]  Closing client for session: 0x14ff4023e4d0112
2015-10-09 17:15:25  [ main-SendThread(115.159.79.223:2181):26658 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0112, packet:: clientPath:null serverPath:null finished:false header:: 12,-11  replyHeader:: 12,4499,0  request:: null response:: null
2015-10-09 17:15:25  [ DubboShutdownHook:26659 ] - [ DEBUG ]  Disconnecting client for session: 0x14ff4023e4d0112
2015-10-09 17:15:25  [ DubboShutdownHook:26660 ] - [ INFO ]  Session: 0x14ff4023e4d0112 closed
2015-10-09 17:15:25  [ main-EventThread:26660 ] - [ INFO ]  EventThread shut down
2015-10-09 17:15:25  [ DubboShutdownHook:26660 ] - [ DEBUG ]  Closing ZkClient...done
2015-10-09 17:15:25  [ DubboShutdownHook:26662 ] - [ INFO ]   [DUBBO] Close dubbo server: /192.168.1.139:20882, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:25  [ New I/O server worker #1-1:26677 ] - [ WARN ]   [DUBBO] All clients has discontected from /192.168.1.139:20882. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:25  [ DubboServerHandler-192.168.1.139:20882-thread-2:26679 ] - [ INFO ]   [DUBBO] disconected from /192.168.1.135:54176,url:dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 17:15:25  [ DubboShutdownHook:26700 ] - [ INFO ]   [DUBBO] Close NettyServer bind /0.0.0.0:20882, export /192.168.1.139:20882, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:11  [ main:0 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-10-09 18:00:12  [ main:768 ] - [ INFO ]  MLog clients using log4j logging.
2015-10-09 18:00:13  [ main:1972 ] - [ INFO ]  Initializing c3p0-0.9.1.1 [built 15-March-2007 01:32:31; debug? true; trace: 10]
2015-10-09 18:00:13  [ main:2013 ] - [ DEBUG ]  MBean: com.mchange.v2.c3p0:type=PooledDataSource[1hge16z9cl3ku4f1ummxfa|6bd62ed8] registered.
2015-10-09 18:00:13  [ main:2533 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2677 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2753 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.student.service.StudentService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2853 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2869 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2885 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2899 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.student.service.StudentService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2899 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.student.service.StudentService to url dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2900 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.student.service.StudentService url dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153 to registry registry://115.159.79.223:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.5.3&pid=8928&registry=zookeeper&timestamp=1444384814132, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2914 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2931 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2955 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2976 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:2992 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:3032 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:3095 ] - [ INFO ]   [DUBBO] Start NettyServer bind /0.0.0.0:20882, export /192.168.1.139:20882, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:3104 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:3142 ] - [ INFO ]   [DUBBO] Load registry store file C:\Users\yu.y\.dubbo\dubbo-registry-115.159.79.223.cache, data: {com.lili.student.service.StudentService=empty://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=9960&side=provider&timestamp=1444382103346}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:14  [ main:3181 ] - [ DEBUG ]  Creating new ZookKeeper instance to connect to 115.159.79.223:2181.
2015-10-09 18:00:14  [ ZkClient-EventThread-18-115.159.79.223:2181:3181 ] - [ INFO ]  Starting ZkClient event thread.
2015-10-09 18:00:14  [ main:3212 ] - [ INFO ]  Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2015-10-09 18:00:14  [ main:3212 ] - [ INFO ]  Client environment:host.name=yu-y
2015-10-09 18:00:14  [ main:3212 ] - [ INFO ]  Client environment:java.version=1.7.0_79
2015-10-09 18:00:14  [ main:3212 ] - [ INFO ]  Client environment:java.vendor=Oracle Corporation
2015-10-09 18:00:14  [ main:3213 ] - [ INFO ]  Client environment:java.home=D:\Program Files\Java\jdk1.7.0_79\jre
2015-10-09 18:00:14  [ main:3213 ] - [ INFO ]  Client environment:java.class.path=D:\Workspaces\MyEclipse 8.5\chelizi\student\target\test-classes;D:\Workspaces\MyEclipse 8.5\chelizi\student\target\classes;C:\Users\yu.y\AppData\Local\MyEclipse 2015\plugins\org.junit_4.11.0.v201303080030\junit.jar;C:\Users\yu.y\AppData\Local\MyEclipse 2015\plugins\org.hamcrest.core_1.3.0.v201303031735.jar;D:\Workspaces\MyEclipse 8.5\chelizi\common\target\classes;D:\maven\repository\org\dom4j\dom4j\2.0.0-RC1\dom4j-2.0.0-RC1.jar;D:\maven\repository\net\java\dev\msv\xsdlib\2013.6.1\xsdlib-2013.6.1.jar;D:\maven\repository\relaxngDatatype\relaxngDatatype\20020414\relaxngDatatype-20020414.jar;D:\maven\repository\pull-parser\pull-parser\2\pull-parser-2.jar;D:\maven\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;D:\maven\repository\xpp3\xpp3\1.1.4c\xpp3-1.1.4c.jar;D:\maven\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;D:\maven\repository\javax\xml\bind\jaxb-api\2.2.12\jaxb-api-2.2.12.jar;D:\maven\repository\bouncycastle\bcprov-jdk16\140\bcprov-jdk16-140.jar;D:\maven\repository\javax\servlet\servlet-api\2.4\servlet-api-2.4.jar;D:\Workspaces\MyEclipse 8.5\chelizi\intapi\target\classes;D:\maven\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;D:\maven\repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;D:\maven\repository\org\mybatis\mybatis-spring\1.2.2\mybatis-spring-1.2.2.jar;D:\maven\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\maven\repository\ch\qos\logback\logback-classic\1.0.9\logback-classic-1.0.9.jar;D:\maven\repository\ch\qos\logback\logback-core\1.0.9\logback-core-1.0.9.jar;D:\maven\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;D:\maven\repository\commons-logging\commons-logging\1.0.3\commons-logging-1.0.3.jar;D:\maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;D:\maven\repository\org\springframework\spring-core\4.0.8.RELEASE\spring-core-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-web\4.0.8.RELEASE\spring-web-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-beans\4.0.8.RELEASE\spring-beans-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-context\4.0.8.RELEASE\spring-context-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-jdbc\4.0.8.RELEASE\spring-jdbc-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-context-support\4.0.8.RELEASE\spring-context-support-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-aop\4.0.8.RELEASE\spring-aop-4.0.8.RELEASE.jar;D:\maven\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\maven\repository\org\springframework\spring-aspects\4.0.8.RELEASE\spring-aspects-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-expression\4.0.8.RELEASE\spring-expression-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-tx\4.0.8.RELEASE\spring-tx-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-webmvc\4.0.8.RELEASE\spring-webmvc-4.0.8.RELEASE.jar;D:\maven\repository\org\springframework\spring-test\4.0.8.RELEASE\spring-test-4.0.8.RELEASE.jar;D:\maven\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;D:\maven\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;D:\maven\repository\junit\junit\4.11\junit-4.11.jar;D:\maven\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;D:\maven\repository\org\quartz-scheduler\quartz\2.2.1\quartz-2.2.1.jar;D:\maven\repository\c3p0\c3p0\0.9.1.1\c3p0-0.9.1.1.jar;D:\maven\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;D:\maven\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;D:\maven\repository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;D:\maven\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;D:\maven\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\maven\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;D:\maven\repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;D:\maven\repository\jline\jline\0.9.94\jline-0.9.94.jar;D:\maven\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;D:\maven\repository\org\springframework\data\spring-data-mongodb\1.7.2.RELEASE\spring-data-mongodb-1.7.2.RELEASE.jar;D:\maven\repository\org\springframework\data\spring-data-commons\1.10.2.RELEASE\spring-data-commons-1.10.2.RELEASE.jar;D:\maven\repository\org\mongodb\mongo-java-driver\2.13.0\mongo-java-driver-2.13.0.jar;D:\maven\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;/C:/Users/yu.y/AppData/Local/MyEclipse 2015/configuration/org.eclipse.osgi/811/0/.cp/;/C:/Users/yu.y/AppData/Local/MyEclipse 2015/configuration/org.eclipse.osgi/810/0/.cp/
2015-10-09 18:00:14  [ main:3213 ] - [ INFO ]  Client environment:java.library.path=D:\Program Files\Java\jdk1.7.0_79\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\TortoiseSVN\bin;D:\Program Files\Java\jdk1.7.0_79\bin;D:\Program Files\Java\jdk1.7.0_79\jre\bin;D:\Java\mysql-5.6.26-winx64\bin;D:\Java\maven\apache-maven-3.3.3\bin;;.
2015-10-09 18:00:14  [ main:3213 ] - [ INFO ]  Client environment:java.io.tmpdir=C:\Users\yu.y\AppData\Local\Temp\
2015-10-09 18:00:14  [ main:3213 ] - [ INFO ]  Client environment:java.compiler=<NA>
2015-10-09 18:00:14  [ main:3213 ] - [ INFO ]  Client environment:os.name=Windows 8.1
2015-10-09 18:00:14  [ main:3214 ] - [ INFO ]  Client environment:os.arch=amd64
2015-10-09 18:00:14  [ main:3214 ] - [ INFO ]  Client environment:os.version=6.3
2015-10-09 18:00:14  [ main:3214 ] - [ INFO ]  Client environment:user.name=yu.y
2015-10-09 18:00:14  [ main:3214 ] - [ INFO ]  Client environment:user.home=C:\Users\yu.y
2015-10-09 18:00:14  [ main:3214 ] - [ INFO ]  Client environment:user.dir=D:\Workspaces\MyEclipse 8.5\chelizi\student
2015-10-09 18:00:14  [ main:3215 ] - [ INFO ]  Initiating client connection, connectString=115.159.79.223:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@518a2f90
2015-10-09 18:00:14  [ main:3217 ] - [ DEBUG ]  zookeeper.disableAutoWatchReset is false
2015-10-09 18:00:14  [ main:3225 ] - [ DEBUG ]  Awaiting connection to Zookeeper server
2015-10-09 18:00:14  [ main-SendThread():3225 ] - [ INFO ]  Opening socket connection to server /115.159.79.223:2181
2015-10-09 18:00:14  [ main:3226 ] - [ DEBUG ]  Waiting for keeper state SyncConnected
2015-10-09 18:00:23  [ main-SendThread(115.159.79.223:2181):12362 ] - [ INFO ]  Socket connection established to 115.159.79.223/115.159.79.223:2181, initiating session
2015-10-09 18:00:23  [ main-SendThread(115.159.79.223:2181):12379 ] - [ DEBUG ]  Session establishment request sent on 115.159.79.223/115.159.79.223:2181
2015-10-09 18:00:23  [ main-SendThread(115.159.79.223:2181):12423 ] - [ INFO ]  Session establishment complete on server 115.159.79.223/115.159.79.223:2181, sessionid = 0x14ff4023e4d0113, negotiated timeout = 30000
2015-10-09 18:00:23  [ main-EventThread:12428 ] - [ DEBUG ]  Received event: WatchedEvent state:SyncConnected type:None path:null
2015-10-09 18:00:23  [ main-EventThread:12430 ] - [ INFO ]  zookeeper state changed (SyncConnected)
2015-10-09 18:00:23  [ main-EventThread:12430 ] - [ DEBUG ]  Leaving process event
2015-10-09 18:00:23  [ main:12430 ] - [ DEBUG ]  State is SyncConnected
2015-10-09 18:00:23  [ main:12436 ] - [ INFO ]   [DUBBO] Register: dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:23  [ main-SendThread(115.159.79.223:2181):12511 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,4501,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 18:00:23  [ main-SendThread(115.159.79.223:2181):12567 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,4502,-110  request:: '/dubbo/com.lili.student.service.StudentService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 18:00:23  [ main-SendThread(115.159.79.223:2181):12614 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4503,-110  request:: '/dubbo/com.lili.student.service.StudentService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 18:00:24  [ main-SendThread(115.159.79.223:2181):12657 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,4504,0  request:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D8928%2526side%253Dprovider%2526timestamp%253D1444384814153,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D8928%2526side%253Dprovider%2526timestamp%253D1444384814153 
2015-10-09 18:00:24  [ main:12659 ] - [ INFO ]   [DUBBO] Subscribe: provider://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:24  [ main-SendThread(115.159.79.223:2181):12717 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,4505,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 18:00:24  [ main-SendThread(115.159.79.223:2181):12754 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,4506,-110  request:: '/dubbo/com.lili.student.service.StudentService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 18:00:24  [ main-SendThread(115.159.79.223:2181):12789 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,4507,-110  request:: '/dubbo/com.lili.student.service.StudentService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-10-09 18:00:24  [ main-SendThread(115.159.79.223:2181):12835 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,4507,0  request:: '/dubbo/com.lili.student.service.StudentService/configurators,T  response:: s{1152,1152,1444270221775,1444270221775,0,0,0,0,0,0,1152} 
2015-10-09 18:00:24  [ main-SendThread(115.159.79.223:2181):12871 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,4507,0  request:: '/dubbo/com.lili.student.service.StudentService/configurators,T  response:: v{} 
2015-10-09 18:00:24  [ main:12871 ] - [ INFO ]   [DUBBO] Notify urls for subscribe url provider://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, urls: [empty://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153], dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:24  [ main:12896 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:24  [ main:12919 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:34  [ main-SendThread(115.159.79.223:2181):22871 ] - [ DEBUG ]  Got ping response for sessionid: 0x14ff4023e4d0113 after 32ms
2015-10-09 18:00:44  [ main-SendThread(115.159.79.223:2181):32873 ] - [ DEBUG ]  Got ping response for sessionid: 0x14ff4023e4d0113 after 33ms
2015-10-09 18:00:47  [ DubboShutdownHook:36001 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36002 ] - [ INFO ]   [DUBBO] Close all registries [zookeeper://115.159.79.223:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8928&timestamp=1444384814132], dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36002 ] - [ INFO ]   [DUBBO] Destroy registry:zookeeper://115.159.79.223:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=8928&timestamp=1444384814132, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36003 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ Thread-2:36004 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ main-SendThread(115.159.79.223:2181):36041 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,4508,0  request:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D8928%2526side%253Dprovider%2526timestamp%253D1444384814153,-1  response:: null
2015-10-09 18:00:47  [ Thread-2:36041 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ main-SendThread(115.159.79.223:2181):36043 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 11,2  replyHeader:: 11,4509,-101  request:: '/dubbo/com.lili.student.service.StudentService/providers/dubbo%253A%252F%252F192.168.1.139%253A20882%252Fcom.lili.student.service.StudentService%253Fanyhost%253Dtrue%2526application%253Ddubbo-server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.student.service.StudentService%2526methods%253DaddStudent%252ClistStudents%252CdoReservation%252CdoEvaluation%252CdoPayment%252CmakeOrder%2526pid%253D8928%2526side%253Dprovider%2526timestamp%253D1444384814153,-1  response:: null
2015-10-09 18:00:47  [ DubboShutdownHook:36043 ] - [ INFO ]   [DUBBO] Destroy unregister url dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&dubbo=2.5.3&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36043 ] - [ DEBUG ]  Closing ZkClient...
2015-10-09 18:00:47  [ ZkClient-EventThread-18-115.159.79.223:2181:36043 ] - [ INFO ]  Terminate ZkClient event thread.
2015-10-09 18:00:47  [ DubboShutdownHook:36044 ] - [ DEBUG ]  Closing ZooKeeper connected to 115.159.79.223:2181
2015-10-09 18:00:47  [ DubboShutdownHook:36044 ] - [ DEBUG ]  Closing session: 0x14ff4023e4d0113
2015-10-09 18:00:47  [ DubboShutdownHook:36044 ] - [ DEBUG ]  Closing client for session: 0x14ff4023e4d0113
2015-10-09 18:00:47  [ main-SendThread(115.159.79.223:2181):36079 ] - [ DEBUG ]  Reading reply sessionid:0x14ff4023e4d0113, packet:: clientPath:null serverPath:null finished:false header:: 12,-11  replyHeader:: 12,4510,0  request:: null response:: null
2015-10-09 18:00:47  [ DubboShutdownHook:36079 ] - [ DEBUG ]  Disconnecting client for session: 0x14ff4023e4d0113
2015-10-09 18:00:47  [ DubboShutdownHook:36080 ] - [ INFO ]  Session: 0x14ff4023e4d0113 closed
2015-10-09 18:00:47  [ main-EventThread:36080 ] - [ INFO ]  EventThread shut down
2015-10-09 18:00:47  [ DubboShutdownHook:36080 ] - [ DEBUG ]  Closing ZkClient...done
2015-10-09 18:00:47  [ DubboShutdownHook:36080 ] - [ INFO ]   [DUBBO] Close dubbo server: /192.168.1.139:20882, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36084 ] - [ INFO ]   [DUBBO] Close NettyServer bind /0.0.0.0:20882, export /192.168.1.139:20882, dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36085 ] - [ INFO ]   [DUBBO] Close netty channel [id: 0x6b0174e9, /192.168.1.135:58183 => /192.168.1.139:20882], dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboShutdownHook:36086 ] - [ WARN ]   [DUBBO] All clients has discontected from /192.168.1.139:20882. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-10-09 18:00:47  [ DubboServerHandler-192.168.1.139:20882-thread-2:36087 ] - [ INFO ]   [DUBBO] disconected from /192.168.1.135:58183,url:dubbo://192.168.1.139:20882/com.lili.student.service.StudentService?anyhost=true&application=dubbo-server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.student.service.StudentService&methods=addStudent,listStudents,doReservation,doEvaluation,doPayment,makeOrder&pid=8928&side=provider&timestamp=1444384814153, dubbo version: 2.5.3, current host: 127.0.0.1
