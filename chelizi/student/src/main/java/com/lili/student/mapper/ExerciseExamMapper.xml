<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.student.mapper.dao.ExerciseExamMapper" >
  <resultMap id="BaseResultMap" type="com.lili.student.dto.ExerciseExam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentId" property="studentId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="examtime" property="examtime" jdbcType="INTEGER" />
    <result column="usetime" property="usetime" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentId, score, examtime, usetime, subject
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_u_exercise_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="queryExerScoreSum"  resultType="java.lang.Integer"  parameterType="com.lili.student.dto.ExerciseExam" >
    select 
  			count(*)
  		  from t_u_exercise_exam
   	 where studentId = #{studentId,jdbcType=BIGINT}
   	 <![CDATA[
   	  		and score >93
   	  ]]>
  </select>
  
  <select id="selectByStudentIdWithPage" resultMap="BaseResultMap" parameterType="com.lili.student.mapper.dao.ExerciseExamPage" >
    select
    <include refid="Base_Column_List" />
    from t_u_exercise_exam
    where studentId = #{studentId,jdbcType=INTEGER} and subject = #{subject,jdbcType=INTEGER} order by examtime desc limit #{startIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_u_exercise_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.lili.student.dto.ExerciseExam" >
    insert into t_u_exercise_exam (studentId, score,
      examtime, usetime, subject
      )
    values (#{studentId,jdbcType=BIGINT}, #{score,jdbcType=INTEGER},
      #{examtime,jdbcType=INTEGER}, #{usetime,jdbcType=INTEGER}, #{subject,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lili.student.dto.ExerciseExam" >
    insert into t_u_exercise_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        studentId,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="examtime != null" >
        examtime,
      </if>
      <if test="usetime != null" >
        usetime,
      </if>
      <if test="subject != null" >
        subject,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="examtime != null" >
        #{examtime,jdbcType=INTEGER},
      </if>
      <if test="usetime != null" >
        #{usetime,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.student.dto.ExerciseExam" >
    update t_u_exercise_exam
    <set >
      <if test="studentId != null" >
        studentId = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="examtime != null" >
        examtime = #{examtime,jdbcType=INTEGER},
      </if>
      <if test="usetime != null" >
        usetime = #{usetime,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.student.dto.ExerciseExam" >
    update t_u_exercise_exam
    set studentId = #{studentId,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      examtime = #{examtime,jdbcType=INTEGER},
      usetime = #{usetime,jdbcType=INTEGER},
      subject = #{subject,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>