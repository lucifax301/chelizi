<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.student.mapper.dao.MycoachesMapper">
	<resultMap id="BaseResultMap" type="com.lili.student.dto.Mycoaches">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="studentId" property="studentid" jdbcType="BIGINT" />
		<result column="coachId" property="coachid" jdbcType="BIGINT" />
		<result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="type" property="type" jdbcType="TINYINT" />
		<result column="syncType" property="syncType" jdbcType="INTEGER" />
		<result column="syncTime" property="syncTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, studentId, coachId, createTime, status, type, syncType, syncTime
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.lili.student.dto.MycoachesExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_u_mycoaches
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" 
		parameterType="java.lang.Integer">
		select
			<include refid="Base_Column_List" />
		from t_u_mycoaches
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="selectByUserId" resultType="java.lang.Long"  parameterType="com.lili.student.dto.Mycoaches">
		select
		 count(1)
		from t_u_mycoaches
			where studentId = #{studentid,jdbcType=BIGINT} and coachId =#{coachid,jdbcType=BIGINT} and type=0
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_u_mycoaches
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.lili.student.dto.MycoachesExample">
		delete from t_u_mycoaches
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lili.student.dto.Mycoaches">
		insert into t_u_mycoaches (id, studentId, coachId,
		createTime, status, type, syncType, syncTime
		)
		values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=BIGINT},
		#{coachid,jdbcType=BIGINT},
		#{createtime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT},
		#{syncType,jdbcType=INTEGER},#{syncTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.lili.student.dto.Mycoaches">
		insert into t_u_mycoaches
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="studentid != null">
				studentId,
			</if>
			<if test="coachid != null">
				coachId,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="syncType != null">
				syncType,
			</if>
			<if test="syncTime != null">
				syncTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="studentid != null">
				#{studentid,jdbcType=BIGINT},
			</if>
			<if test="coachid != null">
				#{coachid,jdbcType=BIGINT},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="type != null">
				#{type,jdbcType=TINYINT},
			</if>
			<if test="syncType != null">
				#{syncType,jdbcType=INTEGER},
			</if>
			<if test="syncTime != null">
				#{syncTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.lili.student.dto.MycoachesExample"
		resultType="java.lang.Integer">
		select count(*) from t_u_mycoaches
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_u_mycoaches
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.studentid != null">
				studentId = #{record.studentid,jdbcType=BIGINT},
			</if>
			<if test="record.coachid != null">
				coachId = #{record.coachid,jdbcType=BIGINT},
			</if>
			<if test="record.createtime != null">
				createTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=TINYINT},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=TINYINT},
			</if>
			<if test="record.syncType != null">
				syncType = #{record.syncType,jdbcType=INTEGER},
			</if>
			<if test="record.syncTime != null">
				syncTime = #{record.syncTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_u_mycoaches
		set id = #{record.id,jdbcType=INTEGER},
		studentId = #{record.studentid,jdbcType=BIGINT},
		coachId = #{record.coachid,jdbcType=BIGINT},
		createTime = #{record.createtime,jdbcType=TIMESTAMP},
		status = #{record.status,jdbcType=TINYINT},
		type = #{record.type,jdbcType=TINYINT},
		syncType =
		#{record.syncType,jdbcType=INTEGER},
		syncTime =
		#{record.syncTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lili.student.dto.Mycoaches">
		update t_u_mycoaches
		<set>
			<if test="studentid != null">
				studentId = #{studentid,jdbcType=BIGINT},
			</if>
			<if test="coachid != null">
				coachId = #{coachid,jdbcType=BIGINT},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=TINYINT},
			</if>
			<if test="syncType != null">
				syncType = #{syncType,jdbcType=INTEGER},
			</if>
			<if test="syncTime != null">
				syncTime = #{syncTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lili.student.dto.Mycoaches">
		update t_u_mycoaches
		set studentId = #{studentid,jdbcType=BIGINT},
		coachId = #{coachid,jdbcType=BIGINT},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=TINYINT},
		type = #{type,jdbcType=TINYINT},
		syncType =
		#{syncType,jdbcType=INTEGER},
		syncTime =
		#{syncTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>