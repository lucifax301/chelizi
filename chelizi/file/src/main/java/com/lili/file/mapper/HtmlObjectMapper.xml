<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.file.mapper.HtmlObjectMapper" >
  <resultMap id="BaseResultMap" type="com.lili.file.dto.HtmlObject" >
    <id column="hid" property="hid" jdbcType="INTEGER" />
    <result column="hname" property="hname" jdbcType="VARCHAR" />
    <result column="hdescription" property="hdescription" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lili.file.dto.HtmlObject" extends="BaseResultMap" >
    <result column="html" property="html" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    hid, hname, hdescription, url, extra, ctime, mtime
  </sql>
  <sql id="Blob_Column_List" >
    html
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lili.file.dto.HtmlObjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_u_html
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.file.dto.HtmlObjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_u_html
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_u_html
    where hid = #{hid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_u_html
    where hid = #{hid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.file.dto.HtmlObjectExample" >
    delete from t_u_html
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.file.dto.HtmlObject" >
    insert into t_u_html (hid, hname, hdescription, 
      url, extra, ctime, 
      mtime, html)
    values (#{hid,jdbcType=INTEGER}, #{hname,jdbcType=VARCHAR}, #{hdescription,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{extra,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{mtime,jdbcType=TIMESTAMP}, #{html,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lili.file.dto.HtmlObject" >
    insert into t_u_html
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hid != null" >
        hid,
      </if>
      <if test="hname != null" >
        hname,
      </if>
      <if test="hdescription != null" >
        hdescription,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="extra != null" >
        extra,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="html != null" >
        html,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hid != null" >
        #{hid,jdbcType=INTEGER},
      </if>
      <if test="hname != null" >
        #{hname,jdbcType=VARCHAR},
      </if>
      <if test="hdescription != null" >
        #{hdescription,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="html != null" >
        #{html,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.file.dto.HtmlObjectExample" resultType="java.lang.Integer" >
    select count(*) from t_u_html
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_u_html
    <set >
      <if test="record.hid != null" >
        hid = #{record.hid,jdbcType=INTEGER},
      </if>
      <if test="record.hname != null" >
        hname = #{record.hname,jdbcType=VARCHAR},
      </if>
      <if test="record.hdescription != null" >
        hdescription = #{record.hdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.extra != null" >
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.html != null" >
        html = #{record.html,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_u_html
    set hid = #{record.hid,jdbcType=INTEGER},
      hname = #{record.hname,jdbcType=VARCHAR},
      hdescription = #{record.hdescription,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      extra = #{record.extra,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      html = #{record.html,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_u_html
    set hid = #{record.hid,jdbcType=INTEGER},
      hname = #{record.hname,jdbcType=VARCHAR},
      hdescription = #{record.hdescription,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      extra = #{record.extra,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.file.dto.HtmlObject" >
    update t_u_html
    <set >
      <if test="hname != null" >
        hname = #{hname,jdbcType=VARCHAR},
      </if>
      <if test="hdescription != null" >
        hdescription = #{hdescription,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="html != null" >
        html = #{html,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where hid = #{hid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lili.file.dto.HtmlObject" >
    update t_u_html
    set hname = #{hname,jdbcType=VARCHAR},
      hdescription = #{hdescription,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      extra = #{extra,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      html = #{html,jdbcType=LONGVARCHAR}
    where hid = #{hid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.file.dto.HtmlObject" >
    update t_u_html
    set hname = #{hname,jdbcType=VARCHAR},
      hdescription = #{hdescription,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      extra = #{extra,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP}
    where hid = #{hid,jdbcType=INTEGER}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.lili.file.dto.HtmlObjectExample" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_u_html
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.lili.file.dto.HtmlObjectExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_u_html
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>