// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/java/com/lili/proto/pb/CoachLogin.proto

#ifndef PROTOBUF_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto__INCLUDED
#define PROTOBUF_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace lili {
namespace proto {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();
void protobuf_AssignDesc_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();
void protobuf_ShutdownFile_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();

class CoachLoginMsg;
class CoachLoginAckMsg;

// ===================================================================

class CoachLoginMsg : public ::google::protobuf::Message {
 public:
  CoachLoginMsg();
  virtual ~CoachLoginMsg();

  CoachLoginMsg(const CoachLoginMsg& from);

  inline CoachLoginMsg& operator=(const CoachLoginMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoachLoginMsg& default_instance();

  void Swap(CoachLoginMsg* other);

  // implements Message ----------------------------------------------

  CoachLoginMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoachLoginMsg& from);
  void MergeFrom(const CoachLoginMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // required string phoneNum = 2;
  inline bool has_phonenum() const;
  inline void clear_phonenum();
  static const int kPhoneNumFieldNumber = 2;
  inline const ::std::string& phonenum() const;
  inline void set_phonenum(const ::std::string& value);
  inline void set_phonenum(const char* value);
  inline void set_phonenum(const char* value, size_t size);
  inline ::std::string* mutable_phonenum();
  inline ::std::string* release_phonenum();
  inline void set_allocated_phonenum(::std::string* phonenum);

  // required int64 coachId = 3;
  inline bool has_coachid() const;
  inline void clear_coachid();
  static const int kCoachIdFieldNumber = 3;
  inline ::google::protobuf::int64 coachid() const;
  inline void set_coachid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:com.lili.proto.pb.CoachLoginMsg)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_phonenum();
  inline void clear_has_phonenum();
  inline void set_has_coachid();
  inline void clear_has_coachid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::std::string* phonenum_;
  ::google::protobuf::int64 coachid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();
  friend void protobuf_AssignDesc_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();
  friend void protobuf_ShutdownFile_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();

  void InitAsDefaultInstance();
  static CoachLoginMsg* default_instance_;
};
// -------------------------------------------------------------------

class CoachLoginAckMsg : public ::google::protobuf::Message {
 public:
  CoachLoginAckMsg();
  virtual ~CoachLoginAckMsg();

  CoachLoginAckMsg(const CoachLoginAckMsg& from);

  inline CoachLoginAckMsg& operator=(const CoachLoginAckMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoachLoginAckMsg& default_instance();

  void Swap(CoachLoginAckMsg* other);

  // implements Message ----------------------------------------------

  CoachLoginAckMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoachLoginAckMsg& from);
  void MergeFrom(const CoachLoginAckMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isSuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIsSuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // @@protoc_insertion_point(class_scope:com.lili.proto.pb.CoachLoginAckMsg)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool issuccess_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();
  friend void protobuf_AssignDesc_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();
  friend void protobuf_ShutdownFile_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto();

  void InitAsDefaultInstance();
  static CoachLoginAckMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// CoachLoginMsg

// required string token = 1;
inline bool CoachLoginMsg::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoachLoginMsg::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoachLoginMsg::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoachLoginMsg::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& CoachLoginMsg::token() const {
  return *token_;
}
inline void CoachLoginMsg::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CoachLoginMsg::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CoachLoginMsg::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CoachLoginMsg::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* CoachLoginMsg::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CoachLoginMsg::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string phoneNum = 2;
inline bool CoachLoginMsg::has_phonenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoachLoginMsg::set_has_phonenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoachLoginMsg::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoachLoginMsg::clear_phonenum() {
  if (phonenum_ != &::google::protobuf::internal::kEmptyString) {
    phonenum_->clear();
  }
  clear_has_phonenum();
}
inline const ::std::string& CoachLoginMsg::phonenum() const {
  return *phonenum_;
}
inline void CoachLoginMsg::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::kEmptyString) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(value);
}
inline void CoachLoginMsg::set_phonenum(const char* value) {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::kEmptyString) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(value);
}
inline void CoachLoginMsg::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::kEmptyString) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CoachLoginMsg::mutable_phonenum() {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::kEmptyString) {
    phonenum_ = new ::std::string;
  }
  return phonenum_;
}
inline ::std::string* CoachLoginMsg::release_phonenum() {
  clear_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phonenum_;
    phonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CoachLoginMsg::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum_ != &::google::protobuf::internal::kEmptyString) {
    delete phonenum_;
  }
  if (phonenum) {
    set_has_phonenum();
    phonenum_ = phonenum;
  } else {
    clear_has_phonenum();
    phonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 coachId = 3;
inline bool CoachLoginMsg::has_coachid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoachLoginMsg::set_has_coachid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoachLoginMsg::clear_has_coachid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoachLoginMsg::clear_coachid() {
  coachid_ = GOOGLE_LONGLONG(0);
  clear_has_coachid();
}
inline ::google::protobuf::int64 CoachLoginMsg::coachid() const {
  return coachid_;
}
inline void CoachLoginMsg::set_coachid(::google::protobuf::int64 value) {
  set_has_coachid();
  coachid_ = value;
}

// -------------------------------------------------------------------

// CoachLoginAckMsg

// required bool isSuccess = 1;
inline bool CoachLoginAckMsg::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoachLoginAckMsg::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoachLoginAckMsg::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoachLoginAckMsg::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool CoachLoginAckMsg::issuccess() const {
  return issuccess_;
}
inline void CoachLoginAckMsg::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace proto
}  // namespace lili
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_main_2fjava_2fcom_2flili_2fproto_2fpb_2fCoachLogin_2eproto__INCLUDED
