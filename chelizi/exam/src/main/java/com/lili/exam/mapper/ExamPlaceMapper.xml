<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.exam.mapper.ExamPlaceMapper" >
  <resultMap id="BaseResultMap" type="com.lili.exam.dto.ExamPlace" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="INTEGER" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="lge" property="lge" jdbcType="DECIMAL" />
    <result column="lae" property="lae" jdbcType="DECIMAL" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="cityId" property="cityId" jdbcType="INTEGER" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="schoolId" property="schoolId" jdbcType="INTEGER" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
    <result column="servicetype" property="servicetype" jdbcType="INTEGER" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, type, area, contact, mobile, address, lge, lae, city, cityId, school, schoolId, 
    days, state, ctime, mtime, extra,servicetype
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.exam.dto.ExamPlaceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_exam_place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectBySPKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    
    a.id, a.name, a.type, a.area, a.contact, a.mobile, a.address, a.lge, a.lae, a.city, a.cityId, a.school, a.schoolId, 
    a.days, a.state, a.ctime, a.mtime, a.extra
    
    from t_exam_place a join t_s_school b on a.schoolId=b.schoolId
    where b.examkey = #{examkey}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_exam_place
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_exam_place
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.exam.dto.ExamPlaceExample" >
    delete from t_exam_place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.exam.dto.ExamPlace" >
    insert into t_exam_place (id, name, type, 
      area, contact, mobile, 
      address, lge, lae, 
      city, cityId, school, 
      schoolId, days, state, 
      ctime, mtime, extra
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{area,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{lge,jdbcType=DECIMAL}, #{lae,jdbcType=DECIMAL}, 
      #{city,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, 
      #{schoolId,jdbcType=INTEGER}, #{days,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{extra,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lili.exam.dto.ExamPlace" >
    insert into t_exam_place
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="lge != null" >
        lge,
      </if>
      <if test="lae != null" >
        lae,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="cityId != null" >
        cityId,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="schoolId != null" >
        schoolId,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=INTEGER},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="lge != null" >
        #{lge,jdbcType=DECIMAL},
      </if>
      <if test="lae != null" >
        #{lae,jdbcType=DECIMAL},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="days != null" >
        #{days,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.exam.dto.ExamPlaceExample" resultType="java.lang.Integer" >
    select count(*) from t_exam_place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_exam_place
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.lge != null" >
        lge = #{record.lge,jdbcType=DECIMAL},
      </if>
      <if test="record.lae != null" >
        lae = #{record.lae,jdbcType=DECIMAL},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null" >
        cityId = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        schoolId = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.days != null" >
        days = #{record.days,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extra != null" >
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_exam_place
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      lge = #{record.lge,jdbcType=DECIMAL},
      lae = #{record.lae,jdbcType=DECIMAL},
      city = #{record.city,jdbcType=VARCHAR},
      cityId = #{record.cityId,jdbcType=INTEGER},
      school = #{record.school,jdbcType=VARCHAR},
      schoolId = #{record.schoolId,jdbcType=INTEGER},
      days = #{record.days,jdbcType=INTEGER},
      state = #{record.state,jdbcType=TINYINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.exam.dto.ExamPlace" >
    update t_exam_place
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="lge != null" >
        lge = #{lge,jdbcType=DECIMAL},
      </if>
      <if test="lae != null" >
        lae = #{lae,jdbcType=DECIMAL},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        cityId = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        schoolId = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.exam.dto.ExamPlace" >
    update t_exam_place
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      lge = #{lge,jdbcType=DECIMAL},
      lae = #{lae,jdbcType=DECIMAL},
      city = #{city,jdbcType=VARCHAR},
      cityId = #{cityId,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      schoolId = #{schoolId,jdbcType=INTEGER},
      days = #{days,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      extra = #{extra,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.lili.exam.dto.ExamPlaceExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_exam_place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>