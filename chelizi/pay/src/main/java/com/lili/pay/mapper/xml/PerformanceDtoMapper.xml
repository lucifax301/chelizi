<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.pay.mapper.dao.PerformanceDtoMapper" >
  <resultMap id="BaseResultMap" type="com.lili.pay.dto.PerformanceDto" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="coachId" property="coachId" jdbcType="BIGINT" />
    <result column="performance" property="performance" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="orderId" property="orderid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, coachId, performance, date, course, orderId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_u_performance
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getPerformanceDtosByPage" resultMap="BaseResultMap"
		parameterType="com.lili.pay.wallet.PerformancePage">
		select
		<include refid="Base_Column_List" />
		from t_u_performance
		where coachId = #{coachId,jdbcType=BIGINT} order by date desc limit
		#{index, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
	</select>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_u_performance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lili.pay.dto.PerformanceDto" >
    insert into t_u_performance (id, coachId, performance, 
      date, course, orderId
      )
    values (#{id,jdbcType=INTEGER}, #{coachId,jdbcType=BIGINT}, #{performance,jdbcType=INTEGER}, 
      #{date,jdbcType=TIMESTAMP}, #{course,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lili.pay.dto.PerformanceDto" >
    insert into t_u_performance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coachId != null" >
        coachId,
      </if>
      <if test="performance != null" >
        performance,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coachId != null" >
        #{coachId,jdbcType=BIGINT},
      </if>
      <if test="performance != null" >
        #{performance,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.pay.dto.PerformanceDto" >
    update t_u_performance
    <set >
      <if test="coachId != null" >
        coachId = #{coachId,jdbcType=BIGINT},
      </if>
      <if test="performance != null" >
        performance = #{performance,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.pay.dto.PerformanceDto" >
    update t_u_performance
    set coachId = #{coachId,jdbcType=BIGINT},
      performance = #{performance,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      course = #{course,jdbcType=VARCHAR},
      orderId = #{orderid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>