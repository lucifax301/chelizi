<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.pay.mapper.dao.BrokerageEnrollMapper">
    <resultMap id="BaseResultMap" type="com.lili.pay.dto.BrokerageEnroll">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="regionId" property="regionId" jdbcType="INTEGER"/>
        <result column="schoolId" property="schoolId" jdbcType="INTEGER"/>
        <result column="brokerageType" property="brokerageType" jdbcType="TINYINT"/>
        <result column="brokerage" property="brokerage" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, regionId, schoolId, brokerageType, brokerage
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_brokerage_enroll
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_brokerage_enroll
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lili.pay.dto.BrokerageEnroll">
    insert into t_brokerage_enroll (id, regionId, schoolId, brokerageType, brokerage
      )
    values (#{id,jdbcType=INTEGER}, #{regionId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER},
      #{brokerageType,jdbcType=TINYINT}, #{brokerage,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.lili.pay.dto.BrokerageEnroll">
        insert into t_brokerage_enroll
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="regionId != null">
                regionId,
            </if>
            <if test="schoolId != null">
                schoolId,
            </if>
            <if test="brokerageType != null">
                brokerageType,
            </if>
            <if test="brokerage != null">
                brokerage,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="regionId != null">
                #{regionId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="brokerageType != null">
                #{brokerageType,jdbcType=TINYINT},
            </if>
            <if test="brokerage != null">
                #{brokerage,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lili.pay.dto.BrokerageEnroll">
        update t_brokerage_enroll
        <set>
            <if test="regionId != null">
                regionId = #{regionId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                schoolId = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="brokerageType != null">
                brokerageType = #{brokerageType,jdbcType=TINYINT},
            </if>
            <if test="brokerage != null">
                brokerage = #{brokerage,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lili.pay.dto.BrokerageEnroll">
        update t_brokerage_enroll
        set regionId = #{regionId,jdbcType=INTEGER},
          schoolId = #{schoolId,jdbcType=INTEGER},
          brokerageType = #{brokerageType,jdbcType=TINYINT},
          brokerage = #{brokerage,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectRightBrokerage" resultMap="BaseResultMap" parameterType="com.lili.pay.dto.BrokerageEnroll">
        select
        <include refid="Base_Column_List"/>
        from t_brokerage_enroll
        where regionId = #{regionId,jdbcType=INTEGER}
        and schoolId = #{schoolId,jdbcType=INTEGER}
    </select>


</mapper>