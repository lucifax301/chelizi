<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.pay.mapper.dao.SchoolAccountMapper" >
  <resultMap id="BaseResultMap" type="com.lili.pay.dto.SchoolAccount" >
    <id column="schoolId" property="schoolId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="examPlaceMax" property="examPlaceMax" jdbcType="INTEGER" />
    <result column="examPlaceNow" property="examPlaceNow" jdbcType="INTEGER" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    schoolId, money, passwd, mobile, examPlaceMax, examPlaceNow, extra
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_s_schaccount
    where schoolId = #{schoolId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_s_schaccount
    where schoolId = #{schoolId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lili.pay.dto.SchoolAccount" >
    insert into t_s_schaccount (schoolId, money, passwd, 
      mobile, examPlaceMax, examPlaceNow, 
      extra)
    values (#{schoolId,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, #{passwd,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{examPlaceMax,jdbcType=INTEGER}, #{examPlaceNow,jdbcType=INTEGER}, 
      #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lili.pay.dto.SchoolAccount" >
    insert into t_s_schaccount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schoolId != null" >
        schoolId,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="examPlaceMax != null" >
        examPlaceMax,
      </if>
      <if test="examPlaceNow != null" >
        examPlaceNow,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="examPlaceMax != null" >
        #{examPlaceMax,jdbcType=INTEGER},
      </if>
      <if test="examPlaceNow != null" >
        #{examPlaceNow,jdbcType=INTEGER},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.pay.dto.SchoolAccount" >
    update t_s_schaccount
    <set >
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="examPlaceMax != null" >
        examPlaceMax = #{examPlaceMax,jdbcType=INTEGER},
      </if>
      <if test="examPlaceNow != null" >
        examPlaceNow = #{examPlaceNow,jdbcType=INTEGER},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where schoolId = #{schoolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.pay.dto.SchoolAccount" >
    update t_s_schaccount
    set money = #{money,jdbcType=INTEGER},
      passwd = #{passwd,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      examPlaceMax = #{examPlaceMax,jdbcType=INTEGER},
      examPlaceNow = #{examPlaceNow,jdbcType=INTEGER},
      extra = #{extra,jdbcType=VARCHAR}
    where schoolId = #{schoolId,jdbcType=INTEGER}
  </update>
  
  	<!-- 以下为手动添加部分 -->
    <select id="queryByPasswd" resultMap="BaseResultMap" parameterType="com.lili.pay.dto.SchoolAccount">
		select
			<include refid="Base_Column_List" />
		from t_s_schaccount
			where schoolId = #{schoolId,jdbcType=INTEGER} and passwd = #{passwd,jdbcType=VARCHAR}
	</select>
	
	<select id="queryAccount" resultMap="BaseResultMap" parameterType="com.lili.pay.dto.SchoolAccount" >
	    select 
		    	<include refid="Base_Column_List" />
	   	 from t_s_schaccount
	    	where schoolId = #{schoolId,jdbcType=INTEGER}  and passwd = #{passwd,jdbcType=VARCHAR}
    </select>
  
    <update id="updateSchoolAccount" parameterType="com.lili.pay.dto.SchoolAccount">
		update t_s_schaccount
		<set>
			<if test="money != null">
				money = #{money,jdbcType=INTEGER},
			</if>
		</set>
		where schoolId = #{schoolId,jdbcType=INTEGER}
	</update>
  
  
  
</mapper>