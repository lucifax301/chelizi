<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.school.mapper.EnrollMaterialItemsMapper" >
  <resultMap id="BaseResultMap" type="com.lili.school.dto.EnrollMaterialItems" >
    <id column="pmid" property="pmid" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="TINYINT" />
    <result column="cuid" property="cuid" jdbcType="BIGINT" />
    <result column="muid" property="muid" jdbcType="BIGINT" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lili.school.dto.EnrollMaterialItems" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pmid, NAME, pic, icon, isdel, cuid, muid, ctime, mtime
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lili.school.dto.EnrollMaterialItemsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_enroll_material_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKeys" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_enroll_material_items
    where 1=1 and pmid in 
    <foreach collection="pmids" item="pmids" index="index"
            open="(" close=")" separator=",">
            #{pmids}
    </foreach>
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.school.dto.EnrollMaterialItemsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_enroll_material_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_enroll_material_items
    where pmid = #{pmid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_enroll_material_items
    where pmid = #{pmid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.school.dto.EnrollMaterialItemsExample" >
    delete from t_enroll_material_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.school.dto.EnrollMaterialItems" >
    insert into t_enroll_material_items (pmid, NAME, pic, 
      icon, isdel, cuid, muid, 
      ctime, mtime, description
      )
    values (#{pmid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{isdel,jdbcType=TINYINT}, #{cuid,jdbcType=BIGINT}, #{muid,jdbcType=BIGINT}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lili.school.dto.EnrollMaterialItems" >
    insert into t_enroll_material_items
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pmid != null" >
        pmid,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="cuid != null" >
        cuid,
      </if>
      <if test="muid != null" >
        muid,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pmid != null" >
        #{pmid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=TINYINT},
      </if>
      <if test="cuid != null" >
        #{cuid,jdbcType=BIGINT},
      </if>
      <if test="muid != null" >
        #{muid,jdbcType=BIGINT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.school.dto.EnrollMaterialItemsExample" resultType="java.lang.Integer" >
    select count(*) from t_enroll_material_items
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_enroll_material_items
    <set >
      <if test="record.pmid != null" >
        pmid = #{record.pmid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=TINYINT},
      </if>
      <if test="record.cuid != null" >
        cuid = #{record.cuid,jdbcType=BIGINT},
      </if>
      <if test="record.muid != null" >
        muid = #{record.muid,jdbcType=BIGINT},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_enroll_material_items
    set pmid = #{record.pmid,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=TINYINT},
      cuid = #{record.cuid,jdbcType=BIGINT},
      muid = #{record.muid,jdbcType=BIGINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_enroll_material_items
    set pmid = #{record.pmid,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=TINYINT},
      cuid = #{record.cuid,jdbcType=BIGINT},
      muid = #{record.muid,jdbcType=BIGINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.school.dto.EnrollMaterialItems" >
    update t_enroll_material_items
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=TINYINT},
      </if>
      <if test="cuid != null" >
        cuid = #{cuid,jdbcType=BIGINT},
      </if>
      <if test="muid != null" >
        muid = #{muid,jdbcType=BIGINT},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pmid = #{pmid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lili.school.dto.EnrollMaterialItems" >
    update t_enroll_material_items
    set NAME = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=TINYINT},
      cuid = #{cuid,jdbcType=BIGINT},
      muid = #{muid,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where pmid = #{pmid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.school.dto.EnrollMaterialItems" >
    update t_enroll_material_items
    set NAME = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=TINYINT},
      cuid = #{cuid,jdbcType=BIGINT},
      muid = #{muid,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP}
    where pmid = #{pmid,jdbcType=INTEGER}
  </update>
</mapper>