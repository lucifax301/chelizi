<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.school.mapper.EnrollMaterialAddressMapper" >
  <resultMap id="BaseResultMap" type="com.lili.school.dto.EnrollMaterialAddress" >
    <id column="paid" property="paid" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="ttid" property="ttid" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="post_id" property="postId" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    paid, city_id, ttid, school_id, address, post_id, contacts, mobile, phone, qq, email
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.school.dto.EnrollMaterialAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_enroll_material_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_enroll_material_address
    where paid = #{paid,jdbcType=INTEGER}
  </select>
  <select id="selectByTtid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_enroll_material_address
    where ttid = #{paid,jdbcType=INTEGER}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_enroll_material_address
    where paid = #{paid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.school.dto.EnrollMaterialAddressExample" >
    delete from t_enroll_material_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.school.dto.EnrollMaterialAddress" >
    insert into t_enroll_material_address (paid, city_id, ttid, 
      school_id, address, post_id, 
      contacts, mobile, phone, 
      qq, email)
    values (#{paid,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{ttid,jdbcType=INTEGER}, 
      #{schoolId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{postId,jdbcType=VARCHAR}, 
      #{contacts,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lili.school.dto.EnrollMaterialAddress" >
    insert into t_enroll_material_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paid != null" >
        paid,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="ttid != null" >
        ttid,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paid != null" >
        #{paid,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="ttid != null" >
        #{ttid,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.school.dto.EnrollMaterialAddressExample" resultType="java.lang.Integer" >
    select count(*) from t_enroll_material_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_enroll_material_address
    <set >
      <if test="record.paid != null" >
        paid = #{record.paid,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.ttid != null" >
        ttid = #{record.ttid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.postId != null" >
        post_id = #{record.postId,jdbcType=VARCHAR},
      </if>
      <if test="record.contacts != null" >
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_enroll_material_address
    set paid = #{record.paid,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      ttid = #{record.ttid,jdbcType=INTEGER},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      post_id = #{record.postId,jdbcType=VARCHAR},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.school.dto.EnrollMaterialAddress" >
    update t_enroll_material_address
    <set >
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="ttid != null" >
        ttid = #{ttid,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where paid = #{paid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.school.dto.EnrollMaterialAddress" >
    update t_enroll_material_address
    set city_id = #{cityId,jdbcType=INTEGER},
      ttid = #{ttid,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where paid = #{paid,jdbcType=INTEGER}
  </update>
</mapper>