<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.school.mapper.EnrollLongtrainMapper" >
  <resultMap id="BaseResultMap" type="com.lili.school.dto.EnrollLongtrain" >
    <id column="ltId" property="ltId" jdbcType="INTEGER" />
    <result column="schoolId" property="schoolId" jdbcType="INTEGER" />
    <result column="classDate" property="classDate" jdbcType="TIMESTAMP" />
    <result column="classTime" property="classTime" jdbcType="VARCHAR" />
    <result column="classPlace" property="classPlace" jdbcType="VARCHAR" />
    <result column="coachId" property="coachId" jdbcType="INTEGER" />
    <result column="coachSex" property="coachSex" jdbcType="TINYINT" />
    <result column="coachIdCard" property="coachIdCard" jdbcType="VARCHAR" />
    <result column="contactName" property="contactName" jdbcType="VARCHAR" />
    <result column="contactMobile" property="contactMobile" jdbcType="VARCHAR" />
    <result column="carNo" property="carNo" jdbcType="VARCHAR" />
    <result column="carType" property="carType" jdbcType="VARCHAR" />
    <result column="drType" property="drType" jdbcType="TINYINT" />
    <result column="carrys" property="carrys" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="failed" property="failed" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="extra" property="extra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ltId, schoolId, classDate, classTime, classPlace, coachId, coachSex, coachIdCard, 
    contactName, contactMobile, carNo, carType, drType, carrys, total, failed, state, 
    ctime, mtime, extra
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lili.school.dto.EnrollLongtrainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_enroll_longtrain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_enroll_longtrain
    where ltId = #{ltId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_enroll_longtrain
    where ltId = #{ltId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lili.school.dto.EnrollLongtrainExample" >
    delete from t_enroll_longtrain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lili.school.dto.EnrollLongtrain" >
    insert into t_enroll_longtrain (ltId, schoolId, classDate, 
      classTime, classPlace, coachId, 
      coachSex, coachIdCard, contactName, 
      contactMobile, carNo, carType, 
      drType, carrys, total, 
      failed, state, ctime, 
      mtime, extra)
    values (#{ltId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{classDate,jdbcType=TIMESTAMP}, 
      #{classTime,jdbcType=VARCHAR}, #{classPlace,jdbcType=VARCHAR}, #{coachId,jdbcType=INTEGER}, 
      #{coachSex,jdbcType=TINYINT}, #{coachIdCard,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, 
      #{contactMobile,jdbcType=VARCHAR}, #{carNo,jdbcType=VARCHAR}, #{carType,jdbcType=VARCHAR}, 
      #{drType,jdbcType=TINYINT}, #{carrys,jdbcType=VARCHAR}, #{total,jdbcType=INTEGER}, 
      #{failed,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, 
      #{mtime,jdbcType=TIMESTAMP}, #{extra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lili.school.dto.EnrollLongtrain" >
    insert into t_enroll_longtrain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ltId != null" >
        ltId,
      </if>
      <if test="schoolId != null" >
        schoolId,
      </if>
      <if test="classDate != null" >
        classDate,
      </if>
      <if test="classTime != null" >
        classTime,
      </if>
      <if test="classPlace != null" >
        classPlace,
      </if>
      <if test="coachId != null" >
        coachId,
      </if>
      <if test="coachSex != null" >
        coachSex,
      </if>
      <if test="coachIdCard != null" >
        coachIdCard,
      </if>
      <if test="contactName != null" >
        contactName,
      </if>
      <if test="contactMobile != null" >
        contactMobile,
      </if>
      <if test="carNo != null" >
        carNo,
      </if>
      <if test="carType != null" >
        carType,
      </if>
      <if test="drType != null" >
        drType,
      </if>
      <if test="carrys != null" >
        carrys,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="failed != null" >
        failed,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ltId != null" >
        #{ltId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="classDate != null" >
        #{classDate,jdbcType=TIMESTAMP},
      </if>
      <if test="classTime != null" >
        #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="classPlace != null" >
        #{classPlace,jdbcType=VARCHAR},
      </if>
      <if test="coachId != null" >
        #{coachId,jdbcType=INTEGER},
      </if>
      <if test="coachSex != null" >
        #{coachSex,jdbcType=TINYINT},
      </if>
      <if test="coachIdCard != null" >
        #{coachIdCard,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactMobile != null" >
        #{contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="carNo != null" >
        #{carNo,jdbcType=VARCHAR},
      </if>
      <if test="carType != null" >
        #{carType,jdbcType=VARCHAR},
      </if>
      <if test="drType != null" >
        #{drType,jdbcType=TINYINT},
      </if>
      <if test="carrys != null" >
        #{carrys,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="failed != null" >
        #{failed,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lili.school.dto.EnrollLongtrainExample" resultType="java.lang.Integer" >
    select count(*) from t_enroll_longtrain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_enroll_longtrain
    <set >
      <if test="record.ltId != null" >
        ltId = #{record.ltId,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        schoolId = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.classDate != null" >
        classDate = #{record.classDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classTime != null" >
        classTime = #{record.classTime,jdbcType=VARCHAR},
      </if>
      <if test="record.classPlace != null" >
        classPlace = #{record.classPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.coachId != null" >
        coachId = #{record.coachId,jdbcType=INTEGER},
      </if>
      <if test="record.coachSex != null" >
        coachSex = #{record.coachSex,jdbcType=TINYINT},
      </if>
      <if test="record.coachIdCard != null" >
        coachIdCard = #{record.coachIdCard,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null" >
        contactName = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactMobile != null" >
        contactMobile = #{record.contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.carNo != null" >
        carNo = #{record.carNo,jdbcType=VARCHAR},
      </if>
      <if test="record.carType != null" >
        carType = #{record.carType,jdbcType=VARCHAR},
      </if>
      <if test="record.drType != null" >
        drType = #{record.drType,jdbcType=TINYINT},
      </if>
      <if test="record.carrys != null" >
        carrys = #{record.carrys,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.failed != null" >
        failed = #{record.failed,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extra != null" >
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_enroll_longtrain
    set ltId = #{record.ltId,jdbcType=INTEGER},
      schoolId = #{record.schoolId,jdbcType=INTEGER},
      classDate = #{record.classDate,jdbcType=TIMESTAMP},
      classTime = #{record.classTime,jdbcType=VARCHAR},
      classPlace = #{record.classPlace,jdbcType=VARCHAR},
      coachId = #{record.coachId,jdbcType=INTEGER},
      coachSex = #{record.coachSex,jdbcType=TINYINT},
      coachIdCard = #{record.coachIdCard,jdbcType=VARCHAR},
      contactName = #{record.contactName,jdbcType=VARCHAR},
      contactMobile = #{record.contactMobile,jdbcType=VARCHAR},
      carNo = #{record.carNo,jdbcType=VARCHAR},
      carType = #{record.carType,jdbcType=VARCHAR},
      drType = #{record.drType,jdbcType=TINYINT},
      carrys = #{record.carrys,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=INTEGER},
      failed = #{record.failed,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      extra = #{record.extra,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lili.school.dto.EnrollLongtrain" >
    update t_enroll_longtrain
    <set >
      <if test="schoolId != null" >
        schoolId = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="classDate != null" >
        classDate = #{classDate,jdbcType=TIMESTAMP},
      </if>
      <if test="classTime != null" >
        classTime = #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="classPlace != null" >
        classPlace = #{classPlace,jdbcType=VARCHAR},
      </if>
      <if test="coachId != null" >
        coachId = #{coachId,jdbcType=INTEGER},
      </if>
      <if test="coachSex != null" >
        coachSex = #{coachSex,jdbcType=TINYINT},
      </if>
      <if test="coachIdCard != null" >
        coachIdCard = #{coachIdCard,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null" >
        contactName = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactMobile != null" >
        contactMobile = #{contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="carNo != null" >
        carNo = #{carNo,jdbcType=VARCHAR},
      </if>
      <if test="carType != null" >
        carType = #{carType,jdbcType=VARCHAR},
      </if>
      <if test="drType != null" >
        drType = #{drType,jdbcType=TINYINT},
      </if>
      <if test="carrys != null" >
        carrys = #{carrys,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="failed != null" >
        failed = #{failed,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=VARCHAR},
      </if>
    </set>
    where ltId = #{ltId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lili.school.dto.EnrollLongtrain" >
    update t_enroll_longtrain
    set schoolId = #{schoolId,jdbcType=INTEGER},
      classDate = #{classDate,jdbcType=TIMESTAMP},
      classTime = #{classTime,jdbcType=VARCHAR},
      classPlace = #{classPlace,jdbcType=VARCHAR},
      coachId = #{coachId,jdbcType=INTEGER},
      coachSex = #{coachSex,jdbcType=TINYINT},
      coachIdCard = #{coachIdCard,jdbcType=VARCHAR},
      contactName = #{contactName,jdbcType=VARCHAR},
      contactMobile = #{contactMobile,jdbcType=VARCHAR},
      carNo = #{carNo,jdbcType=VARCHAR},
      carType = #{carType,jdbcType=VARCHAR},
      drType = #{drType,jdbcType=TINYINT},
      carrys = #{carrys,jdbcType=VARCHAR},
      total = #{total,jdbcType=INTEGER},
      failed = #{failed,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      extra = #{extra,jdbcType=VARCHAR}
    where ltId = #{ltId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.lili.school.dto.EnrollLongtrainExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_enroll_longtrain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>