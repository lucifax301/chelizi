2015-09-22 14:20:07  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 14:20:07  [ main:60 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@2782f364 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 14:20:07  [ main:60 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:60 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 14:20:07  [ main:60 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 14:20:07  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:80 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:80 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:07  [ main:80 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@49114c5a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 14:20:07  [ main:80 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 14:20:07  [ main:80 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 14:20:07  [ main:150 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 14:20:07  [ main:150 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 14:20:07  [ main:150 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 14:20:07  [ main:160 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 14:20:07  [ main:170 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 14:20:07  [ main:200 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 14:20:07  [ main:200 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 14:20:07  [ main:210 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 14:20:07  [ main:240 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 14:20:07  [ main:251 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 14:20:07  [ main:259 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 14:20:07  [ main:268 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 14:20:07  [ main:292 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\myworkplace\chelizi\location\target\test-classes\com\lili]
2015-09-22 14:20:07  [ main:292 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/myworkplace/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\myworkplace\chelizi\location\target\classes\com\lili]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Looking for matching resources in jar file [file:/D:/myworkplace/chelizi/common/target/common-1.0.1-SNAPSHOT.jar]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Looking for matching resources in jar file [file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar]
2015-09-22 14:20:07  [ main:302 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\myworkplace\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], URL [jar:file:/D:/myworkplace/chelizi/common/target/common-1.0.1-SNAPSHOT.jar!/com/lili/common/util/BeanCopy.class], URL [jar:file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar!/com/lili/location/service/LocationService.class], URL [jar:file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar!/com/lili/location/vo/StudentVo.class], URL [jar:file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar!/com/lili/location/vo/TeacherVo.class]]
2015-09-22 14:20:07  [ main:322 ] - [ DEBUG ]  Identified candidate component class: file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 14:20:07  [ main:332 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 14:20:07  [ main:332 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 14:20:07  [ main:332 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 14:20:07  [ main:362 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 14:20:07  [ main:382 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 14:20:07  [ main:382 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 14:20:07  [ main:412 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 14:20:07  [ main:412 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 14:20:07  [ main:412 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 14:20:07  [ main:412 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 14:20:07  [ main:422 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 14:20:07  [ main:432 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 14:20:07  [ main:432 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 14:20:07  [ main:442 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 14:20:07  [ main:442 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 14:20:07  [ main:472 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 14:20:07  [ main:472 ] - [ DEBUG ]  Loaded 19 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 14:20:07  [ main:472 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@26116f4f: startup date [Tue Sep 22 14:20:07 CST 2015]; root of context hierarchy
2015-09-22 14:20:07  [ main:472 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@26116f4f: org.springframework.beans.factory.support.DefaultListableBeanFactory@4089314f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 14:20:07  [ main:492 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:07  [ main:492 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:07  [ main:502 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:07  [ main:502 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:08  [ main:552 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:08  [ main:552 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:08  [ main:552 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:572 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:08  [ main:572 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:08  [ main:582 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@451d9bcc]
2015-09-22 14:20:08  [ main:592 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@d9326df]
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4089314f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:602 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 14:20:08  [ main:612 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 14:20:08  [ main:612 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 14:20:08  [ main:612 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:612 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:622 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#3c750372'
2015-09-22 14:20:08  [ main:632 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#3c750372'
2015-09-22 14:20:08  [ main:762 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#3c750372'
2015-09-22 14:20:08  [ main:762 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#16a33928'
2015-09-22 14:20:08  [ main:762 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#16a33928'
2015-09-22 14:20:08  [ main:772 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:772 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:852 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:852 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:862 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 14:20:08  [ main:872 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 14:20:08  [ main:882 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 14:20:08  [ main:892 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:892 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 14:20:08  [ main:892 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 14:20:08  [ main:892 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 14:20:08  [ main:892 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 14:20:08  [ main:892 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:902 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 14:20:08  [ main:902 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 14:20:08  [ main:902 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 14:20:08  [ main:902 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 14:20:08  [ main:902 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:08  [ main:902 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:08  [ main:922 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1012 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1042 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 14:20:08  [ main:1062 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 14:20:08  [ main:1072 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:08  [ main:1082 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:08  [ main:1092 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@32034752]
2015-09-22 14:20:08  [ main:1092 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 14:20:08  [ main:1092 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:08  [ main:1092 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1152 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1162 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1172 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1192 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1192 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1192 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=21432&registry=zookeeper&timestamp=1442902808558, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1192 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1202 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1222 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1242 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1252 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1282 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1322 ] - [ INFO ]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1322 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1332 ] - [ INFO ]   [DUBBO] Load registry store file C:\Users\xxx\.dubbo\dubbo-registry-115.159.82.23.cache, data: {com.lili.location.service.LocationService=empty://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=8024&side=provider&timestamp=1442889927413, com.slc.dongjiang.service.HelloDubbo=empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=providers&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773 empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=configurators&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773 empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=routers&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:08  [ main:1342 ] - [ DEBUG ]  Creating new ZookKeeper instance to connect to 115.159.82.23:2181.
2015-09-22 14:20:08  [ ZkClient-EventThread-16-115.159.82.23:2181:1342 ] - [ INFO ]  Starting ZkClient event thread.
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:host.name=xxx-PC
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.version=1.7.0_79
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.vendor=Oracle Corporation
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.home=C:\Program Files\Java\jdk1.7.0_79\jre
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.class.path=D:\myworkplace\chelizi\location\target\test-classes;D:\myworkplace\chelizi\location\target\classes;D:\myworkplace\chelizi\common\target\common-1.0.1-SNAPSHOT.jar;D:\myworkplace\chelizi\intapi\target\intapi-1.0.1-SNAPSHOT.jar;C:\Users\xxx\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\xxx\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\xxx\.m2\repository\commons-logging\commons-logging\1.0.3\commons-logging-1.0.3.jar;C:\Users\xxx\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-core\4.0.8.RELEASE\spring-core-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-web\4.0.8.RELEASE\spring-web-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-beans\4.0.8.RELEASE\spring-beans-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-context\4.0.8.RELEASE\spring-context-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-jdbc\4.0.8.RELEASE\spring-jdbc-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-context-support\4.0.8.RELEASE\spring-context-support-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-aop\4.0.8.RELEASE\spring-aop-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-aspects\4.0.8.RELEASE\spring-aspects-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-expression\4.0.8.RELEASE\spring-expression-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-tx\4.0.8.RELEASE\spring-tx-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-webmvc\4.0.8.RELEASE\spring-webmvc-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-test\4.0.8.RELEASE\spring-test-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\xxx\.m2\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;C:\Users\xxx\.m2\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;C:\Users\xxx\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\xxx\.m2\repository\org\quartz-scheduler\quartz\2.2.1\quartz-2.2.1.jar;C:\Users\xxx\.m2\repository\c3p0\c3p0\0.9.1.1\c3p0-0.9.1.1.jar;C:\Users\xxx\.m2\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;C:\Users\xxx\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\xxx\.m2\repository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;C:\Users\xxx\.m2\repository\commons-codec\commons-codec\20041127.091804\commons-codec-20041127.091804.jar;C:\Users\xxx\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\xxx\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\xxx\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\xxx\.m2\repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;C:\Users\xxx\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\xxx\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\xxx\.m2\repository\org\springframework\data\spring-data-mongodb\1.7.2.RELEASE\spring-data-mongodb-1.7.2.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\data\spring-data-commons\1.10.2.RELEASE\spring-data-commons-1.10.2.RELEASE.jar;C:\Users\xxx\.m2\repository\org\mongodb\mongo-java-driver\2.13.0\mongo-java-driver-2.13.0.jar;C:\Users\xxx\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_79\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0_79\bin;E:\program\protocolbuffer;E:\program\maven333\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;.
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.io.tmpdir=C:\Users\xxx\AppData\Local\Temp\
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:java.compiler=<NA>
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:os.name=Windows 7
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:os.arch=amd64
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:os.version=6.1
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:user.name=xxx
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:user.home=C:\Users\xxx
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Client environment:user.dir=D:\myworkplace\chelizi\location
2015-09-22 14:20:08  [ main:1352 ] - [ INFO ]  Initiating client connection, connectString=115.159.82.23:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@22eaa01b
2015-09-22 14:20:08  [ main:1362 ] - [ DEBUG ]  zookeeper.disableAutoWatchReset is false
2015-09-22 14:20:08  [ main:1362 ] - [ DEBUG ]  Awaiting connection to Zookeeper server
2015-09-22 14:20:08  [ main-SendThread():1362 ] - [ INFO ]  Opening socket connection to server /115.159.82.23:2181
2015-09-22 14:20:08  [ main:1362 ] - [ DEBUG ]  Waiting for keeper state SyncConnected
2015-09-22 14:20:17  [ main-SendThread(115.159.82.23:2181):10432 ] - [ INFO ]  Socket connection established to 115.159.82.23/115.159.82.23:2181, initiating session
2015-09-22 14:20:17  [ main-SendThread(115.159.82.23:2181):10432 ] - [ DEBUG ]  Session establishment request sent on 115.159.82.23/115.159.82.23:2181
2015-09-22 14:20:17  [ main-SendThread(115.159.82.23:2181):10472 ] - [ INFO ]  Session establishment complete on server 115.159.82.23/115.159.82.23:2181, sessionid = 0x4fd938b6850020, negotiated timeout = 30000
2015-09-22 14:20:17  [ main-EventThread:10472 ] - [ DEBUG ]  Received event: WatchedEvent state:SyncConnected type:None path:null
2015-09-22 14:20:17  [ main-EventThread:10472 ] - [ INFO ]  zookeeper state changed (SyncConnected)
2015-09-22 14:20:17  [ main-EventThread:10472 ] - [ DEBUG ]  Leaving process event
2015-09-22 14:20:17  [ main:10472 ] - [ DEBUG ]  State is SyncConnected
2015-09-22 14:20:17  [ main:10472 ] - [ INFO ]   [DUBBO] Register: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:17  [ main-SendThread(115.159.82.23:2181):10532 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,25769804280,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10572 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,25769804281,-110  request:: '/dubbo/com.lili.location.service.LocationService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10612 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,25769804282,-110  request:: '/dubbo/com.lili.location.service.LocationService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10642 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,25769804283,0  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21432%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902808568,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21432%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902808568 
2015-09-22 14:20:18  [ main:10652 ] - [ INFO ]   [DUBBO] Subscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10682 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,25769804284,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10722 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,25769804285,-110  request:: '/dubbo/com.lili.location.service.LocationService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10752 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,25769804286,-110  request:: '/dubbo/com.lili.location.service.LocationService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10792 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,25769804286,0  request:: '/dubbo/com.lili.location.service.LocationService/configurators,T  response:: s{25769803895,25769803895,1442821532323,1442821532323,0,0,0,0,0,0,25769803895} 
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10822 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,25769804286,0  request:: '/dubbo/com.lili.location.service.LocationService/configurators,T  response:: v{} 
2015-09-22 14:20:18  [ main:10822 ] - [ INFO ]   [DUBBO] Notify urls for subscribe url provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, urls: [empty://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ main:10832 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ main:10842 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ main:10842 ] - [ DEBUG ]  Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-09-22 14:20:18  [ main:10842 ] - [ DEBUG ]  Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-09-22 14:20:18  [ main:10842 ] - [ DEBUG ]  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-09-22 14:20:18  [ main:10842 ] - [ DEBUG ]  Storing ApplicationContext in cache under key [[MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2015-09-22 14:20:18  [ main:10842 ] - [ DEBUG ]  Spring test ApplicationContext cache statistics: [ContextCache@6776b308 size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Processing injected method of bean 'com.lili.LocationTest': AutowiredFieldElement for private com.lili.location.service.LocationService com.lili.LocationTest.locationService
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Autowiring by type from bean name 'com.lili.LocationTest' to bean named 'locationService'
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  After test method: context [DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@49114c5a, testMethod = addtest@LocationTest, testException = java.lang.NoSuchFieldException: serialVersionUID, mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@69ffdaf8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2015-09-22 14:20:18  [ main:10852 ] - [ DEBUG ]  Spring test ApplicationContext cache statistics: [ContextCache@6776b308 size = 1, hitCount = 1, missCount = 1, parentContextCount = 0]
2015-09-22 14:20:18  [ main:10862 ] - [ DEBUG ]  Processing injected method of bean 'com.lili.LocationTest': AutowiredFieldElement for private com.lili.location.service.LocationService com.lili.LocationTest.locationService
2015-09-22 14:20:18  [ main:10862 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 14:20:18  [ main:10862 ] - [ DEBUG ]  After test method: context [DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@69ffdaf8, testMethod = getNearBy@LocationTest, testException = java.lang.NoSuchFieldException: serialVersionUID, mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
2015-09-22 14:20:18  [ main:10862 ] - [ DEBUG ]  After test class: context [DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 14:20:18  [ Thread-3:10862 ] - [ INFO ]  Closing org.springframework.context.support.GenericApplicationContext@26116f4f: startup date [Tue Sep 22 14:20:07 CST 2015]; root of context hierarchy
2015-09-22 14:20:18  [ DubboShutdownHook:10862 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ DubboShutdownHook:10862 ] - [ INFO ]   [DUBBO] Close all registries [zookeeper://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=21432&timestamp=1442902808558], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ Thread-3:10862 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:18  [ DubboShutdownHook:10862 ] - [ INFO ]   [DUBBO] Destroy registry:zookeeper://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=21432&timestamp=1442902808558, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ DubboShutdownHook:10862 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ Thread-3:10862 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 14:20:18  [ Thread-3:10862 ] - [ DEBUG ]  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4089314f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 14:20:18  [ Thread-3:10862 ] - [ DEBUG ]  Invoking destroy() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 14:20:18  [ Thread-3:10862 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10902 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,25769804287,0  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21432%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902808568,-1  response:: null
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ INFO ]   [DUBBO] Destroy unregister url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ INFO ]   [DUBBO] Destroy unsubscribe url provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ DEBUG ]  Closing ZkClient...
2015-09-22 14:20:18  [ ZkClient-EventThread-16-115.159.82.23:2181:10902 ] - [ INFO ]  Terminate ZkClient event thread.
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ DEBUG ]  Closing ZooKeeper connected to 115.159.82.23:2181
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ DEBUG ]  Closing session: 0x4fd938b6850020
2015-09-22 14:20:18  [ DubboShutdownHook:10902 ] - [ DEBUG ]  Closing client for session: 0x4fd938b6850020
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10902 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 11,2  replyHeader:: 11,25769804288,-101  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21432%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902808568,-1  response:: null
2015-09-22 14:20:18  [ Thread-3:10902 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ Thread-3:10902 ] - [ DEBUG ]  Retrieved dependent beans for bean 'locationService': [com.lili.LocationTest]
2015-09-22 14:20:18  [ Thread-3:10902 ] - [ DEBUG ]  Invoking destroy() on bean with name 'mongoDbFactory'
2015-09-22 14:20:18  [ Thread-3:10902 ] - [ DEBUG ]  Retrieved dependent beans for bean '(inner bean)#3c750372': [mongoDbFactory]
2015-09-22 14:20:18  [ Thread-3:10902 ] - [ DEBUG ]  Invoking destroy() on bean with name '(inner bean)#3c750372'
2015-09-22 14:20:18  [ main-SendThread(115.159.82.23:2181):10932 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850020, packet:: clientPath:null serverPath:null finished:false header:: 12,-11  replyHeader:: 12,25769804289,0  request:: null response:: null
2015-09-22 14:20:18  [ DubboShutdownHook:10932 ] - [ DEBUG ]  Disconnecting client for session: 0x4fd938b6850020
2015-09-22 14:20:18  [ DubboShutdownHook:10932 ] - [ INFO ]  Session: 0x4fd938b6850020 closed
2015-09-22 14:20:18  [ main-EventThread:10932 ] - [ INFO ]  EventThread shut down
2015-09-22 14:20:18  [ DubboShutdownHook:10932 ] - [ DEBUG ]  Closing ZkClient...done
2015-09-22 14:20:18  [ DubboShutdownHook:10942 ] - [ INFO ]   [DUBBO] Close dubbo server: /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:18  [ DubboShutdownHook:10942 ] - [ INFO ]   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:32  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 14:20:32  [ main:40 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@2782f364 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 14:20:32  [ main:40 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:50 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 14:20:32  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 14:20:32  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:32  [ main:70 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@49114c5a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 14:20:32  [ main:70 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 14:20:32  [ main:70 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 14:20:32  [ main:138 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 14:20:32  [ main:139 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 14:20:32  [ main:141 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 14:20:32  [ main:142 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 14:20:32  [ main:162 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 14:20:32  [ main:182 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 14:20:32  [ main:192 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 14:20:32  [ main:192 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 14:20:32  [ main:222 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 14:20:32  [ main:232 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 14:20:32  [ main:242 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 14:20:33  [ main:252 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\myworkplace\chelizi\location\target\test-classes\com\lili]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/myworkplace/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\myworkplace\chelizi\location\target\classes\com\lili]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Searching directory [D:\myworkplace\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/myworkplace/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Looking for matching resources in jar file [file:/D:/myworkplace/chelizi/common/target/common-1.0.1-SNAPSHOT.jar]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Looking for matching resources in jar file [file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar]
2015-09-22 14:20:33  [ main:282 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\myworkplace\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], URL [jar:file:/D:/myworkplace/chelizi/common/target/common-1.0.1-SNAPSHOT.jar!/com/lili/common/util/BeanCopy.class], URL [jar:file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar!/com/lili/location/service/LocationService.class], URL [jar:file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar!/com/lili/location/vo/StudentVo.class], URL [jar:file:/D:/myworkplace/chelizi/intapi/target/intapi-1.0.1-SNAPSHOT.jar!/com/lili/location/vo/TeacherVo.class]]
2015-09-22 14:20:33  [ main:302 ] - [ DEBUG ]  Identified candidate component class: file [D:\myworkplace\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 14:20:33  [ main:312 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 14:20:33  [ main:312 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 14:20:33  [ main:312 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 14:20:33  [ main:342 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 14:20:33  [ main:362 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 14:20:33  [ main:372 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 14:20:33  [ main:392 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 14:20:33  [ main:392 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 14:20:33  [ main:392 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 14:20:33  [ main:402 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 14:20:33  [ main:412 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 14:20:33  [ main:412 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 14:20:33  [ main:412 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 14:20:33  [ main:422 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 14:20:33  [ main:432 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 14:20:33  [ main:452 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 14:20:33  [ main:452 ] - [ DEBUG ]  Loaded 19 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 14:20:33  [ main:452 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@26116f4f: startup date [Tue Sep 22 14:20:33 CST 2015]; root of context hierarchy
2015-09-22 14:20:33  [ main:452 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@26116f4f: org.springframework.beans.factory.support.DefaultListableBeanFactory@65463d6f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 14:20:33  [ main:472 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:33  [ main:472 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:33  [ main:482 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:482 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:33  [ main:532 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:33  [ main:532 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:33  [ main:532 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:552 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:33  [ main:552 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:562 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@39184c80]
2015-09-22 14:20:33  [ main:572 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@27dbb592]
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65463d6f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 14:20:33  [ main:582 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:592 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 14:20:33  [ main:592 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 14:20:33  [ main:592 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 14:20:33  [ main:602 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:602 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:602 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#46b07179'
2015-09-22 14:20:33  [ main:622 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#46b07179'
2015-09-22 14:20:33  [ main:742 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#46b07179'
2015-09-22 14:20:33  [ main:742 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#2d9e9038'
2015-09-22 14:20:33  [ main:742 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#2d9e9038'
2015-09-22 14:20:33  [ main:752 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:752 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:822 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:832 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:832 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 14:20:33  [ main:842 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 14:20:33  [ main:852 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 14:20:33  [ main:852 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 14:20:33  [ main:852 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:852 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 14:20:33  [ main:852 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:33  [ main:852 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:33  [ main:862 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:862 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:33  [ main:862 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 14:20:33  [ main:862 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 14:20:33  [ main:872 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 14:20:33  [ main:882 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:33  [ main:882 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:33  [ main:902 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:992 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1012 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:1032 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 14:20:33  [ main:1032 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 14:20:33  [ main:1032 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 14:20:33  [ main:1032 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 14:20:33  [ main:1032 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 14:20:33  [ main:1032 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 14:20:33  [ main:1042 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 14:20:33  [ main:1052 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@32034752]
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 14:20:33  [ main:1062 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:33  [ main:1062 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1122 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1132 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1142 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1152 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1162 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1162 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=21900&registry=zookeeper&timestamp=1442902833824, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1162 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1172 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1192 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1202 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1212 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:33  [ main:1242 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:34  [ main:1282 ] - [ INFO ]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:34  [ main:1282 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:34  [ main:1302 ] - [ INFO ]   [DUBBO] Load registry store file C:\Users\xxx\.dubbo\dubbo-registry-115.159.82.23.cache, data: {com.lili.location.service.LocationService=empty://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21432&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902808568, com.slc.dongjiang.service.HelloDubbo=empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=providers&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773 empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=configurators&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773 empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=routers&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:34  [ main:1312 ] - [ DEBUG ]  Creating new ZookKeeper instance to connect to 115.159.82.23:2181.
2015-09-22 14:20:34  [ ZkClient-EventThread-16-115.159.82.23:2181:1312 ] - [ INFO ]  Starting ZkClient event thread.
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:host.name=xxx-PC
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.version=1.7.0_79
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.vendor=Oracle Corporation
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.home=C:\Program Files\Java\jdk1.7.0_79\jre
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.class.path=D:\myworkplace\chelizi\location\target\test-classes;D:\myworkplace\chelizi\location\target\classes;D:\myworkplace\chelizi\common\target\common-1.0.1-SNAPSHOT.jar;D:\myworkplace\chelizi\intapi\target\intapi-1.0.1-SNAPSHOT.jar;C:\Users\xxx\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\xxx\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\xxx\.m2\repository\commons-logging\commons-logging\1.0.3\commons-logging-1.0.3.jar;C:\Users\xxx\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-core\4.0.8.RELEASE\spring-core-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-web\4.0.8.RELEASE\spring-web-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-beans\4.0.8.RELEASE\spring-beans-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-context\4.0.8.RELEASE\spring-context-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-jdbc\4.0.8.RELEASE\spring-jdbc-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-context-support\4.0.8.RELEASE\spring-context-support-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-aop\4.0.8.RELEASE\spring-aop-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-aspects\4.0.8.RELEASE\spring-aspects-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-expression\4.0.8.RELEASE\spring-expression-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-tx\4.0.8.RELEASE\spring-tx-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-webmvc\4.0.8.RELEASE\spring-webmvc-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-test\4.0.8.RELEASE\spring-test-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\xxx\.m2\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;C:\Users\xxx\.m2\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;C:\Users\xxx\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\xxx\.m2\repository\org\quartz-scheduler\quartz\2.2.1\quartz-2.2.1.jar;C:\Users\xxx\.m2\repository\c3p0\c3p0\0.9.1.1\c3p0-0.9.1.1.jar;C:\Users\xxx\.m2\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;C:\Users\xxx\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\xxx\.m2\repository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;C:\Users\xxx\.m2\repository\commons-codec\commons-codec\20041127.091804\commons-codec-20041127.091804.jar;C:\Users\xxx\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\xxx\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\xxx\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\xxx\.m2\repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;C:\Users\xxx\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\xxx\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\xxx\.m2\repository\org\springframework\data\spring-data-mongodb\1.7.2.RELEASE\spring-data-mongodb-1.7.2.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\data\spring-data-commons\1.10.2.RELEASE\spring-data-commons-1.10.2.RELEASE.jar;C:\Users\xxx\.m2\repository\org\mongodb\mongo-java-driver\2.13.0\mongo-java-driver-2.13.0.jar;C:\Users\xxx\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_79\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0_79\bin;E:\program\protocolbuffer;E:\program\maven333\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;.
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.io.tmpdir=C:\Users\xxx\AppData\Local\Temp\
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:java.compiler=<NA>
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:os.name=Windows 7
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:os.arch=amd64
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:os.version=6.1
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:user.name=xxx
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:user.home=C:\Users\xxx
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Client environment:user.dir=D:\myworkplace\chelizi\location
2015-09-22 14:20:34  [ main:1312 ] - [ INFO ]  Initiating client connection, connectString=115.159.82.23:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@22eaa01b
2015-09-22 14:20:34  [ main:1322 ] - [ DEBUG ]  zookeeper.disableAutoWatchReset is false
2015-09-22 14:20:34  [ main:1322 ] - [ DEBUG ]  Awaiting connection to Zookeeper server
2015-09-22 14:20:34  [ main-SendThread():1322 ] - [ INFO ]  Opening socket connection to server /115.159.82.23:2181
2015-09-22 14:20:34  [ main:1322 ] - [ DEBUG ]  Waiting for keeper state SyncConnected
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10362 ] - [ INFO ]  Socket connection established to 115.159.82.23/115.159.82.23:2181, initiating session
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10372 ] - [ DEBUG ]  Session establishment request sent on 115.159.82.23/115.159.82.23:2181
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10422 ] - [ INFO ]  Session establishment complete on server 115.159.82.23/115.159.82.23:2181, sessionid = 0x4fd938b6850021, negotiated timeout = 30000
2015-09-22 14:20:43  [ main-EventThread:10422 ] - [ DEBUG ]  Received event: WatchedEvent state:SyncConnected type:None path:null
2015-09-22 14:20:43  [ main-EventThread:10422 ] - [ INFO ]  zookeeper state changed (SyncConnected)
2015-09-22 14:20:43  [ main-EventThread:10422 ] - [ DEBUG ]  Leaving process event
2015-09-22 14:20:43  [ main:10422 ] - [ DEBUG ]  State is SyncConnected
2015-09-22 14:20:43  [ main:10432 ] - [ INFO ]   [DUBBO] Register: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10482 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,25769804291,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10532 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,25769804292,-110  request:: '/dubbo/com.lili.location.service.LocationService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10572 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,25769804293,-110  request:: '/dubbo/com.lili.location.service.LocationService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10622 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,25769804294,0  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21900%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902833834,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21900%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902833834 
2015-09-22 14:20:43  [ main:10622 ] - [ INFO ]   [DUBBO] Subscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10662 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,25769804295,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10702 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,25769804296,-110  request:: '/dubbo/com.lili.location.service.LocationService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10742 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,25769804297,-110  request:: '/dubbo/com.lili.location.service.LocationService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10792 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,25769804297,0  request:: '/dubbo/com.lili.location.service.LocationService/configurators,T  response:: s{25769803895,25769803895,1442821532323,1442821532323,0,0,0,0,0,0,25769803895} 
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10832 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,25769804297,0  request:: '/dubbo/com.lili.location.service.LocationService/configurators,T  response:: v{} 
2015-09-22 14:20:43  [ main:10832 ] - [ INFO ]   [DUBBO] Notify urls for subscribe url provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, urls: [empty://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ main:10842 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ main:10852 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Storing ApplicationContext in cache under key [[MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Spring test ApplicationContext cache statistics: [ContextCache@2f1fde40 size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Processing injected method of bean 'com.lili.LocationTest': AutowiredFieldElement for private com.lili.location.service.LocationService com.lili.LocationTest.locationService
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  Autowiring by type from bean name 'com.lili.LocationTest' to bean named 'locationService'
2015-09-22 14:20:43  [ main:10872 ] - [ DEBUG ]  After test method: context [DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@49114c5a, testMethod = addtest@LocationTest, testException = java.lang.NoSuchFieldException: serialVersionUID, mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@470454bd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Spring test ApplicationContext cache statistics: [ContextCache@2f1fde40 size = 1, hitCount = 1, missCount = 1, parentContextCount = 0]
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Processing injected method of bean 'com.lili.LocationTest': AutowiredFieldElement for private com.lili.location.service.LocationService com.lili.LocationTest.locationService
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  After test method: context [DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = com.lili.LocationTest@470454bd, testMethod = getNearBy@LocationTest, testException = java.lang.NoSuchFieldException: serialVersionUID, mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
2015-09-22 14:20:43  [ main:10882 ] - [ DEBUG ]  After test class: context [DefaultTestContext@3f8e347 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@eabce30 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 14:20:43  [ DubboShutdownHook:10882 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ Thread-3:10882 ] - [ INFO ]  Closing org.springframework.context.support.GenericApplicationContext@26116f4f: startup date [Tue Sep 22 14:20:33 CST 2015]; root of context hierarchy
2015-09-22 14:20:43  [ DubboShutdownHook:10882 ] - [ INFO ]   [DUBBO] Close all registries [zookeeper://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=21900&timestamp=1442902833824], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ DubboShutdownHook:10882 ] - [ INFO ]   [DUBBO] Destroy registry:zookeeper://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=21900&timestamp=1442902833824, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ Thread-3:10882 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 14:20:43  [ DubboShutdownHook:10882 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ Thread-3:10882 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 14:20:43  [ Thread-3:10882 ] - [ DEBUG ]  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@65463d6f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 14:20:43  [ Thread-3:10882 ] - [ DEBUG ]  Invoking destroy() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 14:20:43  [ Thread-3:10882 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10922 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,25769804298,0  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21900%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902833834,-1  response:: null
2015-09-22 14:20:43  [ DubboShutdownHook:10922 ] - [ INFO ]   [DUBBO] Destroy unregister url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ DubboShutdownHook:10922 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ DubboShutdownHook:10932 ] - [ INFO ]   [DUBBO] Destroy unsubscribe url provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ DubboShutdownHook:10932 ] - [ DEBUG ]  Closing ZkClient...
2015-09-22 14:20:43  [ ZkClient-EventThread-16-115.159.82.23:2181:10932 ] - [ INFO ]  Terminate ZkClient event thread.
2015-09-22 14:20:43  [ DubboShutdownHook:10932 ] - [ DEBUG ]  Closing ZooKeeper connected to 115.159.82.23:2181
2015-09-22 14:20:43  [ DubboShutdownHook:10932 ] - [ DEBUG ]  Closing session: 0x4fd938b6850021
2015-09-22 14:20:43  [ DubboShutdownHook:10932 ] - [ DEBUG ]  Closing client for session: 0x4fd938b6850021
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10932 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 11,2  replyHeader:: 11,25769804299,-101  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D21900%2526revision%253D1.0.1-SNAPSHOT%2526side%253Dprovider%2526timestamp%253D1442902833834,-1  response:: null
2015-09-22 14:20:43  [ Thread-3:10932 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=21900&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442902833834, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ Thread-3:10932 ] - [ DEBUG ]  Retrieved dependent beans for bean 'locationService': [com.lili.LocationTest]
2015-09-22 14:20:43  [ Thread-3:10932 ] - [ DEBUG ]  Invoking destroy() on bean with name 'mongoDbFactory'
2015-09-22 14:20:43  [ Thread-3:10932 ] - [ DEBUG ]  Retrieved dependent beans for bean '(inner bean)#46b07179': [mongoDbFactory]
2015-09-22 14:20:43  [ Thread-3:10932 ] - [ DEBUG ]  Invoking destroy() on bean with name '(inner bean)#46b07179'
2015-09-22 14:20:43  [ main-SendThread(115.159.82.23:2181):10972 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850021, packet:: clientPath:null serverPath:null finished:false header:: 12,-11  replyHeader:: 12,25769804300,0  request:: null response:: null
2015-09-22 14:20:43  [ DubboShutdownHook:10972 ] - [ DEBUG ]  Disconnecting client for session: 0x4fd938b6850021
2015-09-22 14:20:43  [ DubboShutdownHook:10972 ] - [ INFO ]  Session: 0x4fd938b6850021 closed
2015-09-22 14:20:43  [ main-EventThread:10972 ] - [ INFO ]  EventThread shut down
2015-09-22 14:20:43  [ DubboShutdownHook:10972 ] - [ DEBUG ]  Closing ZkClient...done
2015-09-22 14:20:43  [ DubboShutdownHook:10972 ] - [ INFO ]   [DUBBO] Close dubbo server: /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 14:20:43  [ DubboShutdownHook:10972 ] - [ INFO ]   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:17  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 16:12:17  [ main:40 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@527308ce declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 16:12:17  [ main:50 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:50 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 16:12:17  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@2b89ee45 testClass = LocationTest, testInstance = com.lili.LocationTest@6c7a0a57, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 16:12:17  [ main:80 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 16:12:17  [ main:90 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 16:12:17  [ main:160 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 16:12:17  [ main:170 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 16:12:17  [ main:170 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 16:12:17  [ main:180 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 16:12:17  [ main:190 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:12:17  [ main:220 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 16:12:17  [ main:220 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 16:12:17  [ main:230 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:12:17  [ main:260 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:12:17  [ main:301 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:12:17  [ main:309 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:12:17  [ main:320 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 16:12:17  [ main:352 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 16:12:17  [ main:352 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:362 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:12:17  [ main:372 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 16:12:17  [ main:402 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 16:12:17  [ main:412 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 16:12:17  [ main:412 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 16:12:17  [ main:412 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:12:17  [ main:412 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:12:17  [ main:432 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 16:12:17  [ main:462 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:12:17  [ main:472 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 16:12:17  [ main:502 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 16:12:17  [ main:502 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 16:12:17  [ main:502 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:12:17  [ main:512 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:12:17  [ main:522 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:12:17  [ main:522 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:12:17  [ main:532 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 16:12:17  [ main:542 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 16:12:17  [ main:542 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:12:17  [ main:584 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 16:12:17  [ main:584 ] - [ DEBUG ]  Loaded 19 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 16:12:17  [ main:587 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@21b5c5b3: startup date [Tue Sep 22 16:12:17 CST 2015]; root of context hierarchy
2015-09-22 16:12:17  [ main:587 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@21b5c5b3: org.springframework.beans.factory.support.DefaultListableBeanFactory@3bbf1710: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 16:12:18  [ main:604 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:12:18  [ main:604 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:12:18  [ main:614 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:624 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:12:18  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:12:18  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:12:18  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:705 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:12:18  [ main:705 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 16:12:18  [ main:705 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:12:18  [ main:705 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:12:18  [ main:705 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:715 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:12:18  [ main:725 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3f2a3527]
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3fbcfba2]
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3bbf1710: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 16:12:18  [ main:735 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 16:12:18  [ main:745 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:12:18  [ main:745 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:745 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:12:18  [ main:745 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 16:12:18  [ main:745 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 16:12:18  [ main:775 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:775 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:785 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#294d5a82'
2015-09-22 16:12:18  [ main:805 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#294d5a82'
2015-09-22 16:12:18  [ main:935 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#294d5a82'
2015-09-22 16:12:18  [ main:935 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#335ac93d'
2015-09-22 16:12:18  [ main:945 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#335ac93d'
2015-09-22 16:12:18  [ main:945 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:955 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:1045 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1055 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1055 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1055 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 16:12:18  [ main:1065 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1075 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 16:12:18  [ main:1075 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:12:18  [ main:1075 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:12:18  [ main:1075 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1085 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:12:18  [ main:1085 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 16:12:18  [ main:1085 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 16:12:18  [ main:1085 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:12:18  [ main:1095 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:12:18  [ main:1125 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1215 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1235 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 16:12:18  [ main:1265 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 16:12:18  [ main:1275 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 16:12:18  [ main:1285 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 16:12:18  [ main:1295 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 16:12:18  [ main:1295 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:12:18  [ main:1295 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:12:18  [ main:1295 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@13e49516]
2015-09-22 16:12:18  [ main:1295 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 16:12:18  [ main:1295 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:12:18  [ main:1295 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1365 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1375 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1385 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1395 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1395 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1395 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=29644&registry=zookeeper&timestamp=1442909538707, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1405 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1415 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1435 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1455 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1465 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1505 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1545 ] - [ INFO ]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1555 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1565 ] - [ INFO ]   [DUBBO] Load registry store file C:\Users\xxx\.dubbo\dubbo-registry-115.159.82.23.cache, data: {com.lili.location.service.LocationService=empty://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=27248&revision=1.0.1-SNAPSHOT&side=provider&timestamp=1442907355847, com.slc.dongjiang.service.HelloDubbo=empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=providers&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773 empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=configurators&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773 empty://192.168.1.209/com.slc.dongjiang.service.HelloDubbo?application=dubbo-Client&category=routers&check=false&default.timeout=30000&dubbo=2.5.3&interface=com.slc.dongjiang.service.HelloDubbo&methods=sayHello&pid=4732&side=consumer&timestamp=1442827413773}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:18  [ main:1575 ] - [ DEBUG ]  Creating new ZookKeeper instance to connect to 115.159.82.23:2181.
2015-09-22 16:12:18  [ ZkClient-EventThread-20-115.159.82.23:2181:1575 ] - [ INFO ]  Starting ZkClient event thread.
2015-09-22 16:12:18  [ main:1575 ] - [ INFO ]  Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2015-09-22 16:12:18  [ main:1575 ] - [ INFO ]  Client environment:host.name=xxx-PC
2015-09-22 16:12:18  [ main:1575 ] - [ INFO ]  Client environment:java.version=1.7.0_79
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:java.vendor=Oracle Corporation
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:java.home=C:\Program Files\Java\jdk1.7.0_79\jre
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:java.class.path=D:\svn\develop\server\trunk\chelizi\location\target\test-classes;D:\svn\develop\server\trunk\chelizi\location\target\classes;D:\svn\develop\server\trunk\chelizi\common\target\classes;D:\svn\develop\server\trunk\chelizi\intapi\target\classes;C:\Users\xxx\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\xxx\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\xxx\.m2\repository\commons-logging\commons-logging\1.0.3\commons-logging-1.0.3.jar;C:\Users\xxx\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-core\4.0.8.RELEASE\spring-core-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-web\4.0.8.RELEASE\spring-web-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-beans\4.0.8.RELEASE\spring-beans-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-context\4.0.8.RELEASE\spring-context-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-jdbc\4.0.8.RELEASE\spring-jdbc-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-context-support\4.0.8.RELEASE\spring-context-support-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-aop\4.0.8.RELEASE\spring-aop-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-aspects\4.0.8.RELEASE\spring-aspects-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-expression\4.0.8.RELEASE\spring-expression-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-tx\4.0.8.RELEASE\spring-tx-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-webmvc\4.0.8.RELEASE\spring-webmvc-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\spring-test\4.0.8.RELEASE\spring-test-4.0.8.RELEASE.jar;C:\Users\xxx\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\xxx\.m2\repository\org\mockito\mockito-core\1.9.5\mockito-core-1.9.5.jar;C:\Users\xxx\.m2\repository\org\objenesis\objenesis\1.0\objenesis-1.0.jar;C:\Users\xxx\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\xxx\.m2\repository\org\quartz-scheduler\quartz\2.2.1\quartz-2.2.1.jar;C:\Users\xxx\.m2\repository\c3p0\c3p0\0.9.1.1\c3p0-0.9.1.1.jar;C:\Users\xxx\.m2\repository\org\slf4j\slf4j-log4j12\1.7.5\slf4j-log4j12-1.7.5.jar;C:\Users\xxx\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\xxx\.m2\repository\org\aspectj\aspectjweaver\1.8.2\aspectjweaver-1.8.2.jar;C:\Users\xxx\.m2\repository\commons-codec\commons-codec\20041127.091804\commons-codec-20041127.091804.jar;C:\Users\xxx\.m2\repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;C:\Users\xxx\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\xxx\.m2\repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;C:\Users\xxx\.m2\repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;C:\Users\xxx\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\xxx\.m2\repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;C:\Users\xxx\.m2\repository\org\springframework\data\spring-data-mongodb\1.7.2.RELEASE\spring-data-mongodb-1.7.2.RELEASE.jar;C:\Users\xxx\.m2\repository\org\springframework\data\spring-data-commons\1.10.2.RELEASE\spring-data-commons-1.10.2.RELEASE.jar;C:\Users\xxx\.m2\repository\org\mongodb\mongo-java-driver\2.13.0\mongo-java-driver-2.13.0.jar;C:\Users\xxx\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.12\jcl-over-slf4j-1.7.12.jar;/D:/myeclipse/configuration/org.eclipse.osgi/811/0/.cp/;/D:/myeclipse/configuration/org.eclipse.osgi/810/0/.cp/
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:java.library.path=C:\Program Files\Java\jdk1.7.0_79\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.7.0_79\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0_79\bin;E:\program\protocolbuffer;E:\program\maven333\bin;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;.
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:java.io.tmpdir=C:\Users\xxx\AppData\Local\Temp\
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:java.compiler=<NA>
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:os.name=Windows 7
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:os.arch=amd64
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:os.version=6.1
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:user.name=xxx
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:user.home=C:\Users\xxx
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Client environment:user.dir=D:\svn\develop\server\trunk\chelizi\location
2015-09-22 16:12:18  [ main:1585 ] - [ INFO ]  Initiating client connection, connectString=115.159.82.23:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@35d87abc
2015-09-22 16:12:18  [ main:1585 ] - [ DEBUG ]  zookeeper.disableAutoWatchReset is false
2015-09-22 16:12:18  [ main:1595 ] - [ DEBUG ]  Awaiting connection to Zookeeper server
2015-09-22 16:12:19  [ main:1605 ] - [ DEBUG ]  Waiting for keeper state SyncConnected
2015-09-22 16:12:18  [ main-SendThread():1595 ] - [ INFO ]  Opening socket connection to server /115.159.82.23:2181
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10645 ] - [ INFO ]  Socket connection established to 115.159.82.23/115.159.82.23:2181, initiating session
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10645 ] - [ DEBUG ]  Session establishment request sent on 115.159.82.23/115.159.82.23:2181
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10686 ] - [ INFO ]  Session establishment complete on server 115.159.82.23/115.159.82.23:2181, sessionid = 0x4fd938b6850025, negotiated timeout = 30000
2015-09-22 16:12:28  [ main-EventThread:10686 ] - [ DEBUG ]  Received event: WatchedEvent state:SyncConnected type:None path:null
2015-09-22 16:12:28  [ main-EventThread:10686 ] - [ INFO ]  zookeeper state changed (SyncConnected)
2015-09-22 16:12:28  [ main-EventThread:10686 ] - [ DEBUG ]  Leaving process event
2015-09-22 16:12:28  [ main:10686 ] - [ DEBUG ]  State is SyncConnected
2015-09-22 16:12:28  [ main:10696 ] - [ INFO ]   [DUBBO] Register: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10736 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,25769804329,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10776 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,25769804330,-110  request:: '/dubbo/com.lili.location.service.LocationService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10816 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,25769804331,-110  request:: '/dubbo/com.lili.location.service.LocationService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10856 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,25769804332,0  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D29644%2526side%253Dprovider%2526timestamp%253D1442909538717,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D29644%2526side%253Dprovider%2526timestamp%253D1442909538717 
2015-09-22 16:12:28  [ main:10856 ] - [ INFO ]   [DUBBO] Subscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10896 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,25769804333,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10936 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,25769804334,-110  request:: '/dubbo/com.lili.location.service.LocationService,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):10976 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,25769804335,-110  request:: '/dubbo/com.lili.location.service.LocationService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):11006 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,25769804335,0  request:: '/dubbo/com.lili.location.service.LocationService/configurators,T  response:: s{25769803895,25769803895,1442821532323,1442821532323,0,0,0,0,0,0,25769803895} 
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):11056 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,25769804335,0  request:: '/dubbo/com.lili.location.service.LocationService/configurators,T  response:: v{} 
2015-09-22 16:12:28  [ main:11056 ] - [ INFO ]   [DUBBO] Notify urls for subscribe url provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, urls: [empty://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ main:11076 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ main:11086 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Storing ApplicationContext in cache under key [[MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Spring test ApplicationContext cache statistics: [ContextCache@1b568b31 size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Processing injected method of bean 'com.lili.LocationTest': AutowiredFieldElement for private com.lili.location.service.LocationService com.lili.LocationTest.locationService
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 16:12:28  [ main:11096 ] - [ DEBUG ]  Autowiring by type from bean name 'com.lili.LocationTest' to bean named 'locationService'
2015-09-22 16:12:28  [ main:11106 ] - [ DEBUG ]  After test method: context [DefaultTestContext@2b89ee45 testClass = LocationTest, testInstance = com.lili.LocationTest@6c7a0a57, testMethod = addtest@LocationTest, testException = java.lang.NoSuchFieldException: serialVersionUID, mergedContextConfiguration = [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
2015-09-22 16:12:28  [ main:11106 ] - [ DEBUG ]  After test class: context [DefaultTestContext@2b89ee45 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 16:12:28  [ Thread-3:11106 ] - [ INFO ]  Closing org.springframework.context.support.GenericApplicationContext@21b5c5b3: startup date [Tue Sep 22 16:12:17 CST 2015]; root of context hierarchy
2015-09-22 16:12:28  [ DubboShutdownHook:11106 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ Thread-3:11106 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:12:28  [ DubboShutdownHook:11106 ] - [ INFO ]   [DUBBO] Close all registries [zookeeper://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=29644&timestamp=1442909538707], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ Thread-3:11106 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 16:12:28  [ DubboShutdownHook:11106 ] - [ INFO ]   [DUBBO] Destroy registry:zookeeper://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=29644&timestamp=1442909538707, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ Thread-3:11106 ] - [ DEBUG ]  Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3bbf1710: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 16:12:28  [ DubboShutdownHook:11106 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ Thread-3:11106 ] - [ DEBUG ]  Invoking destroy() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 16:12:28  [ Thread-3:11106 ] - [ INFO ]   [DUBBO] Unregister: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):11146 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,25769804336,0  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D29644%2526side%253Dprovider%2526timestamp%253D1442909538717,-1  response:: null
2015-09-22 16:12:28  [ Thread-3:11146 ] - [ INFO ]   [DUBBO] Unsubscribe: provider://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&category=configurators&check=false&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ Thread-3:11146 ] - [ DEBUG ]  Retrieved dependent beans for bean 'locationService': [com.lili.LocationTest]
2015-09-22 16:12:28  [ Thread-3:11146 ] - [ DEBUG ]  Invoking destroy() on bean with name 'mongoDbFactory'
2015-09-22 16:12:28  [ Thread-3:11146 ] - [ DEBUG ]  Retrieved dependent beans for bean '(inner bean)#294d5a82': [mongoDbFactory]
2015-09-22 16:12:28  [ Thread-3:11146 ] - [ DEBUG ]  Invoking destroy() on bean with name '(inner bean)#294d5a82'
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):11146 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 11,2  replyHeader:: 11,25769804337,-101  request:: '/dubbo/com.lili.location.service.LocationService/providers/dubbo%253A%252F%252F192.168.1.209%253A20880%252Fcom.lili.location.service.LocationService%253Fanyhost%253Dtrue%2526application%253Ddubbo-Server%2526dubbo%253D2.5.3%2526interface%253Dcom.lili.location.service.LocationService%2526methods%253DsaveTeacher%252CgetNearBy%2526pid%253D29644%2526side%253Dprovider%2526timestamp%253D1442909538717,-1  response:: null
2015-09-22 16:12:28  [ DubboShutdownHook:11146 ] - [ INFO ]   [DUBBO] Destroy unregister url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29644&side=provider&timestamp=1442909538717, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ DubboShutdownHook:11146 ] - [ DEBUG ]  Closing ZkClient...
2015-09-22 16:12:28  [ ZkClient-EventThread-20-115.159.82.23:2181:11146 ] - [ INFO ]  Terminate ZkClient event thread.
2015-09-22 16:12:28  [ DubboShutdownHook:11146 ] - [ DEBUG ]  Closing ZooKeeper connected to 115.159.82.23:2181
2015-09-22 16:12:28  [ DubboShutdownHook:11146 ] - [ DEBUG ]  Closing session: 0x4fd938b6850025
2015-09-22 16:12:28  [ DubboShutdownHook:11146 ] - [ DEBUG ]  Closing client for session: 0x4fd938b6850025
2015-09-22 16:12:28  [ main-SendThread(115.159.82.23:2181):11186 ] - [ DEBUG ]  Reading reply sessionid:0x4fd938b6850025, packet:: clientPath:null serverPath:null finished:false header:: 12,-11  replyHeader:: 12,25769804338,0  request:: null response:: null
2015-09-22 16:12:28  [ DubboShutdownHook:11186 ] - [ DEBUG ]  Disconnecting client for session: 0x4fd938b6850025
2015-09-22 16:12:28  [ DubboShutdownHook:11186 ] - [ INFO ]  Session: 0x4fd938b6850025 closed
2015-09-22 16:12:28  [ DubboShutdownHook:11186 ] - [ DEBUG ]  Closing ZkClient...done
2015-09-22 16:12:28  [ main-EventThread:11186 ] - [ INFO ]  EventThread shut down
2015-09-22 16:12:28  [ DubboShutdownHook:11186 ] - [ INFO ]   [DUBBO] Close dubbo server: /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:12:28  [ DubboShutdownHook:11186 ] - [ INFO ]   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.1.209:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:43  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 16:13:43  [ main:40 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@4e9222f0 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 16:13:43  [ main:40 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:50 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 16:13:43  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:13:43  [ main:70 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@16494e4a testClass = LocationTest, testInstance = com.lili.LocationTest@26b2e7b4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 16:13:43  [ main:80 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 16:13:43  [ main:80 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 16:13:43  [ main:166 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 16:13:43  [ main:168 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 16:13:43  [ main:169 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 16:13:43  [ main:212 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 16:13:43  [ main:230 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:13:43  [ main:262 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 16:13:43  [ main:262 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 16:13:43  [ main:262 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:13:43  [ main:302 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:13:43  [ main:313 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:13:43  [ main:323 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:13:43  [ main:334 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 16:13:43  [ main:383 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 16:13:43  [ main:383 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:386 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 16:13:43  [ main:386 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:387 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:387 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:388 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:388 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:389 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:389 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:390 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 16:13:43  [ main:390 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:390 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:391 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:391 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 16:13:43  [ main:391 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:392 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:392 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:393 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:13:43  [ main:393 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 16:13:43  [ main:444 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 16:13:43  [ main:444 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 16:13:43  [ main:444 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:13:43  [ main:444 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:13:43  [ main:464 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 16:13:43  [ main:497 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:13:43  [ main:504 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 16:13:43  [ main:536 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 16:13:43  [ main:536 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 16:13:43  [ main:536 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:13:43  [ main:536 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:13:43  [ main:546 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:13:43  [ main:556 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:13:43  [ main:566 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 16:13:43  [ main:566 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 16:13:43  [ main:576 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:13:44  [ main:615 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 16:13:44  [ main:615 ] - [ DEBUG ]  Loaded 19 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 16:13:44  [ main:617 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@107ad736: startup date [Tue Sep 22 16:13:44 CST 2015]; root of context hierarchy
2015-09-22 16:13:44  [ main:618 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@107ad736: org.springframework.beans.factory.support.DefaultListableBeanFactory@38881bd3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 16:13:44  [ main:635 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:13:44  [ main:635 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:13:44  [ main:650 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:653 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:13:44  [ main:719 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:13:44  [ main:719 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:13:44  [ main:720 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:751 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:13:44  [ main:752 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 16:13:44  [ main:754 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:13:44  [ main:754 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:13:44  [ main:755 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:760 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:13:44  [ main:762 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:762 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:763 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:764 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:764 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:764 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:765 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:765 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:765 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:13:44  [ main:765 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:13:44  [ main:770 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:776 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:13:44  [ main:776 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:13:44  [ main:777 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:13:44  [ main:777 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:777 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:13:44  [ main:777 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:13:44  [ main:778 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:13:44  [ main:778 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:778 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:13:44  [ main:783 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3f2a3527]
2015-09-22 16:13:44  [ main:785 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3fbcfba2]
2015-09-22 16:13:44  [ main:788 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@38881bd3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 16:13:44  [ main:788 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:13:44  [ main:788 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:789 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:13:44  [ main:789 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:13:44  [ main:789 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 16:13:44  [ main:789 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 16:13:44  [ main:799 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:13:44  [ main:799 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:803 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:13:44  [ main:805 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 16:13:44  [ main:806 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 16:13:44  [ main:838 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:838 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:838 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#294d5a82'
2015-09-22 16:13:44  [ main:858 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#294d5a82'
2015-09-22 16:13:44  [ main:1013 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#294d5a82'
2015-09-22 16:13:44  [ main:1014 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#1ee3b2dd'
2015-09-22 16:13:44  [ main:1020 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#1ee3b2dd'
2015-09-22 16:13:44  [ main:1022 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1024 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:1130 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1140 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1140 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1150 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 16:13:44  [ main:1160 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1170 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 16:13:44  [ main:1170 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:13:44  [ main:1170 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:13:44  [ main:1170 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1180 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:13:44  [ main:1180 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 16:13:44  [ main:1180 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 16:13:44  [ main:1180 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:13:44  [ main:1190 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:13:44  [ main:1220 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1320 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1340 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1374 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 16:13:44  [ main:1376 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 16:13:44  [ main:1377 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 16:13:44  [ main:1378 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:13:44  [ main:1379 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 16:13:44  [ main:1379 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:13:44  [ main:1379 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:13:44  [ main:1379 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:13:44  [ main:1380 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:1380 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 16:13:44  [ main:1380 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1380 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 16:13:44  [ main:1380 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:13:44  [ main:1381 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1383 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 16:13:44  [ main:1384 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1386 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:13:44  [ main:1387 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 16:13:44  [ main:1387 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 16:13:44  [ main:1387 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 16:13:44  [ main:1387 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:1387 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:13:44  [ main:1391 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 16:13:44  [ main:1392 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1392 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6fd0ff12]
2015-09-22 16:13:44  [ main:1402 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 16:13:44  [ main:1412 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:13:44  [ main:1412 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1484 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1494 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1504 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1514 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1514 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29324&side=provider&timestamp=1442909624828, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1514 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29324&side=provider&timestamp=1442909624828 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=29324&registry=zookeeper&timestamp=1442909624818, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1524 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1534 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1554 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1574 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:44  [ main:1594 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:45  [ main:1624 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:45  [ main:1654 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@51d0d06e] to prepare test instance [com.lili.LocationTest@26b2e7b4]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29324&side=provider&timestamp=1442909624828) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 16:13:45  [ main:1664 ] - [ DEBUG ]  After test class: context [DefaultTestContext@16494e4a testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 16:13:45  [ DubboShutdownHook:1664 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:45  [ DubboShutdownHook:1664 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:45  [ DubboShutdownHook:1664 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29324&side=provider&timestamp=1442909624828, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:13:45  [ DubboShutdownHook:1664 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=29324&side=provider&timestamp=1442909624828, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:35  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 16:15:35  [ main:40 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@4e9222f0 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 16:15:35  [ main:40 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:40 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 16:15:35  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 16:15:35  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:15:35  [ main:70 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@16494e4a testClass = LocationTest, testInstance = com.lili.LocationTest@26b2e7b4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 16:15:35  [ main:70 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 16:15:35  [ main:70 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 16:15:35  [ main:152 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 16:15:35  [ main:152 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 16:15:35  [ main:152 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 16:15:35  [ main:162 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 16:15:35  [ main:182 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:15:35  [ main:202 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 16:15:35  [ main:212 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 16:15:35  [ main:212 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:15:35  [ main:255 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:15:35  [ main:265 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:15:35  [ main:274 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:15:35  [ main:287 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:15:35  [ main:334 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 16:15:36  [ main:384 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 16:15:36  [ main:394 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 16:15:36  [ main:394 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:15:36  [ main:394 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:15:36  [ main:414 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 16:15:36  [ main:444 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:15:36  [ main:457 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 16:15:36  [ main:486 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 16:15:36  [ main:486 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 16:15:36  [ main:486 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:15:36  [ main:486 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:15:36  [ main:506 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:15:36  [ main:506 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:15:36  [ main:506 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 16:15:36  [ main:516 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 16:15:36  [ main:526 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:15:36  [ main:556 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 16:15:36  [ main:556 ] - [ DEBUG ]  Loaded 19 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 16:15:36  [ main:556 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@107ad736: startup date [Tue Sep 22 16:15:36 CST 2015]; root of context hierarchy
2015-09-22 16:15:36  [ main:556 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@107ad736: org.springframework.beans.factory.support.DefaultListableBeanFactory@38881bd3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 16:15:36  [ main:576 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:15:36  [ main:576 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:15:36  [ main:596 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:596 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:15:36  [ main:656 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:15:36  [ main:656 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:15:36  [ main:656 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:686 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:15:36  [ main:686 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 16:15:36  [ main:686 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:15:36  [ main:686 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:15:36  [ main:686 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:15:36  [ main:696 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5422e600]
2015-09-22 16:15:36  [ main:706 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@542ab4b1]
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@38881bd3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 16:15:36  [ main:716 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 16:15:36  [ main:735 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:15:36  [ main:736 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:739 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:15:36  [ main:742 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 16:15:36  [ main:743 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 16:15:36  [ main:768 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:768 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:768 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#7c702fb9'
2015-09-22 16:15:36  [ main:788 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#7c702fb9'
2015-09-22 16:15:36  [ main:928 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#7c702fb9'
2015-09-22 16:15:36  [ main:928 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#365b38a4'
2015-09-22 16:15:36  [ main:938 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#365b38a4'
2015-09-22 16:15:36  [ main:938 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:938 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:1040 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1050 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1050 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:1060 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:15:36  [ main:1070 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:15:36  [ main:1080 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1080 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:15:36  [ main:1080 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 16:15:36  [ main:1080 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 16:15:36  [ main:1080 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:15:36  [ main:1090 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:15:36  [ main:1120 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:36  [ main:1210 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:36  [ main:1230 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 16:15:36  [ main:1260 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 16:15:36  [ main:1270 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1280 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 16:15:36  [ main:1280 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 16:15:36  [ main:1280 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 16:15:36  [ main:1280 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 16:15:36  [ main:1280 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:15:36  [ main:1280 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@79322c02]
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 16:15:36  [ main:1290 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:15:36  [ main:1290 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:36  [ main:1360 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1380 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1390 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1400 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1400 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=30056&side=provider&timestamp=1442909736942, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1400 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=30056&side=provider&timestamp=1442909736942 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=30056&registry=zookeeper&timestamp=1442909736932, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1410 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1420 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1440 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1460 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1480 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1510 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ main:1540 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1c75afe5] to prepare test instance [com.lili.LocationTest@26b2e7b4]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=30056&side=provider&timestamp=1442909736942) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 16:15:37  [ main:1550 ] - [ DEBUG ]  After test class: context [DefaultTestContext@16494e4a testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2b89ee45 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 16:15:37  [ DubboShutdownHook:1550 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ DubboShutdownHook:1550 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ DubboShutdownHook:1550 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=30056&side=provider&timestamp=1442909736942, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:15:37  [ DubboShutdownHook:1550 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=30056&side=provider&timestamp=1442909736942, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:31  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 16:18:31  [ main:40 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@5c33e2dc declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 16:18:31  [ main:40 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:40 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 16:18:31  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 16:18:31  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:60 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:60 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 16:18:31  [ main:70 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@26b2e7b4 testClass = LocationTest, testInstance = com.lili.LocationTest@2b89ee45, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 16:18:31  [ main:70 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 16:18:31  [ main:70 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 16:18:32  [ main:152 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 16:18:32  [ main:152 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 16:18:32  [ main:152 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 16:18:32  [ main:162 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 16:18:32  [ main:182 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:18:32  [ main:202 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 16:18:32  [ main:212 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 16:18:32  [ main:212 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:18:32  [ main:242 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:18:32  [ main:259 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:18:32  [ main:268 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:18:32  [ main:279 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 16:18:32  [ main:314 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 16:18:32  [ main:314 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 16:18:32  [ main:324 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 16:18:32  [ main:364 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 16:18:32  [ main:374 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 16:18:32  [ main:374 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:18:32  [ main:374 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:18:32  [ main:394 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 16:18:32  [ main:424 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:18:32  [ main:424 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 16:18:32  [ main:454 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 16:18:32  [ main:454 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 16:18:32  [ main:454 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 16:18:32  [ main:464 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 16:18:32  [ main:474 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 16:18:32  [ main:484 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 16:18:32  [ main:484 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 16:18:32  [ main:494 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 16:18:32  [ main:504 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 16:18:32  [ main:524 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 16:18:32  [ main:524 ] - [ DEBUG ]  Loaded 19 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 16:18:32  [ main:534 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@70c722ad: startup date [Tue Sep 22 16:18:32 CST 2015]; root of context hierarchy
2015-09-22 16:18:32  [ main:534 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@70c722ad: org.springframework.beans.factory.support.DefaultListableBeanFactory@6fdad6a3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 16:18:32  [ main:544 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:18:32  [ main:544 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:18:32  [ main:564 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:564 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:18:32  [ main:624 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:18:32  [ main:624 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:18:32  [ main:624 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:654 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:18:32  [ main:654 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 16:18:32  [ main:664 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:18:32  [ main:664 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:18:32  [ main:664 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:664 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3f2a3527]
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3fbcfba2]
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6fdad6a3: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 16:18:32  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:694 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 16:18:32  [ main:694 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 16:18:32  [ main:694 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 16:18:32  [ main:694 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 16:18:32  [ main:704 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:18:32  [ main:704 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:704 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 16:18:32  [ main:704 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 16:18:32  [ main:704 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 16:18:32  [ main:735 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 16:18:32  [ main:735 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 16:18:32  [ main:735 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#294d5a82'
2015-09-22 16:18:32  [ main:755 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#294d5a82'
2015-09-22 16:18:32  [ main:895 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#294d5a82'
2015-09-22 16:18:32  [ main:895 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#437df757'
2015-09-22 16:18:32  [ main:905 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#437df757'
2015-09-22 16:18:32  [ main:905 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:915 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 16:18:32  [ main:1017 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1027 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:18:32  [ main:1027 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:18:32  [ main:1027 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 16:18:32  [ main:1037 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 16:18:32  [ main:1047 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1047 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 16:18:32  [ main:1047 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:18:32  [ main:1047 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:18:32  [ main:1057 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1057 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:18:32  [ main:1057 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 16:18:32  [ main:1057 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 16:18:32  [ main:1057 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:18:32  [ main:1067 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:18:32  [ main:1097 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1187 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1207 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 16:18:33  [ main:1227 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 16:18:33  [ main:1227 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 16:18:33  [ main:1237 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 16:18:33  [ main:1247 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:18:33  [ main:1247 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 16:18:33  [ main:1247 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 16:18:33  [ main:1247 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 16:18:33  [ main:1257 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 16:18:33  [ main:1267 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 16:18:33  [ main:1267 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 16:18:33  [ main:1267 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 16:18:33  [ main:1267 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@54b78bc]
2015-09-22 16:18:33  [ main:1267 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 16:18:33  [ main:1267 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 16:18:33  [ main:1267 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1337 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1357 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1367 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1377 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1377 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=26868&side=provider&timestamp=1442909913174, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1377 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=26868&side=provider&timestamp=1442909913174 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=26868&registry=zookeeper&timestamp=1442909913164, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1387 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1397 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1427 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1447 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1457 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1498 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ main:1519 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7b842c64] to prepare test instance [com.lili.LocationTest@2b89ee45]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=26868&side=provider&timestamp=1442909913174) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 16:18:33  [ main:1529 ] - [ DEBUG ]  After test class: context [DefaultTestContext@26b2e7b4 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 16:18:33  [ DubboShutdownHook:1529 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ DubboShutdownHook:1529 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ DubboShutdownHook:1529 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=26868&side=provider&timestamp=1442909913174, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 16:18:33  [ DubboShutdownHook:1529 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=26868&side=provider&timestamp=1442909913174, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:56  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 17:36:57  [ main:40 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@36b98809 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 17:36:57  [ main:50 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:50 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 17:36:57  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:36:57  [ main:70 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@1adccdc5 testClass = LocationTest, testInstance = com.lili.LocationTest@16494e4a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26b2e7b4 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 17:36:57  [ main:80 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@26b2e7b4 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 17:36:57  [ main:80 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@26b2e7b4 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 17:36:57  [ main:152 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 17:36:57  [ main:152 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 17:36:57  [ main:152 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 17:36:57  [ main:172 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 17:36:57  [ main:182 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 17:36:57  [ main:212 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 17:36:57  [ main:212 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 17:36:57  [ main:222 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 17:36:57  [ main:252 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 17:36:57  [ main:266 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 17:36:57  [ main:275 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 17:36:57  [ main:286 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:334 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:36:57  [ main:334 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 17:36:57  [ main:364 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 17:36:57  [ main:364 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class]
2015-09-22 17:36:57  [ main:374 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 17:36:57  [ main:374 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 17:36:57  [ main:374 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 17:36:57  [ main:394 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 17:36:57  [ main:414 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 17:36:57  [ main:424 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 17:36:57  [ main:454 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 17:36:57  [ main:454 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 17:36:57  [ main:454 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 17:36:57  [ main:454 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 17:36:57  [ main:464 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 17:36:57  [ main:474 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 17:36:57  [ main:474 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 17:36:57  [ main:484 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 17:36:57  [ main:494 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 17:36:57  [ main:514 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 17:36:57  [ main:514 ] - [ DEBUG ]  Loaded 20 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 17:36:57  [ main:524 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@14ea0724: startup date [Tue Sep 22 17:36:57 CST 2015]; root of context hierarchy
2015-09-22 17:36:57  [ main:524 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@14ea0724: org.springframework.beans.factory.support.DefaultListableBeanFactory@7e833a14: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 17:36:57  [ main:544 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:36:57  [ main:544 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:36:57  [ main:554 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:554 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:36:57  [ main:624 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:36:57  [ main:624 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:36:57  [ main:624 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:654 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:36:57  [ main:654 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 17:36:57  [ main:654 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:36:57  [ main:654 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:36:57  [ main:654 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:36:57  [ main:664 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2bd43389]
2015-09-22 17:36:57  [ main:674 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5431ccfe]
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e833a14: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 17:36:57  [ main:684 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 17:36:57  [ main:694 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 17:36:57  [ main:694 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:694 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 17:36:57  [ main:694 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 17:36:57  [ main:694 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 17:36:57  [ main:725 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 17:36:57  [ main:725 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 17:36:57  [ main:725 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#2cadd45e'
2015-09-22 17:36:57  [ main:745 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#2cadd45e'
2015-09-22 17:36:57  [ main:895 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#2cadd45e'
2015-09-22 17:36:57  [ main:895 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#689258c7'
2015-09-22 17:36:57  [ main:905 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#689258c7'
2015-09-22 17:36:57  [ main:905 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:905 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 17:36:57  [ main:1005 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:1005 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:36:57  [ main:1015 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 17:36:57  [ main:1015 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationServiceImp'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Creating instance of bean 'locationServiceImp'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Eagerly caching bean 'locationServiceImp' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Processing injected method of bean 'locationServiceImp': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Autowiring by type from bean name 'locationServiceImp' to bean named 'locationDao'
2015-09-22 17:36:57  [ main:1025 ] - [ DEBUG ]  Finished creating instance of bean 'locationServiceImp'
2015-09-22 17:36:57  [ main:1035 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 17:36:57  [ main:1035 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 17:36:57  [ main:1035 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 17:36:57  [ main:1035 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 17:36:57  [ main:1035 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:36:57  [ main:1035 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:36:58  [ main:1045 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1045 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:36:58  [ main:1045 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 17:36:58  [ main:1045 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 17:36:58  [ main:1055 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 17:36:58  [ main:1085 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1175 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1205 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 17:36:58  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:36:58  [ main:1235 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:36:58  [ main:1245 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 17:36:58  [ main:1245 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1245 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 17:36:58  [ main:1255 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 17:36:58  [ main:1255 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 17:36:58  [ main:1255 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 17:36:58  [ main:1255 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:36:58  [ main:1255 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 17:36:58  [ main:1265 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 17:36:58  [ main:1265 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 17:36:58  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:36:58  [ main:1265 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:36:58  [ main:1275 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2d290383]
2015-09-22 17:36:58  [ main:1275 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 17:36:58  [ main:1275 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 17:36:58  [ main:1275 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1345 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1355 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1365 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1385 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1385 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=23028&side=provider&timestamp=1442914618258, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1385 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=23028&side=provider&timestamp=1442914618258 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=23028&registry=zookeeper&timestamp=1442914618248, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1385 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1395 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1425 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1445 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1455 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1485 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ main:1525 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1f911e14] to prepare test instance [com.lili.LocationTest@16494e4a]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=23028&side=provider&timestamp=1442914618258) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 17:36:58  [ main:1525 ] - [ DEBUG ]  After test class: context [DefaultTestContext@1adccdc5 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26b2e7b4 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 17:36:58  [ DubboShutdownHook:1525 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ DubboShutdownHook:1525 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ DubboShutdownHook:1525 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=23028&side=provider&timestamp=1442914618258, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:36:58  [ DubboShutdownHook:1525 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=23028&side=provider&timestamp=1442914618258, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:49  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 17:51:49  [ main:47 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@45500f57 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 17:51:49  [ main:47 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:47 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 17:51:49  [ main:47 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:62 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 17:51:49  [ main:78 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@61129920 testClass = LocationTest, testInstance = com.lili.LocationTest@c0335aa, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 17:51:49  [ main:78 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 17:51:49  [ main:78 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 17:51:49  [ main:140 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 17:51:49  [ main:156 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 17:51:49  [ main:156 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 17:51:49  [ main:156 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 17:51:49  [ main:171 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 17:51:49  [ main:203 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 17:51:49  [ main:203 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 17:51:49  [ main:203 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 17:51:49  [ main:234 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 17:51:49  [ main:249 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 17:51:49  [ main:249 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 17:51:49  [ main:265 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:312 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 17:51:49  [ main:312 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:312 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:312 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:312 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 17:51:49  [ main:312 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 17:51:49  [ main:327 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 17:51:49  [ main:327 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class]
2015-09-22 17:51:49  [ main:343 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 17:51:49  [ main:343 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 17:51:49  [ main:343 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 17:51:49  [ main:359 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 17:51:49  [ main:390 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 17:51:49  [ main:390 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 17:51:49  [ main:421 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 17:51:49  [ main:421 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 17:51:49  [ main:421 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 17:51:49  [ main:421 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 17:51:49  [ main:437 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 17:51:49  [ main:437 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 17:51:49  [ main:437 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 17:51:49  [ main:452 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 17:51:49  [ main:452 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 17:51:49  [ main:483 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 17:51:49  [ main:483 ] - [ DEBUG ]  Loaded 20 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 17:51:49  [ main:483 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@1571baf0: startup date [Tue Sep 22 17:51:49 CST 2015]; root of context hierarchy
2015-09-22 17:51:49  [ main:483 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@1571baf0: org.springframework.beans.factory.support.DefaultListableBeanFactory@63f8126c: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 17:51:49  [ main:499 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:51:49  [ main:499 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:51:49  [ main:515 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:515 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:51:49  [ main:561 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:51:49  [ main:561 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:51:49  [ main:561 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:593 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:51:49  [ main:593 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 17:51:49  [ main:593 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:51:49  [ main:593 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:51:49  [ main:593 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@464d0214]
2015-09-22 17:51:49  [ main:608 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6e9799d1]
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@63f8126c: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 17:51:49  [ main:624 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 17:51:49  [ main:639 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 17:51:49  [ main:639 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 17:51:49  [ main:639 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#6b9c0a9d'
2015-09-22 17:51:49  [ main:655 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#6b9c0a9d'
2015-09-22 17:51:49  [ main:780 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#6b9c0a9d'
2015-09-22 17:51:49  [ main:780 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#ecdede5'
2015-09-22 17:51:49  [ main:780 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#ecdede5'
2015-09-22 17:51:49  [ main:780 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:780 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 17:51:49  [ main:859 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:51:49  [ main:874 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationServiceImp'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Creating instance of bean 'locationServiceImp'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Eagerly caching bean 'locationServiceImp' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Processing injected method of bean 'locationServiceImp': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Autowiring by type from bean name 'locationServiceImp' to bean named 'locationDao'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Finished creating instance of bean 'locationServiceImp'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 17:51:49  [ main:890 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 17:51:49  [ main:906 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 17:51:49  [ main:921 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 17:51:49  [ main:937 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1030 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1046 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:51:50  [ main:1077 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 17:51:50  [ main:1093 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 17:51:50  [ main:1108 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 17:51:50  [ main:1108 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 17:51:50  [ main:1108 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 17:51:50  [ main:1108 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@759f7305]
2015-09-22 17:51:50  [ main:1108 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 17:51:50  [ main:1108 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 17:51:50  [ main:1108 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1171 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1186 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1202 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1202 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1202 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=6832&side=provider&timestamp=1442915510177, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1202 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=6832&side=provider&timestamp=1442915510177 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=6832&registry=zookeeper&timestamp=1442915510177, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1218 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1218 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1249 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1264 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1264 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1296 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ main:1327 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@63ab5457] to prepare test instance [com.lili.LocationTest@c0335aa]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=6832&side=provider&timestamp=1442915510177) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 17:51:50  [ main:1327 ] - [ DEBUG ]  After test class: context [DefaultTestContext@61129920 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 17:51:50  [ DubboShutdownHook:1327 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ DubboShutdownHook:1327 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ DubboShutdownHook:1327 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=6832&side=provider&timestamp=1442915510177, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 17:51:50  [ DubboShutdownHook:1327 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=6832&side=provider&timestamp=1442915510177, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:46  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 18:33:46  [ main:42 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@5f494cc8 declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 18:33:46  [ main:44 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:46 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 18:33:46  [ main:49 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 18:33:46  [ main:62 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:63 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:64 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:65 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:65 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:65 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:67 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:68 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:33:46  [ main:70 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@61129920 testClass = LocationTest, testInstance = com.lili.LocationTest@c0335aa, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 18:33:46  [ main:71 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 18:33:46  [ main:71 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 18:33:46  [ main:145 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 18:33:46  [ main:147 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 18:33:46  [ main:147 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 18:33:46  [ main:156 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 18:33:46  [ main:171 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:33:46  [ main:195 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 18:33:46  [ main:201 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 18:33:46  [ main:202 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:33:46  [ main:233 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:33:46  [ main:242 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:33:46  [ main:250 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:33:46  [ main:260 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 18:33:46  [ main:296 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 18:33:46  [ main:296 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:299 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 18:33:46  [ main:299 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:299 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:300 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:300 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:300 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:301 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:301 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:302 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 18:33:46  [ main:302 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:302 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:303 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:303 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 18:33:46  [ main:303 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:303 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:304 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:304 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:33:46  [ main:305 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 18:33:47  [ main:328 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 18:33:47  [ main:329 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class]
2015-09-22 18:33:47  [ main:340 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 18:33:47  [ main:341 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:33:47  [ main:343 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:33:47  [ main:358 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 18:33:47  [ main:381 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:33:47  [ main:386 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 18:33:47  [ main:413 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 18:33:47  [ main:414 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 18:33:47  [ main:415 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:33:47  [ main:418 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:33:47  [ main:430 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:33:47  [ main:434 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:33:47  [ main:438 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 18:33:47  [ main:444 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 18:33:47  [ main:452 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:33:47  [ main:475 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 18:33:47  [ main:476 ] - [ DEBUG ]  Loaded 20 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 18:33:47  [ main:478 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@1571baf0: startup date [Tue Sep 22 18:33:47 CST 2015]; root of context hierarchy
2015-09-22 18:33:47  [ main:478 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@1571baf0: org.springframework.beans.factory.support.DefaultListableBeanFactory@4450c45f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 18:33:47  [ main:493 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:33:47  [ main:493 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:33:47  [ main:506 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:508 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:33:47  [ main:566 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:33:47  [ main:566 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:33:47  [ main:567 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:594 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:33:47  [ main:594 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 18:33:47  [ main:597 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:33:47  [ main:597 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:33:47  [ main:597 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:602 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:33:47  [ main:604 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:604 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:605 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:605 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:606 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:606 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:606 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:607 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:607 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:33:47  [ main:607 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:33:47  [ main:610 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:610 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:33:47  [ main:611 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:33:47  [ main:611 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:33:47  [ main:611 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:611 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:33:47  [ main:611 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:33:47  [ main:612 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:33:47  [ main:612 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:612 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:33:47  [ main:614 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e6f75a4]
2015-09-22 18:33:47  [ main:616 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@220c8eb2]
2015-09-22 18:33:47  [ main:619 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4450c45f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 18:33:47  [ main:619 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:33:47  [ main:619 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:619 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:33:47  [ main:619 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:33:47  [ main:620 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 18:33:47  [ main:620 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 18:33:47  [ main:623 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:33:47  [ main:624 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:626 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:33:47  [ main:629 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 18:33:47  [ main:630 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 18:33:47  [ main:638 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:638 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:640 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#5f679f6'
2015-09-22 18:33:47  [ main:657 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#5f679f6'
2015-09-22 18:33:47  [ main:782 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#5f679f6'
2015-09-22 18:33:47  [ main:783 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#a15ace5'
2015-09-22 18:33:47  [ main:787 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#a15ace5'
2015-09-22 18:33:47  [ main:789 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:790 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:868 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:875 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:875 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:880 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:885 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:885 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:885 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 18:33:47  [ main:885 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 18:33:47  [ main:886 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:886 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:887 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:889 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 18:33:47  [ main:889 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 18:33:47  [ main:889 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 18:33:47  [ main:890 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 18:33:47  [ main:890 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationServiceImp'
2015-09-22 18:33:47  [ main:890 ] - [ DEBUG ]  Creating instance of bean 'locationServiceImp'
2015-09-22 18:33:47  [ main:891 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:33:47  [ main:892 ] - [ DEBUG ]  Eagerly caching bean 'locationServiceImp' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:893 ] - [ DEBUG ]  Processing injected method of bean 'locationServiceImp': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:33:47  [ main:894 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:33:47  [ main:894 ] - [ DEBUG ]  Autowiring by type from bean name 'locationServiceImp' to bean named 'locationDao'
2015-09-22 18:33:47  [ main:895 ] - [ DEBUG ]  Finished creating instance of bean 'locationServiceImp'
2015-09-22 18:33:47  [ main:895 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 18:33:47  [ main:895 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 18:33:47  [ main:898 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:903 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 18:33:47  [ main:904 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:33:47  [ main:904 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:33:47  [ main:907 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:911 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:33:47  [ main:912 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 18:33:47  [ main:912 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 18:33:47  [ main:915 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:920 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 18:33:47  [ main:921 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 18:33:47  [ main:921 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 18:33:47  [ main:921 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:33:47  [ main:921 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:922 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:33:47  [ main:922 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:33:47  [ main:922 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 18:33:47  [ main:922 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 18:33:47  [ main:922 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:33:47  [ main:923 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:33:47  [ main:949 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1039 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1060 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:1080 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 18:33:47  [ main:1082 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 18:33:47  [ main:1083 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 18:33:47  [ main:1084 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:33:47  [ main:1084 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 18:33:47  [ main:1084 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 18:33:47  [ main:1085 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:33:47  [ main:1086 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:1087 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 18:33:47  [ main:1088 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:1090 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:33:47  [ main:1090 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 18:33:47  [ main:1090 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 18:33:47  [ main:1090 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 18:33:47  [ main:1091 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:1091 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:33:47  [ main:1093 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 18:33:47  [ main:1097 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:1100 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 18:33:47  [ main:1102 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 18:33:47  [ main:1102 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 18:33:47  [ main:1102 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 18:33:47  [ main:1103 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:33:47  [ main:1103 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 18:33:47  [ main:1106 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 18:33:47  [ main:1108 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 18:33:47  [ main:1108 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:33:47  [ main:1108 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:33:47  [ main:1109 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3111b59c]
2015-09-22 18:33:47  [ main:1110 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 18:33:47  [ main:1118 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:33:47  [ main:1119 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1179 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1190 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1202 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1212 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1213 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13772&side=provider&timestamp=1442918027813, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1213 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13772&side=provider&timestamp=1442918027813 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=13772&registry=zookeeper&timestamp=1442918027804, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1218 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1226 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1246 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1264 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1275 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:47  [ main:1303 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:48  [ main:1329 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@506f8577] to prepare test instance [com.lili.LocationTest@c0335aa]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13772&side=provider&timestamp=1442918027813) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 18:33:48  [ main:1334 ] - [ DEBUG ]  After test class: context [DefaultTestContext@61129920 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26b8320f testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 18:33:48  [ DubboShutdownHook:1335 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:48  [ DubboShutdownHook:1336 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:48  [ DubboShutdownHook:1336 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13772&side=provider&timestamp=1442918027813, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:33:48  [ DubboShutdownHook:1336 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13772&side=provider&timestamp=1442918027813, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:16  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 18:34:16  [ main:44 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@7e4736ab declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 18:34:16  [ main:46 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 18:34:16  [ main:47 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 18:34:17  [ main:51 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 18:34:17  [ main:65 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:66 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:67 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:67 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:68 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:68 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:71 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:71 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:17  [ main:74 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@6c7a0a57 testClass = LocationTest, testInstance = com.lili.LocationTest@403d0d64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@683a412e testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 18:34:17  [ main:74 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@683a412e testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 18:34:17  [ main:74 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@683a412e testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 18:34:17  [ main:154 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 18:34:17  [ main:156 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 18:34:17  [ main:157 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 18:34:17  [ main:166 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 18:34:17  [ main:182 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:17  [ main:209 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 18:34:17  [ main:215 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 18:34:17  [ main:216 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:17  [ main:250 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:34:17  [ main:259 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:34:17  [ main:268 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:17  [ main:280 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 18:34:17  [ main:321 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 18:34:17  [ main:322 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 18:34:17  [ main:325 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:325 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:325 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:326 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:326 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:327 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:327 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:328 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 18:34:17  [ main:328 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:328 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:329 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:329 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 18:34:17  [ main:329 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:330 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:330 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:330 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:17  [ main:331 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 18:34:17  [ main:369 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 18:34:17  [ main:370 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class]
2015-09-22 18:34:17  [ main:375 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 18:34:17  [ main:376 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:17  [ main:378 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:17  [ main:394 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 18:34:17  [ main:422 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:17  [ main:428 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 18:34:17  [ main:458 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 18:34:17  [ main:459 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 18:34:17  [ main:460 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:17  [ main:462 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:17  [ main:475 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:34:17  [ main:479 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:34:17  [ main:484 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 18:34:17  [ main:490 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 18:34:17  [ main:498 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:17  [ main:524 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 18:34:17  [ main:525 ] - [ DEBUG ]  Loaded 20 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 18:34:17  [ main:527 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@24c67c0f: startup date [Tue Sep 22 18:34:17 CST 2015]; root of context hierarchy
2015-09-22 18:34:17  [ main:528 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@24c67c0f: org.springframework.beans.factory.support.DefaultListableBeanFactory@4c25a0f7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 18:34:17  [ main:545 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:17  [ main:545 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:17  [ main:559 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:561 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:17  [ main:622 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:17  [ main:622 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:17  [ main:623 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:655 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:17  [ main:655 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 18:34:17  [ main:658 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:17  [ main:658 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:17  [ main:658 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:664 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:17  [ main:666 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:666 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:667 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:668 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:668 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:668 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:669 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:669 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:669 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:17  [ main:669 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:17  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:674 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:17  [ main:674 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:17  [ main:674 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:17  [ main:674 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:675 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:17  [ main:675 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:17  [ main:675 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:17  [ main:675 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:675 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:17  [ main:678 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@118cc659]
2015-09-22 18:34:17  [ main:681 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5d2195f1]
2015-09-22 18:34:17  [ main:684 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4c25a0f7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 18:34:17  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:17  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:17  [ main:684 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:17  [ main:685 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 18:34:17  [ main:685 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 18:34:17  [ main:694 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:34:17  [ main:694 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:697 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:34:17  [ main:701 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 18:34:17  [ main:701 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 18:34:17  [ main:725 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:17  [ main:726 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 18:34:17  [ main:728 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#5e36ba3b'
2015-09-22 18:34:17  [ main:746 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#5e36ba3b'
2015-09-22 18:34:17  [ main:881 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#5e36ba3b'
2015-09-22 18:34:17  [ main:882 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#7d0d60e4'
2015-09-22 18:34:17  [ main:887 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#7d0d60e4'
2015-09-22 18:34:17  [ main:906 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:908 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 18:34:17  [ main:987 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:998 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:17  [ main:998 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:34:17  [ main:1003 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1008 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 18:34:17  [ main:1008 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:34:17  [ main:1009 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 18:34:17  [ main:1009 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 18:34:17  [ main:1009 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:17  [ main:1009 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:17  [ main:1011 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1013 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 18:34:17  [ main:1013 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 18:34:17  [ main:1013 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 18:34:17  [ main:1014 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 18:34:17  [ main:1014 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationServiceImp'
2015-09-22 18:34:17  [ main:1014 ] - [ DEBUG ]  Creating instance of bean 'locationServiceImp'
2015-09-22 18:34:17  [ main:1015 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:17  [ main:1016 ] - [ DEBUG ]  Eagerly caching bean 'locationServiceImp' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1017 ] - [ DEBUG ]  Processing injected method of bean 'locationServiceImp': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:17  [ main:1018 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:34:17  [ main:1018 ] - [ DEBUG ]  Autowiring by type from bean name 'locationServiceImp' to bean named 'locationDao'
2015-09-22 18:34:17  [ main:1018 ] - [ DEBUG ]  Finished creating instance of bean 'locationServiceImp'
2015-09-22 18:34:17  [ main:1018 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 18:34:17  [ main:1018 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 18:34:17  [ main:1021 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1027 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 18:34:17  [ main:1027 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:17  [ main:1027 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:17  [ main:1030 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1034 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:17  [ main:1034 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 18:34:17  [ main:1035 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 18:34:17  [ main:1038 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1043 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 18:34:17  [ main:1043 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 18:34:17  [ main:1043 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 18:34:17  [ main:1044 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:17  [ main:1044 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 18:34:17  [ main:1044 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:17  [ main:1045 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:34:17  [ main:1045 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 18:34:17  [ main:1045 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 18:34:17  [ main:1045 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:17  [ main:1045 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:18  [ main:1072 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1162 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1182 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 18:34:18  [ main:1204 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 18:34:18  [ main:1206 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 18:34:18  [ main:1207 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 18:34:18  [ main:1208 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:18  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 18:34:18  [ main:1209 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:18  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:18  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:18  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:18  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 18:34:18  [ main:1210 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:18  [ main:1210 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 18:34:18  [ main:1210 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:34:18  [ main:1211 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:18  [ main:1212 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 18:34:18  [ main:1213 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 18:34:18  [ main:1215 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:34:18  [ main:1215 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 18:34:18  [ main:1215 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 18:34:18  [ main:1216 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 18:34:18  [ main:1216 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:18  [ main:1216 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:18  [ main:1219 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 18:34:18  [ main:1225 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 18:34:18  [ main:1228 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 18:34:18  [ main:1230 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 18:34:18  [ main:1230 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 18:34:18  [ main:1230 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 18:34:18  [ main:1232 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:18  [ main:1232 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 18:34:18  [ main:1236 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 18:34:18  [ main:1238 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 18:34:18  [ main:1238 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:18  [ main:1238 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:18  [ main:1240 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@52af2320]
2015-09-22 18:34:18  [ main:1240 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 18:34:18  [ main:1244 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:18  [ main:1244 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1312 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1325 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1338 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1350 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1351 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13856&side=provider&timestamp=1442918058211, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1351 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13856&side=provider&timestamp=1442918058211 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=13856&registry=zookeeper&timestamp=1442918058200, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1357 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1366 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1389 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1413 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1426 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1457 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ main:1487 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@74cc2255] to prepare test instance [com.lili.LocationTest@403d0d64]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13856&side=provider&timestamp=1442918058211) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 18:34:18  [ main:1494 ] - [ DEBUG ]  After test class: context [DefaultTestContext@6c7a0a57 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@683a412e testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 18:34:18  [ DubboShutdownHook:1495 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ DubboShutdownHook:1495 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ DubboShutdownHook:1496 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13856&side=provider&timestamp=1442918058211, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:18  [ DubboShutdownHook:1496 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13856&side=provider&timestamp=1442918058211, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:23  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 18:34:23  [ main:42 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@5c33e2dc declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 18:34:23  [ main:44 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:46 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 18:34:23  [ main:50 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 18:34:23  [ main:64 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:64 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:66 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:66 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:67 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:67 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:69 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:70 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:23  [ main:72 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@26b2e7b4 testClass = LocationTest, testInstance = com.lili.LocationTest@2b89ee45, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 18:34:23  [ main:73 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 18:34:23  [ main:73 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 18:34:23  [ main:152 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 18:34:23  [ main:154 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 18:34:23  [ main:154 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 18:34:23  [ main:164 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 18:34:24  [ main:179 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:24  [ main:206 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 18:34:24  [ main:212 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 18:34:24  [ main:214 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:24  [ main:246 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:34:24  [ main:255 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:34:24  [ main:264 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:24  [ main:276 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 18:34:24  [ main:317 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 18:34:24  [ main:317 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:320 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 18:34:24  [ main:320 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:321 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:321 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:321 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:322 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:322 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:322 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:323 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 18:34:24  [ main:323 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:324 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:324 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 18:34:24  [ main:325 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:325 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:325 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:326 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:24  [ main:326 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 18:34:24  [ main:358 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 18:34:24  [ main:360 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class]
2015-09-22 18:34:24  [ main:364 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 18:34:24  [ main:366 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:24  [ main:368 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:24  [ main:384 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 18:34:24  [ main:411 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:24  [ main:417 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 18:34:24  [ main:447 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 18:34:24  [ main:448 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 18:34:24  [ main:449 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:24  [ main:451 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:24  [ main:464 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:34:24  [ main:468 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:34:24  [ main:472 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 18:34:24  [ main:478 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 18:34:24  [ main:486 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:24  [ main:513 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 18:34:24  [ main:513 ] - [ DEBUG ]  Loaded 20 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 18:34:24  [ main:515 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@70c722ad: startup date [Tue Sep 22 18:34:24 CST 2015]; root of context hierarchy
2015-09-22 18:34:24  [ main:516 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@70c722ad: org.springframework.beans.factory.support.DefaultListableBeanFactory@320e59bd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 18:34:24  [ main:534 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:24  [ main:534 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:24  [ main:547 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:549 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:24  [ main:610 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:24  [ main:611 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:24  [ main:612 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:642 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:24  [ main:643 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 18:34:24  [ main:646 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:24  [ main:646 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:24  [ main:646 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:652 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:24  [ main:654 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:654 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:655 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:655 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:656 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:656 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:656 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:657 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:657 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:24  [ main:657 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:24  [ main:661 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:661 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:24  [ main:661 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:24  [ main:662 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:24  [ main:662 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:662 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:24  [ main:662 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:24  [ main:662 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:24  [ main:663 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:663 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:24  [ main:666 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@bb6f5f]
2015-09-22 18:34:24  [ main:668 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@52baaac5]
2015-09-22 18:34:24  [ main:671 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@320e59bd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 18:34:24  [ main:671 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:24  [ main:671 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:672 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:24  [ main:672 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:24  [ main:672 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 18:34:24  [ main:672 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 18:34:24  [ main:679 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:34:24  [ main:679 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:682 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:34:24  [ main:686 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 18:34:24  [ main:686 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 18:34:24  [ main:711 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:24  [ main:711 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 18:34:24  [ main:713 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#48517e3c'
2015-09-22 18:34:24  [ main:731 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#48517e3c'
2015-09-22 18:34:24  [ main:865 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#48517e3c'
2015-09-22 18:34:24  [ main:866 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#71538614'
2015-09-22 18:34:24  [ main:874 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#71538614'
2015-09-22 18:34:24  [ main:876 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:878 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 18:34:24  [ main:965 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:974 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:24  [ main:974 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:34:24  [ main:979 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:984 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 18:34:24  [ main:984 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:34:24  [ main:984 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 18:34:24  [ main:985 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 18:34:24  [ main:985 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:24  [ main:985 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:24  [ main:987 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:988 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 18:34:24  [ main:989 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 18:34:24  [ main:989 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 18:34:24  [ main:989 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 18:34:24  [ main:989 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationServiceImp'
2015-09-22 18:34:24  [ main:989 ] - [ DEBUG ]  Creating instance of bean 'locationServiceImp'
2015-09-22 18:34:24  [ main:991 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:24  [ main:991 ] - [ DEBUG ]  Eagerly caching bean 'locationServiceImp' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:992 ] - [ DEBUG ]  Processing injected method of bean 'locationServiceImp': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:24  [ main:993 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:34:24  [ main:993 ] - [ DEBUG ]  Autowiring by type from bean name 'locationServiceImp' to bean named 'locationDao'
2015-09-22 18:34:24  [ main:993 ] - [ DEBUG ]  Finished creating instance of bean 'locationServiceImp'
2015-09-22 18:34:24  [ main:993 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 18:34:24  [ main:993 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 18:34:24  [ main:996 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:1002 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 18:34:24  [ main:1002 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:24  [ main:1002 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:24  [ main:1005 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:1009 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:24  [ main:1010 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 18:34:24  [ main:1010 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 18:34:24  [ main:1013 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:1018 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 18:34:24  [ main:1019 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 18:34:24  [ main:1019 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 18:34:24  [ main:1019 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:24  [ main:1019 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 18:34:24  [ main:1019 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:24  [ main:1020 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:34:24  [ main:1020 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 18:34:24  [ main:1020 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 18:34:24  [ main:1020 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:24  [ main:1020 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:24  [ main:1047 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:24  [ main:1139 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:24  [ main:1159 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 18:34:25  [ main:1181 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 18:34:25  [ main:1183 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 18:34:25  [ main:1184 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 18:34:25  [ main:1185 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:25  [ main:1185 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:25  [ main:1186 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 18:34:25  [ main:1187 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:34:25  [ main:1187 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:25  [ main:1189 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 18:34:25  [ main:1190 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 18:34:25  [ main:1192 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:34:25  [ main:1192 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 18:34:25  [ main:1192 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 18:34:25  [ main:1192 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 18:34:25  [ main:1192 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:25  [ main:1193 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:25  [ main:1196 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 18:34:25  [ main:1200 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 18:34:25  [ main:1204 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 18:34:25  [ main:1206 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 18:34:25  [ main:1206 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 18:34:25  [ main:1206 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 18:34:25  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:25  [ main:1209 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 18:34:25  [ main:1223 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 18:34:25  [ main:1225 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 18:34:25  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:25  [ main:1225 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:25  [ main:1227 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@73dab220]
2015-09-22 18:34:25  [ main:1227 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 18:34:25  [ main:1230 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:25  [ main:1230 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1297 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1311 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1324 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1335 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1335 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13624&side=provider&timestamp=1442918065072, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1335 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13624&side=provider&timestamp=1442918065072 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=13624&registry=zookeeper&timestamp=1442918065062, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1342 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1351 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1375 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1394 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1406 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1438 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ main:1468 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@14cd1be] to prepare test instance [com.lili.LocationTest@2b89ee45]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13624&side=provider&timestamp=1442918065072) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 18:34:25  [ main:1474 ] - [ DEBUG ]  After test class: context [DefaultTestContext@26b2e7b4 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c7a0a57 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 18:34:25  [ DubboShutdownHook:1476 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ DubboShutdownHook:1476 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ DubboShutdownHook:1476 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13624&side=provider&timestamp=1442918065072, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:25  [ DubboShutdownHook:1477 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=13624&side=provider&timestamp=1442918065072, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:36  [ main:0 ] - [ DEBUG ]  SpringJUnit4ClassRunner constructor called with [class com.lili.LocationTest].
2015-09-22 18:34:36  [ main:44 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@527308ce declaringClass = 'com.lili.LocationTest', classes = '{}', locations = '{classpath:/spring-init.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-09-22 18:34:36  [ main:46 ] - [ DEBUG ]  Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:48 ] - [ DEBUG ]  @TestExecutionListeners is not present for class [com.lili.LocationTest]: using defaults.
2015-09-22 18:34:36  [ main:51 ] - [ INFO ]  Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2015-09-22 18:34:36  [ main:66 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:67 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:68 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:68 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:69 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:69 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:72 ] - [ DEBUG ]  Retrieved @ProfileValueSourceConfiguration [null] for test class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:72 ] - [ DEBUG ]  Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.lili.LocationTest]
2015-09-22 18:34:36  [ main:75 ] - [ DEBUG ]  Performing dependency injection for test context [[DefaultTestContext@2b89ee45 testClass = LocationTest, testInstance = com.lili.LocationTest@6c7a0a57, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-09-22 18:34:36  [ main:75 ] - [ DEBUG ]  Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-09-22 18:34:36  [ main:75 ] - [ DEBUG ]  Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-09-22 18:34:36  [ main:150 ] - [ DEBUG ]  Adding [systemProperties] PropertySource with lowest search precedence
2015-09-22 18:34:36  [ main:152 ] - [ DEBUG ]  Adding [systemEnvironment] PropertySource with lowest search precedence
2015-09-22 18:34:36  [ main:152 ] - [ DEBUG ]  Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-09-22 18:34:36  [ main:162 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-init.xml]
2015-09-22 18:34:36  [ main:177 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:36  [ main:203 ] - [ DEBUG ]  Loading schema mappings from [META-INF/spring.schemas]
2015-09-22 18:34:36  [ main:209 ] - [ DEBUG ]  Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd=org/springframework/data/mongodb/config/spring-mongo-1.3.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd=org/springframework/data/mongodb/config/spring-mongo-1.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd=org/springframework/data/mongodb/config/spring-mongo-1.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd=org/springframework/data/mongodb/config/spring-mongo-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd=org/springframework/data/mongodb/config/spring-mongo-1.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo.xsd=org/springframework/data/mongodb/config/spring-mongo-1.7.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd=org/springframework/data/mongodb/config/spring-mongo-1.4.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.0.xsd}
2015-09-22 18:34:36  [ main:211 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:36  [ main:244 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:34:36  [ main:253 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:34:36  [ main:261 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:36  [ main:272 ] - [ DEBUG ]  Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/data/mongo=org.springframework.data.mongodb.repository.config.MongoRepositoryConfigNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-09-22 18:34:36  [ main:311 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili]
2015-09-22 18:34:36  [ main:311 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/test-classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:314 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili]
2015-09-22 18:34:36  [ main:314 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:315 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:315 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:315 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:316 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:316 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:316 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp] for files matching pattern [D:/svn/develop/server/trunk/chelizi/location/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:317 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili]
2015-09-22 18:34:36  [ main:317 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:318 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:318 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util] for files matching pattern [D:/svn/develop/server/trunk/chelizi/common/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:318 ] - [ DEBUG ]  Looking for matching resources in directory tree [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili]
2015-09-22 18:34:36  [ main:319 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:319 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:319 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:320 ] - [ DEBUG ]  Searching directory [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo] for files matching pattern [D:/svn/develop/server/trunk/chelizi/intapi/target/classes/com/lili/**/*.class]
2015-09-22 18:34:36  [ main:320 ] - [ DEBUG ]  Resolved location pattern [classpath*:com/lili/**/*.class] to resources [file [D:\svn\develop\server\trunk\chelizi\location\target\test-classes\com\lili\LocationTest.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\StudentPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\Po\TeacherPo.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class], file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class], file [D:\svn\develop\server\trunk\chelizi\common\target\classes\com\lili\common\util\BeanCopy.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\service\LocationService.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\StudentVo.class], file [D:\svn\develop\server\trunk\chelizi\intapi\target\classes\com\lili\location\vo\TeacherVo.class]]
2015-09-22 18:34:36  [ main:352 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\dao\service\LocationDao.class]
2015-09-22 18:34:36  [ main:353 ] - [ DEBUG ]  Identified candidate component class: file [D:\svn\develop\server\trunk\chelizi\location\target\classes\com\lili\location\service\imp\LocationServiceImp.class]
2015-09-22 18:34:36  [ main:358 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-dubbo.xml]
2015-09-22 18:34:36  [ main:359 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:36  [ main:361 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:36  [ main:378 ] - [ DEBUG ]  Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2015-09-22 18:34:36  [ main:404 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:36  [ main:410 ] - [ INFO ]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2015-09-22 18:34:36  [ main:440 ] - [ DEBUG ]  Imported 5 bean definitions from relative location [spring-dubbo.xml]
2015-09-22 18:34:36  [ main:441 ] - [ INFO ]  Loading XML bean definitions from class path resource [spring-mongodb.xml]
2015-09-22 18:34:36  [ main:442 ] - [ DEBUG ]  Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-09-22 18:34:36  [ main:444 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-09-22 18:34:36  [ main:457 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-09-22 18:34:36  [ main:461 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-09-22 18:34:36  [ main:465 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd] in classpath: org/springframework/data/mongodb/config/spring-mongo-1.5.xsd
2015-09-22 18:34:36  [ main:471 ] - [ DEBUG ]  Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.7.xsd
2015-09-22 18:34:36  [ main:480 ] - [ DEBUG ]  Loading bean definitions
2015-09-22 18:34:36  [ main:507 ] - [ DEBUG ]  Imported 9 bean definitions from relative location [spring-mongodb.xml]
2015-09-22 18:34:36  [ main:507 ] - [ DEBUG ]  Loaded 20 bean definitions from location pattern [classpath:/spring-init.xml]
2015-09-22 18:34:36  [ main:510 ] - [ INFO ]  Refreshing org.springframework.context.support.GenericApplicationContext@21b5c5b3: startup date [Tue Sep 22 18:34:36 CST 2015]; root of context hierarchy
2015-09-22 18:34:36  [ main:511 ] - [ DEBUG ]  Bean factory for org.springframework.context.support.GenericApplicationContext@21b5c5b3: org.springframework.beans.factory.support.DefaultListableBeanFactory@4c25a0f7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate]; root of factory hierarchy
2015-09-22 18:34:36  [ main:528 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:36  [ main:528 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:36  [ main:544 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:546 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:36  [ main:606 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:36  [ main:606 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:36  [ main:607 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:635 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:36  [ main:635 ] - [ INFO ]  Loading properties file from class path resource [mongodb.properties]
2015-09-22 18:34:36  [ main:638 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:36  [ main:638 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:36  [ main:638 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:644 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:36  [ main:646 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:646 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:647 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:647 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:648 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:648 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:648 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:649 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:649 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:36  [ main:649 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:36  [ main:653 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:654 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:36  [ main:654 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:36  [ main:654 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:36  [ main:654 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:655 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:36  [ main:655 ] - [ DEBUG ]  Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:36  [ main:655 ] - [ DEBUG ]  Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:36  [ main:655 ] - [ DEBUG ]  Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:655 ] - [ DEBUG ]  Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:36  [ main:658 ] - [ DEBUG ]  Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@118cc659]
2015-09-22 18:34:36  [ main:660 ] - [ DEBUG ]  Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5d2195f1]
2015-09-22 18:34:36  [ main:664 ] - [ DEBUG ]  Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4c25a0f7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,locationDao,locationServiceImp,dubbo-Server,com.alibaba.dubbo.config.RegistryConfig,dubbo,locationService,com.lili.location.service.LocationService,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.springframework.beans.factory.config.CustomEditorConfigurer#0,mongoDbFactory,mongoTemplate,converter.mongoMappingContext,isNewStrategyFactory,indexCreationHelper,converter,gridFsTemplate,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2015-09-22 18:34:36  [ main:664 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-09-22 18:34:36  [ main:664 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:664 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-09-22 18:34:36  [ main:664 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-09-22 18:34:36  [ main:665 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationDao'
2015-09-22 18:34:36  [ main:665 ] - [ DEBUG ]  Creating instance of bean 'locationDao'
2015-09-22 18:34:36  [ main:673 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.dao.service.LocationDao]: AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:34:36  [ main:673 ] - [ DEBUG ]  Eagerly caching bean 'locationDao' to allow for resolving potential circular references
2015-09-22 18:34:36  [ main:676 ] - [ DEBUG ]  Processing injected method of bean 'locationDao': AutowiredFieldElement for private org.springframework.data.mongodb.core.MongoTemplate com.lili.location.dao.service.LocationDao.mongoTemplate
2015-09-22 18:34:36  [ main:679 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoTemplate'
2015-09-22 18:34:36  [ main:679 ] - [ DEBUG ]  Creating instance of bean 'mongoTemplate'
2015-09-22 18:34:36  [ main:706 ] - [ DEBUG ]  Creating shared instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:36  [ main:706 ] - [ DEBUG ]  Creating instance of bean 'mongoDbFactory'
2015-09-22 18:34:36  [ main:709 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#5afca7cf'
2015-09-22 18:34:36  [ main:729 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name '(inner bean)#5afca7cf'
2015-09-22 18:34:37  [ main:864 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#5afca7cf'
2015-09-22 18:34:37  [ main:864 ] - [ DEBUG ]  Creating instance of bean '(inner bean)#2287c52c'
2015-09-22 18:34:37  [ main:871 ] - [ DEBUG ]  Finished creating instance of bean '(inner bean)#2287c52c'
2015-09-22 18:34:37  [ main:872 ] - [ DEBUG ]  Eagerly caching bean 'mongoDbFactory' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:874 ] - [ DEBUG ]  Finished creating instance of bean 'mongoDbFactory'
2015-09-22 18:34:37  [ main:964 ] - [ DEBUG ]  Eagerly caching bean 'mongoTemplate' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:974 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:974 ] - [ DEBUG ]  Creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:979 ] - [ DEBUG ]  Eagerly caching bean 'converter.mongoMappingContext' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:984 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:984 ] - [ DEBUG ]  Finished creating instance of bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:984 ] - [ DEBUG ]  Creating shared instance of singleton bean 'indexCreationHelper'
2015-09-22 18:34:37  [ main:985 ] - [ DEBUG ]  Creating instance of bean 'indexCreationHelper'
2015-09-22 18:34:37  [ main:985 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:985 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:37  [ main:987 ] - [ DEBUG ]  Eagerly caching bean 'indexCreationHelper' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:989 ] - [ DEBUG ]  Finished creating instance of bean 'indexCreationHelper'
2015-09-22 18:34:37  [ main:989 ] - [ DEBUG ]  Finished creating instance of bean 'mongoTemplate'
2015-09-22 18:34:37  [ main:989 ] - [ DEBUG ]  Autowiring by type from bean name 'locationDao' to bean named 'mongoTemplate'
2015-09-22 18:34:37  [ main:990 ] - [ DEBUG ]  Finished creating instance of bean 'locationDao'
2015-09-22 18:34:37  [ main:990 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationServiceImp'
2015-09-22 18:34:37  [ main:990 ] - [ DEBUG ]  Creating instance of bean 'locationServiceImp'
2015-09-22 18:34:37  [ main:991 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:37  [ main:992 ] - [ DEBUG ]  Eagerly caching bean 'locationServiceImp' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:993 ] - [ DEBUG ]  Processing injected method of bean 'locationServiceImp': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:37  [ main:994 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:34:37  [ main:994 ] - [ DEBUG ]  Autowiring by type from bean name 'locationServiceImp' to bean named 'locationDao'
2015-09-22 18:34:37  [ main:994 ] - [ DEBUG ]  Finished creating instance of bean 'locationServiceImp'
2015-09-22 18:34:37  [ main:994 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo-Server'
2015-09-22 18:34:37  [ main:994 ] - [ DEBUG ]  Creating instance of bean 'dubbo-Server'
2015-09-22 18:34:37  [ main:997 ] - [ DEBUG ]  Eagerly caching bean 'dubbo-Server' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1002 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo-Server'
2015-09-22 18:34:37  [ main:1003 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:37  [ main:1003 ] - [ DEBUG ]  Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:37  [ main:1006 ] - [ DEBUG ]  Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1010 ] - [ DEBUG ]  Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:37  [ main:1011 ] - [ DEBUG ]  Creating shared instance of singleton bean 'dubbo'
2015-09-22 18:34:37  [ main:1011 ] - [ DEBUG ]  Creating instance of bean 'dubbo'
2015-09-22 18:34:37  [ main:1014 ] - [ DEBUG ]  Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1019 ] - [ DEBUG ]  Finished creating instance of bean 'dubbo'
2015-09-22 18:34:37  [ main:1019 ] - [ DEBUG ]  Creating shared instance of singleton bean 'locationService'
2015-09-22 18:34:37  [ main:1020 ] - [ DEBUG ]  Creating instance of bean 'locationService'
2015-09-22 18:34:37  [ main:1020 ] - [ DEBUG ]  Registered injected element on class [com.lili.location.service.imp.LocationServiceImp]: AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:37  [ main:1020 ] - [ DEBUG ]  Eagerly caching bean 'locationService' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1021 ] - [ DEBUG ]  Processing injected method of bean 'locationService': AutowiredFieldElement for private com.lili.location.dao.service.LocationDao com.lili.location.service.imp.LocationServiceImp.locationDao
2015-09-22 18:34:37  [ main:1021 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationDao'
2015-09-22 18:34:37  [ main:1021 ] - [ DEBUG ]  Autowiring by type from bean name 'locationService' to bean named 'locationDao'
2015-09-22 18:34:37  [ main:1021 ] - [ DEBUG ]  Finished creating instance of bean 'locationService'
2015-09-22 18:34:37  [ main:1021 ] - [ DEBUG ]  Creating shared instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:37  [ main:1022 ] - [ DEBUG ]  Creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:37  [ main:1048 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1138 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1156 ] - [ DEBUG ]  Eagerly caching bean 'com.lili.location.service.LocationService' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1179 ] - [ DEBUG ]  Returning cached instance of singleton bean 'locationService'
2015-09-22 18:34:37  [ main:1181 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'com.lili.location.service.LocationService'
2015-09-22 18:34:37  [ main:1182 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo-Server'
2015-09-22 18:34:37  [ main:1182 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2015-09-22 18:34:37  [ main:1183 ] - [ DEBUG ]  Returning cached instance of singleton bean 'dubbo'
2015-09-22 18:34:37  [ main:1183 ] - [ DEBUG ]  Finished creating instance of bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:37  [ main:1183 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0'
2015-09-22 18:34:37  [ main:1183 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.beans.factory.config.CustomEditorConfigurer#0'
2015-09-22 18:34:37  [ main:1184 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:37  [ main:1184 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoTemplate'
2015-09-22 18:34:37  [ main:1184 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:1184 ] - [ DEBUG ]  Creating shared instance of singleton bean 'isNewStrategyFactory'
2015-09-22 18:34:37  [ main:1184 ] - [ DEBUG ]  Creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:34:37  [ main:1185 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:1187 ] - [ DEBUG ]  No property editor [org.springframework.data.mapping.context.PersistentEntitiesEditor] found for type org.springframework.data.mapping.context.PersistentEntities according to 'Editor' suffix convention
2015-09-22 18:34:37  [ main:1188 ] - [ DEBUG ]  Eagerly caching bean 'isNewStrategyFactory' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1190 ] - [ DEBUG ]  Finished creating instance of bean 'isNewStrategyFactory'
2015-09-22 18:34:37  [ main:1190 ] - [ DEBUG ]  Returning cached instance of singleton bean 'indexCreationHelper'
2015-09-22 18:34:37  [ main:1191 ] - [ DEBUG ]  Creating shared instance of singleton bean 'converter'
2015-09-22 18:34:37  [ main:1191 ] - [ DEBUG ]  Creating instance of bean 'converter'
2015-09-22 18:34:37  [ main:1191 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:37  [ main:1191 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter.mongoMappingContext'
2015-09-22 18:34:37  [ main:1194 ] - [ DEBUG ]  No property editor [org.springframework.data.mongodb.core.convert.DbRefResolverEditor] found for type org.springframework.data.mongodb.core.convert.DbRefResolver according to 'Editor' suffix convention
2015-09-22 18:34:37  [ main:1199 ] - [ DEBUG ]  Eagerly caching bean 'converter' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1202 ] - [ DEBUG ]  Invoking afterPropertiesSet() on bean with name 'converter'
2015-09-22 18:34:37  [ main:1205 ] - [ DEBUG ]  Finished creating instance of bean 'converter'
2015-09-22 18:34:37  [ main:1205 ] - [ DEBUG ]  Creating shared instance of singleton bean 'gridFsTemplate'
2015-09-22 18:34:37  [ main:1205 ] - [ DEBUG ]  Creating instance of bean 'gridFsTemplate'
2015-09-22 18:34:37  [ main:1207 ] - [ DEBUG ]  Returning cached instance of singleton bean 'mongoDbFactory'
2015-09-22 18:34:37  [ main:1207 ] - [ DEBUG ]  Returning cached instance of singleton bean 'converter'
2015-09-22 18:34:37  [ main:1220 ] - [ DEBUG ]  Eagerly caching bean 'gridFsTemplate' to allow for resolving potential circular references
2015-09-22 18:34:37  [ main:1222 ] - [ DEBUG ]  Finished creating instance of bean 'gridFsTemplate'
2015-09-22 18:34:37  [ main:1222 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-09-22 18:34:37  [ main:1223 ] - [ DEBUG ]  Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2015-09-22 18:34:37  [ main:1224 ] - [ DEBUG ]  Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@133a2d5f]
2015-09-22 18:34:37  [ main:1224 ] - [ DEBUG ]  Returning cached instance of singleton bean 'lifecycleProcessor'
2015-09-22 18:34:37  [ main:1227 ] - [ DEBUG ]  Returning cached instance of singleton bean 'com.lili.location.service.LocationService'
2015-09-22 18:34:37  [ main:1228 ] - [ INFO ]   [DUBBO] The service ready on spring started. service: com.lili.location.service.LocationService, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1297 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1310 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1323 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1334 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1335 ] - [ INFO ]   [DUBBO] Export dubbo service com.lili.location.service.LocationService to url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=15544&side=provider&timestamp=1442918077382, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1335 ] - [ INFO ]   [DUBBO] Register dubbo service com.lili.location.service.LocationService url dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=15544&side=provider&timestamp=1442918077382 to registry registry://115.159.82.23:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-Server&dubbo=2.5.3&pid=15544&registry=zookeeper&timestamp=1442918077372, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1336 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1349 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1372 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1392 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1404 ] - [ DEBUG ]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1434 ] - [ DEBUG ]   [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ main:1465 ] - [ ERROR ]  Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@55d6471d] to prepare test instance [com.lili.LocationTest@6c7a0a57]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:103)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:98)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: com.alibaba.dubbo.rpc.RpcException: Fail to start server(url: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=15544&side=provider&timestamp=1442918077382) Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:289)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.openServer(DubboProtocol.java:266)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.export(DubboProtocol.java:253)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:56)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:55)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.doLocalExport(RegistryProtocol.java:153)
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:107)
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:54)
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:53)
	at com.alibaba.dubbo.rpc.Protocol$Adpative.export(Protocol$Adpative.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:485)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:281)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:242)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:143)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:109)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:778)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:102)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:69)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:95)
	... 25 more
Caused by: com.alibaba.dubbo.remoting.RemotingException: Failed to bind NettyServer on /192.168.1.209:20880, cause: Failed to bind to: /0.0.0.0:20880
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:72)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.<init>(NettyServer.java:63)
	at com.alibaba.dubbo.remoting.transport.netty.NettyTransporter.bind(NettyTransporter.java:33)
	at com.alibaba.dubbo.remoting.Transporter$Adpative.bind(Transporter$Adpative.java)
	at com.alibaba.dubbo.remoting.Transporters.bind(Transporters.java:48)
	at com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchanger.bind(HeaderExchanger.java:41)
	at com.alibaba.dubbo.remoting.exchange.Exchangers.bind(Exchangers.java:63)
	at com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.createServer(DubboProtocol.java:287)
	... 50 more
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /0.0.0.0:20880
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:303)
	at com.alibaba.dubbo.remoting.transport.netty.NettyServer.doOpen(NettyServer.java:94)
	at com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(AbstractServer.java:67)
	... 57 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.bind(NioServerSocketPipelineSink.java:148)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleServerSocket(NioServerSocketPipelineSink.java:100)
	at org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:74)
	at org.jboss.netty.channel.Channels.bind(Channels.java:468)
	at org.jboss.netty.channel.AbstractChannel.bind(AbstractChannel.java:192)
	at org.jboss.netty.bootstrap.ServerBootstrap$Binder.channelOpen(ServerBootstrap.java:348)
	at org.jboss.netty.channel.Channels.fireChannelOpen(Channels.java:176)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannel.<init>(NioServerSocketChannel.java:85)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:142)
	at org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.newChannel(NioServerSocketChannelFactory.java:90)
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:282)
	... 59 more
2015-09-22 18:34:37  [ main:1472 ] - [ DEBUG ]  After test class: context [DefaultTestContext@2b89ee45 testClass = LocationTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@403d0d64 testClass = LocationTest, locations = '{classpath:/spring-init.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], dirtiesContext [false].
2015-09-22 18:34:37  [ DubboShutdownHook:1473 ] - [ INFO ]   [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ DubboShutdownHook:1474 ] - [ INFO ]   [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ DubboShutdownHook:1474 ] - [ INFO ]   [DUBBO] Unexport service: dubbo://192.168.1.209:20880/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=15544&side=provider&timestamp=1442918077382, dubbo version: 2.5.3, current host: 127.0.0.1
2015-09-22 18:34:37  [ DubboShutdownHook:1474 ] - [ INFO ]   [DUBBO] Unexport service: injvm://127.0.0.1/com.lili.location.service.LocationService?anyhost=true&application=dubbo-Server&dubbo=2.5.3&interface=com.lili.location.service.LocationService&methods=saveTeacher,getNearBy&pid=15544&side=provider&timestamp=1442918077382, dubbo version: 2.5.3, current host: 127.0.0.1
