<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.finance.mapper.dao.common.BankCardVerifyDao">
	<resultMap id="BaseResultMap" type="com.lili.finance.vo.BankCardVerifyVo">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
		<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
		<result column="bank_type" property="bankType" jdbcType="INTEGER" />
		<result column="card_bin" property="cardBin" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="checker" property="checker" jdbcType="VARCHAR" />
		<result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
		<result column="updater" property="updater" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="is_del" property="isDel" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="prov" property="prov" jdbcType="VARCHAR" />
    	<result column="city" property="city" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="ArrayResultMap" type="com.lili.finance.vo.BankCardVerifyVo">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
		<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
		<result column="bank_type" property="bankType" jdbcType="INTEGER" />
		<result column="card_bin" property="cardBin" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="checker" property="checker" jdbcType="VARCHAR" />
		<result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
		<result column="updater" property="updater" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="is_del" property="isDel" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="idNumber" property="idNumber" jdbcType="VARCHAR" />
	</resultMap>
	

	<sql id="Base_Column_List">
		id, user_type, user_id, bank_no, bank_name, bank_type, card_bin, name,	mobile, status,
    create_time, checker, check_time, updater, update_time, is_del, remark, prov, city
	</sql>
	
	<select id="queryBankInfoList" resultMap="BaseResultMap" >
		select
			<include refid="Base_Column_List" />
		from t_u_bankcard_verify
			where 1=1
			<trim suffixOverrides=",">
				<if test="userId != null and userId != ''">
					and user_id = #{userId}
				</if>
				<if test="userType != null and userType != ''">
					and user_type = #{userType}
				</if>
			</trim>
			and is_del=0
			order by create_time desc
	</select>
	
	<select id="queryBankList" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select
			<include refid="Base_Column_List" />
		from t_u_bankcard_verify
			where 1=1 
			<trim suffixOverrides=",">
				<if test="_parameter != null and _parameter != ''">
					and id in (${_parameter})
				</if>
				<if test="_parameter == null or _parameter == ''">
					and id in ('')
				</if>
			</trim>
			and is_del=0
			order by create_time desc
	</select>
	
	<select id="queryBoundInfoList" resultMap="BaseResultMap" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		select
			<include refid="Base_Column_List" />
		from t_u_bankcard_verify
			where 1=1
			<trim suffixOverrides=",">
				<if test="name != null and name != ''">
					and name = #{name}
				</if>
				<if test="status != null and status != '' or status==0">
					and status = #{status}
				</if>
				<if test="startTime != null and startTime != ''">
					<![CDATA[ and create_time >= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i:%s') ]]>
				</if>
				<if test="endTime != null and endTime != ''">
					<![CDATA[ and create_time <= DATE_ADD(DATE_FORMAT(#{endTime},'%Y-%m-%d %H:%i:%s'), INTERVAL 1 DAY)  ]]>
				</if>
			</trim>
			order by create_time desc
	</select>
	
	<select id="queryBoundInfoLimitList" resultMap="ArrayResultMap" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		select
			<include refid="Base_Column_List" />,
			(CASE 
            WHEN 	b.user_type=1  THEN (select idNumber from t_u_coach c where c.coachId = b.user_id)
            WHEN 	b.user_type=2 THEN (select idNumber from t_u_student s where  s.studentId = b.user_id)
				ELSE 0
				END
			)as idNumber
		from t_u_bankcard_verify b
			where 1=1
			<trim suffixOverrides=",">
				<if test="name != null and name != ''">
					and b.name = #{name}
				</if>
				<if test="status != null and status != '' or status==0">
					and b.status = #{status}
				</if>
				<if test="startTime != null and startTime != ''">
					<![CDATA[ and b.create_time >= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i:%s') ]]>
				</if>
				<if test="endTime != null and endTime != ''">
					<![CDATA[ and b.create_time <= DATE_ADD(DATE_FORMAT(#{endTime},'%Y-%m-%d %H:%i:%s'), INTERVAL 1 DAY)  ]]>
				</if>
			</trim>
			order by b.create_time desc
			limit 0,20000
	</select>
	
  <update id="batchUpdateStatusList"  parameterType="java.util.List">
       <foreach collection="list" item="item" index="index" open="" close="" separator=";">
             update t_u_bankcard_verify 
                <set>
						checker='${item.checker}',
					    remark='${item.remark}',
						check_time =NOW(),
						status=${item.status}
                </set>
                <where>  
		       		 id=${item.id}
		     </where> 
       </foreach>
    </update>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_u_bankcard_verify
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		insert into t_u_bankcard_verify (id, user_type, user_id,
		bank_no, bank_name, bank_type,
		card_bin, name, mobile,
		status, create_time, checker,
		check_time, updater, update_time,
      is_del, remark, prov, 
      city)
		values (#{id,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER},
		#{userId,jdbcType=BIGINT},
		#{bankNo,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankType,jdbcType=INTEGER},
		#{cardBin,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{checker,jdbcType=VARCHAR},
		#{checkTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP},
		#{isDel,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}), #{prov,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertSelective" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		insert into t_u_bankcard_verify
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="bankNo != null">
				bank_no,
			</if>
			<if test="bankName != null">
				bank_name,
			</if>
			<if test="bankType != null">
				bank_type,
			</if>
			<if test="cardBin != null">
				card_bin,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="checker != null">
				checker,
			</if>
			<if test="checkTime != null">
				check_time,
			</if>
			<if test="updater != null">
				updater,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isDel != null">
				is_del,
			</if>
			<if test="remark != null">
				remark,
			</if>
	       <if test="prov != null" >
	         prov,
	       </if>
	       <if test="city != null" >
	         city,
	       </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="bankNo != null">
				#{bankNo,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				#{bankName,jdbcType=VARCHAR},
			</if>
			<if test="bankType != null">
				#{bankType,jdbcType=INTEGER},
			</if>
			<if test="cardBin != null">
				#{cardBin,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checker != null">
				#{checker,jdbcType=VARCHAR},
			</if>
			<if test="checkTime != null">
				#{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updater != null">
				#{updater,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDel != null">
				#{isDel,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
	      <if test="prov != null" >
	        #{prov,jdbcType=VARCHAR},
	      </if>
	      <if test="city != null" >
	        #{city,jdbcType=VARCHAR},
	      </if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		update t_u_bankcard_verify
		<set>
			<if test="userType != null">
				user_type = #{userType,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="bankNo != null">
				bank_no = #{bankNo,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				bank_name = #{bankName,jdbcType=VARCHAR},
			</if>
			<if test="bankType != null">
				bank_type = #{bankType,jdbcType=INTEGER},
			</if>
			<if test="cardBin != null">
				card_bin = #{cardBin,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checker != null">
				checker = #{checker,jdbcType=VARCHAR},
			</if>
			<if test="checkTime != null">
				check_time = #{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updater != null">
				updater = #{updater,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
	      <if test="prov != null" >
	        prov = #{prov,jdbcType=VARCHAR},
	      </if>
	      <if test="city != null" >
	        city = #{city,jdbcType=VARCHAR},
	      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		update t_u_bankcard_verify
			set user_type = #{userType,jdbcType=INTEGER},
			user_id = #{userId,jdbcType=BIGINT},
			bank_no = #{bankNo,jdbcType=VARCHAR},
			bank_name = #{bankName,jdbcType=VARCHAR},
			bank_type = #{bankType,jdbcType=INTEGER},
			card_bin = #{cardBin,jdbcType=INTEGER},
			name = #{name,jdbcType=VARCHAR},
			mobile = #{mobile,jdbcType=VARCHAR},
			status = #{status,jdbcType=INTEGER},
			create_time = #{createTime,jdbcType=TIMESTAMP},
			checker = #{checker,jdbcType=VARCHAR},
			check_time = #{checkTime,jdbcType=TIMESTAMP},
			updater = #{updater,jdbcType=VARCHAR},
			update_time = #{updateTime,jdbcType=TIMESTAMP},
			is_del = #{isDel,jdbcType=INTEGER},
		      remark = #{remark,jdbcType=VARCHAR},
		      prov = #{prov,jdbcType=VARCHAR},
		      city = #{city,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateByUserId" parameterType="com.lili.finance.vo.BankCardVerifyVo">
		update t_u_bankcard_verify
		<set>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT} and 
			user_type = #{userType,jdbcType=INTEGER} and 
			bank_no = #{bankNo,jdbcType=VARCHAR}
	</update>
</mapper>