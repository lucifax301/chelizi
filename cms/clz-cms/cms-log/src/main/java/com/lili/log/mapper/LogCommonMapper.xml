<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lili.log.mapper.dao.LogCommonMapper">
	<resultMap id="BaseResultMap" type="com.lili.log.model.LogCommon">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="menu_id" property="menuId" jdbcType="INTEGER" />
		<result column="schoolId" property="schoolId" jdbcType="INTEGER" />
		<result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="action" property="action" jdbcType="TINYINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
		<result column="channel" property="channel" jdbcType="TINYINT" />
		<result column="ip" property="ip" jdbcType="VARCHAR" />
		<result column="relate_id" property="relateId" jdbcType="VARCHAR" />
		<result column="table_id" property="tableId" jdbcType="INTEGER" />
		<result column="relate_table" property="relateTable" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="detail" property="detail" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, menu_id, menu_name, url, action, user_name, user_id,
		operate_time,
		channel, ip,
		relate_id, table_id, relate_table, status,
		remark,schoolId,detail
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_log_common
		where id = #{id,jdbcType=INTEGER}
	 	and schoolId = #{schoolId} 
	</select>

	<select id="findBatch" resultMap="BaseResultMap" >
		select
				<include refid="Base_Column_List" />
		from t_log_common
			where 1=1
			<trim suffixOverrides=",">
				<if test="menuId != null and menuId != ''">
					and menu_id = #{menuId}
				</if>
				<if test="url != null and url != ''">
					and url = #{url}
				</if>
				<if test="relateId != null and relateId != ''">
					and relate_id = #{relateId}
				</if>
			</trim>
			order by operate_time desc
			
	</select>

	<insert id="inertLogList"  parameterType="java.util.List">
		insert into t_log_common (menu_id, menu_name, url, action, user_name, user_id,
			channel, ip, relate_id, table_id, relate_table, status, remark,detail ) values
		 <foreach collection="list" item="item" index="index" open="" close="" separator=",">
				(#{item.menuId},#{item.menuName},#{item.url},#{item.action},#{item.userName},
				#{item.userId},#{item.channel},#{item.ip},#{item.relateId},#{item.tableId},#{item.relateTable},#{item.status},#{item.remark},#{item.detail})
		</foreach>
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_log_common where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.lili.log.model.LogCommon">
		insert into t_log_common (id,
		menu_id, menu_name,
		url, action, user_name,
		user_id, operate_time,
		channel,
		ip, relate_id, table_id,
		relate_table, status, remark
		)
		values
		(#{id,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER},
		#{menuName,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{action,jdbcType=TINYINT}, #{userName,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR},
		#{operateTime,jdbcType=TIMESTAMP}, #{channel,jdbcType=TINYINT},
		#{ip,jdbcType=VARCHAR}, #{relateId,jdbcType=VARCHAR},
		#{tableId,jdbcType=INTEGER},
		#{relateTable,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}
		#{remark,jdbcType=VARCHAR})
	</insert>

	
	<insert id="addOne" parameterType="com.lili.log.model.LogCommon"
		useGeneratedKeys="true" keyProperty="id">
		insert into t_log_common
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="menuId != null">
				menu_id,
			</if>
			<if test="menuName != null">
				menu_name,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="action != null">
				action,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="operateTime != null">
				operate_time,
			</if>
			<if test="channel != null">
				channel,
			</if>
			<if test="ip != null">
				ip,
			</if>
			<if test="relateId != null">
				relate_id,
			</if>
			<if test="tableId != null">
				table_id,
			</if>
			<if test="relateTable != null">
				relate_table,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="detail != null">
				detail,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="menuId != null">
				#{menuId,jdbcType=INTEGER},
			</if>
			<if test="menuName != null">
				#{menuName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="action != null">
				#{action,jdbcType=TINYINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="operateTime != null">
				#{operateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="channel != null">
				#{channel,jdbcType=TINYINT},
			</if>
			<if test="ip != null">
				#{ip,jdbcType=VARCHAR},
			</if>
			<if test="relateId != null">
				#{relateId,jdbcType=VARCHAR},
			</if>
			<if test="tableId != null">
				#{tableId,jdbcType=INTEGER},
			</if>
			<if test="relateTable != null">
				#{relateTable,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="detail != null">
				#{detail,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	

	<update id="updateByPrimaryKeySelective" parameterType="com.lili.log.model.LogCommon">
		update t_log_common
		<set>
			<if test="menuId != null">
				menu_id = #{menuId,jdbcType=INTEGER},
			</if>
			<if test="menuName != null">
				menu_name = #{menuName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="action != null">
				action = #{action,jdbcType=TINYINT},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="operateTime != null">
				operate_time = #{operateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="channel != null">
				channel = #{channel,jdbcType=TINYINT},
			</if>
			<if test="ip != null">
				ip = #{ip,jdbcType=VARCHAR},
			</if>
			<if test="relateId != null">
				relate_id = #{relateId,jdbcType=VARCHAR},
			</if>
			<if test="tableId != null">
				table_id = #{tableId,jdbcType=INTEGER},
			</if>
			<if test="relateTable != null">
				relate_table = #{relateTable,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.lili.log.model.LogCommon">
		update
		t_log_common
		set menu_id = #{menuId,jdbcType=INTEGER},
		menu_name =
		#{menuName,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		action =
		#{action,jdbcType=TINYINT},
		user_name = #{userName,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=VARCHAR},
		operate_time =
		#{operateTime,jdbcType=TIMESTAMP},
		channel =
		#{channel,jdbcType=TINYINT},
		ip = #{ip,jdbcType=VARCHAR},
		relate_id =
		#{relateId,jdbcType=VARCHAR},
		table_id = #{tableId,jdbcType=INTEGER},
		relate_table = #{relateTable,jdbcType=VARCHAR},
		status =
		#{status,jdbcType=TINYINT},
		remark = #{remark,jdbcType=VARCHAR}
		where id
		= #{id,jdbcType=INTEGER}
	</update>

</mapper>